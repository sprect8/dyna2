{"version":3,"sources":["../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/chart.js/src/elements/index.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/lodash/isEqual.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/lodash/find.js","../node_modules/lodash/_createFind.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/chartjs-color/node_modules/color-convert/index.js","../node_modules/chartjs-color/node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","process","d","__webpack_exports__","Pie","Line","Bar","Radar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","args","Array","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","type","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","_this2","a","configMerge","currentDatasets","config","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","Doughnut","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","Polar","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","defaults","color","Element","configuration","extend","initialize","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","ilen","actual","origin","c0","c1","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","Arc","Point","Rectangle","filterByPosition","array","where","v","sortByWeight","reverse","_tmpIndex_","sort","b","v0","v1","weight","addBox","chart","item","boxes","fullWidth","push","removeBox","layoutItem","index","configure","prop","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","each","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","Math","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","formatters","isArray","linear","tickValue","ticks","delta","abs","floor","logDelta","log10","tickString","numDecimal","min","toFixed","logarithmic","remain","pow","toExponential","baseIsEqual","other","noop","uid","isNullOrUndef","toString","isObject","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","loopable","len","arrayEquals","a0","a1","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","find","createFind","baseIteratee","isArrayLike","findIndexFunc","collection","predicate","iterable","iteratee","baseFindIndex","toInteger","nativeMax","toFinite","result","remainder","toNumber","INFINITY","MAX_INTEGER","Chart","elements","Interaction","layouts","platform","Ticks","register","window","Legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","convert","string","Color","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mixinColor","p","w1","w2","toJSON","slice","spaces","maxes","getValues","space","charAt","capped","chans","round","sname","svalues","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","isDatasetVisible","getDatasetMeta","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","datasetIndex","_index","modes","single","_datasetIndex","x-axis","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","clear","count","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","opts","global","_invalidate","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","mode","animationDuration","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","ctx","clearRect","roundedRect","radius","rx","ry","moveTo","lineTo","quadraticCurveTo","rect","drawPoint","style","edgeLength","xOffset","yOffset","size","isNaN","beginPath","arc","closePath","fill","SQRT2","fillRect","strokeRect","offset","leftX","topY","sideSize","stroke","drawImage","clipArea","area","save","clip","unclipArea","restore","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","toLineHeight","matches","match","resolve","inputs","context","parseMaxStyle","styleValue","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","scaleService","getScaleDefaults","scale","slen","filterCallback","filter","filtered","findIndex","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","reduce","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distanceBetweenPoints","aliasPixel","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","getMaximumWidth","container","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","str","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","backgroundColor","borderColor","borderWidth","inLabelRange","vm","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","draw","_chart","sA","eA","strokeStyle","lineWidth","fillStyle","lineJoin","globalDefaults","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","x1","x2","y1","halfWidth","base","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","defineProperty","get","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","expando","resizer","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","animation","duration","onProgress","onComplete","Animation","currentStep","numSteps","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","cancelAnimation","startDigest","startTime","Date","now","framesToDrop","advance","endTime","positionIsHorizontal","types","instances","labels","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scales","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","tooltip","newOptions","_options","tooltips","updateConfig","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","getElementsAtEventForMode","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","enabled","changed","handleEvent","bufferedRequest","hoverOptions","active","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","res","resyncElements","removeHoverStyle","elementOpts","custom","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","labelsFromTicks","getLineValue","offsetGridLines","lineValue","getPixelForTick","gridLines","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","computeTextSize","tick","parseFontOptions","fontSize","family","parseLineHeight","Scale","getTicks","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","zeroLineIndex","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","body","dataPoints","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","hasTooltipContent","average","eventPosition","nearestElement","tp","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","ceil","numSpaces","precision","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","_fit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","factor","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","rectangleElementOptions","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","polarArea","countVisibleElements","visibleCount","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","setter","initializer","accumulator","baseEach"],"mappings":"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","file":"static/js/0.d69167ed.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var numDecimal = -1 * Math.floor(logDelta);\n        numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n        tickString = tickValue.toFixed(numDecimal);\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./core/core.scaleService')(Chart);\n\nrequire('./core/core.scale')(Chart);\n\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-it plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      var rx = Math.min(radius, width / 2);\n      var ry = Math.min(radius, height / 2);\n      ctx.moveTo(x + rx, y);\n      ctx.lineTo(x + width - rx, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n      ctx.lineTo(x + width, y + height - ry);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n      ctx.lineTo(x + rx, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n      ctx.lineTo(x, y + ry);\n      ctx.quadraticCurveTo(x, y, x + rx, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.beginPath();\n        ctx.arc(x, y, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        ctx.fill();\n        break;\n\n      case 'triangle':\n        ctx.beginPath();\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(x - edgeLength / 2, y + height / 3);\n        ctx.lineTo(x + edgeLength / 2, y + height / 3);\n        ctx.lineTo(x, y - 2 * height / 3);\n        ctx.closePath();\n        ctx.fill();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.beginPath();\n        ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n        ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = x - offset;\n        var topY = y - offset;\n        var sideSize = Math.SQRT2 * radius;\n        ctx.beginPath();\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n        ctx.closePath();\n        ctx.fill();\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.beginPath();\n        ctx.moveTo(x - size, y);\n        ctx.lineTo(x, y + size);\n        ctx.lineTo(x + size, y);\n        ctx.lineTo(x, y - size);\n        ctx.closePath();\n        ctx.fill();\n        break;\n\n      case 'cross':\n        ctx.beginPath();\n        ctx.moveTo(x, y + radius);\n        ctx.lineTo(x, y - radius);\n        ctx.moveTo(x - radius, y);\n        ctx.lineTo(x + radius, y);\n        ctx.closePath();\n        break;\n\n      case 'crossRot':\n        ctx.beginPath();\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x - xOffset, y + yOffset);\n        ctx.lineTo(x + xOffset, y - yOffset);\n        ctx.closePath();\n        break;\n\n      case 'star':\n        ctx.beginPath();\n        ctx.moveTo(x, y + radius);\n        ctx.lineTo(x, y - radius);\n        ctx.moveTo(x - radius, y);\n        ctx.lineTo(x + radius, y);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x - xOffset, y + yOffset);\n        ctx.lineTo(x + xOffset, y - yOffset);\n        ctx.closePath();\n        break;\n\n      case 'line':\n        ctx.beginPath();\n        ctx.moveTo(x - radius, y);\n        ctx.lineTo(x + radius, y);\n        ctx.closePath();\n        break;\n\n      case 'dash':\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + radius, y);\n        ctx.closePath();\n        break;\n    }\n\n    ctx.stroke();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n  ctx.closePath();\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.currentTarget || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n    var parentNode = domNode.parentNode;\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = domNode.parentNode;\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n    var w = container.clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = domNode.parentNode;\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n    var h = container.clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var color = helpers.color;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    var ratio = 0;\n\n    if (vm.skip) {\n      return;\n    }\n\n    ctx.strokeStyle = vm.borderColor || defaultColor;\n    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n    ctx.fillStyle = vm.backgroundColor || defaultColor; // Cliping for Points.\n    // going out from inner charArea?\n\n    if (chartArea !== undefined && (model.x < chartArea.left || chartArea.right * errMargin < model.x || model.y < chartArea.top || chartArea.bottom * errMargin < model.y)) {\n      // Point fade out\n      if (model.x < chartArea.left) {\n        ratio = (x - model.x) / (chartArea.left - model.x);\n      } else if (chartArea.right * errMargin < model.x) {\n        ratio = (model.x - x) / (model.x - chartArea.right);\n      } else if (model.y < chartArea.top) {\n        ratio = (y - model.y) / (chartArea.top - model.y);\n      } else if (chartArea.bottom * errMargin < model.y) {\n        ratio = (model.y - y) / (model.y - chartArea.bottom);\n      }\n\n      ratio = Math.round(ratio * 100) / 100;\n      ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n      ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n    }\n\n    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.Animation = Element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  Chart.animationService = {\n    frameDuration: 17,\n    animations: [],\n    dropFrames: 0,\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {Number} duration - The animation duration in ms.\n     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      var startTime = Date.now();\n      var framesToDrop = 0;\n\n      if (me.dropFrames > 1) {\n        framesToDrop = Math.floor(me.dropFrames);\n        me.dropFrames = me.dropFrames % 1;\n      }\n\n      me.advance(1 + framesToDrop);\n      var endTime = Date.now();\n      me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance(count) {\n      var animations = this.animations;\n      var animation, chart;\n      var i = 0;\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        animation.currentStep = (animation.currentStep || 0) + count;\n        animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n        helpers.callback(animation.render, [chart, animation], chart);\n        helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= animation.numSteps) {\n          helpers.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      Chart.animationService.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update(me.options.responsiveAnimationDuration);\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      Chart.scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Chart.Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        Chart.animationService.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Chart.Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Chart.Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render(me.options.hover.animationDuration, true);\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element, elementOpts) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = element._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = function (Chart) {\n  Chart.scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        layouts.addBox(chart, scale);\n      });\n    }\n  };\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nmodule.exports = function (Chart) {\n  function computeTextSize(context, tick, font) {\n    return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  function parseFontOptions(options) {\n    var valueOrDefault = helpers.valueOrDefault;\n    var globalDefaults = defaults.global;\n    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n    return {\n      size: size,\n      style: style,\n      family: family,\n      font: helpers.fontString(size, style, family)\n    };\n  }\n\n  function parseLineHeight(options) {\n    return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n  }\n\n  Chart.Scale = Element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || [];\n      me.afterBuildTicks();\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers.noop,\n    afterBuildTicks: function afterBuildTicks() {\n      helpers.callback(this.options.afterBuildTicks, [this]);\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = parseFontOptions(tickOpts);\n      context.font = tickFont.font;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n      var display = opts.display;\n      var isHorizontal = me.isHorizontal();\n      var tickFont = parseFontOptions(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n        var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing them\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding;\n\n        if (isHorizontal) {\n          // A horizontal axis is more constrained by the height.\n          me.longestLabelWidth = largestTextWidth;\n          var angleRadians = helpers.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.font;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n            me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n          } else {\n            me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n            me.paddingRight = lastLabelWidth / 2 + 3;\n          }\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + Math.round(pixel);\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + Math.round(valueOffset);\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var skipRatio;\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var labelRotationRadians = helpers.toRadians(me.labelRotation);\n      var cosRotation = Math.cos(labelRotationRadians);\n      var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n      var result = [];\n      var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n      var maxTicks;\n\n      if (optionTicks.maxTicksLimit) {\n        maxTicks = optionTicks.maxTicksLimit;\n      }\n\n      if (isHorizontal) {\n        skipRatio = false;\n\n        if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n          skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n        } // if they defined a max number of optionTicks,\n        // increase skipRatio until that number is met\n\n\n        if (maxTicks && tickCount > maxTicks) {\n          skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n        }\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n        shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n        if (shouldSkip && i !== tickCount - 1) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n    // Actually draw the scale on the canvas\n    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!options.display) {\n        return;\n      }\n\n      var context = me.ctx;\n      var globalDefaults = defaults.global;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var isRotated = me.labelRotation !== 0;\n      var isHorizontal = me.isHorizontal();\n      var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n      var tickFont = parseFontOptions(optionTicks);\n      var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n      var majorTickFont = parseFontOptions(optionMajorTicks);\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n      var scaleLabelFont = parseFontOptions(scaleLabel);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = me.options.gridLines.lineWidth;\n      var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n      var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n      var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n      var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n      helpers.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash;\n          borderDashOffset = gridLines.zeroLineBorderDashOffset;\n        } else {\n          lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n          borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n        var textAlign = 'middle';\n        var textBaseline = 'middle';\n        var tickPadding = optionTicks.padding;\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (options.position === 'bottom') {\n            // bottom\n            textBaseline = !isRotated ? 'top' : 'middle';\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          } else {\n            // top\n            textBaseline = !isRotated ? 'bottom' : 'middle';\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          }\n\n          var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n          if (xLineValue < me.left) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          xLineValue += helpers.aliasPixel(lineWidth);\n          labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          tx1 = tx2 = x1 = x2 = xLineValue;\n          ty1 = yTickStart;\n          ty2 = yTickEnd;\n          y1 = chartArea.top;\n          y2 = chartArea.bottom + axisWidth;\n        } else {\n          var isLeft = options.position === 'left';\n          var labelXOffset;\n\n          if (optionTicks.mirror) {\n            textAlign = isLeft ? 'left' : 'right';\n            labelXOffset = tickPadding;\n          } else {\n            textAlign = isLeft ? 'right' : 'left';\n            labelXOffset = tl + tickPadding;\n          }\n\n          labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n          var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n          if (yLineValue < me.top) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          yLineValue += helpers.aliasPixel(lineWidth);\n          labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n          tx1 = xTickStart;\n          tx2 = xTickEnd;\n          x1 = chartArea.left;\n          x2 = chartArea.right + axisWidth;\n          ty1 = ty2 = y1 = y2 = yLineValue;\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textBaseline: textBaseline,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers.each(itemsToDraw, function (itemToDraw) {\n        if (gridLines.display) {\n          context.save();\n          context.lineWidth = itemToDraw.glWidth;\n          context.strokeStyle = itemToDraw.glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = itemToDraw.textBaseline;\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n\n          if (helpers.isArray(label)) {\n            var lineCount = label.length;\n            var lineHeight = tickFont.size * 1.5;\n            var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n            for (var i = 0; i < lineCount; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, 0);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = options.position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.font;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (gridLines.drawBorder) {\n        // Draw the line at the edge of the axis\n        context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n        context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n        var x1 = me.left;\n        var x2 = me.right + axisWidth;\n        var y1 = me.top;\n        var y2 = me.bottom + axisWidth;\n        var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n        if (isHorizontal) {\n          y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n          y1 += aliasPixel;\n          y2 += aliasPixel;\n        } else {\n          x1 = x2 = options.position === 'left' ? me.right : me.left;\n          x1 += aliasPixel;\n          x2 += aliasPixel;\n        }\n\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  /**\n  \t * Helper method to merge the opacity into a color\n  \t */\n  function mergeOpacity(colorString, opacity) {\n    var color = helpers.color(colorString);\n    return color.alpha(opacity * color.alpha()).rgbaString();\n  } // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  } // Private helper to create a tooltip item model\n  // @param element : the chart element (point, arc, bar) to create the tooltip item for\n  // @return : new tooltip item\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {Object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers.each(body, function (bodyItem) {\n      helpers.each(bodyItem.before, maxLineWidth);\n      helpers.each(bodyItem.lines, maxLineWidth);\n      helpers.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  Chart.Tooltip = Element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, beforeTitle);\n      lines = pushOrConcat(lines, title);\n      lines = pushOrConcat(lines, afterTitle);\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      var lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\n      return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      var lines = this._options.callbacks.afterBody.apply(this, arguments);\n\n      return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, beforeFooter);\n      lines = pushOrConcat(lines, footer);\n      lines = pushOrConcat(lines, afterFooter);\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = Math.round(tooltipPosition.x);\n        model.y = Math.round(tooltipPosition.y);\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n      var title = vm.title;\n\n      if (title.length) {\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n        ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx, opacity) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var body = vm.body;\n      ctx.textAlign = vm._bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n      var xLinePadding = 0;\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n      helpers.each(vm.beforeBody, fillLineOfText);\n      var drawColorBoxes = vm.displayColors;\n      xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers.each(body, function (bodyItem, i) {\n        var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n        ctx.fillStyle = textColor;\n        helpers.each(bodyItem.before, fillLineOfText);\n        helpers.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n            ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n            ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n            ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n        ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n      ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n      ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        // Draw Background\n        this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n        pt.x += vm.xPadding;\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx, opacity); // Body\n\n        this.drawBody(pt, vm, ctx, opacity); // Footer\n\n        this.drawFooter(pt, vm, ctx, opacity);\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {Boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  Chart.Tooltip.positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {Point} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: Math.round(x / count),\n        y: Math.round(y / count)\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {Point} the position of the event in canvas coordinates\n     * @returns {Point} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  };\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  var precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, spacing.toString().length - 2);\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Chart.Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Chart.Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Chart.Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Chart.Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Chart.Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Chart.Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  Chart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  Chart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Chart.Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Chart.Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Chart.Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Chart.Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  Chart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    },\n    setHoverStyle: function setHoverStyle(rectangle) {\n      var dataset = this.chart.data.datasets[rectangle._datasetIndex];\n      var index = rectangle._index;\n      var custom = rectangle.custom || {};\n      var model = rectangle._model;\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n    removeHoverStyle: function removeHoverStyle(rectangle) {\n      var dataset = this.chart.data.datasets[rectangle._datasetIndex];\n      var index = rectangle._index;\n      var custom = rectangle.custom || {};\n      var model = rectangle._model;\n      var rectangleElementOptions = this.chart.options.elements.rectangle;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @protected\n     */\n    removeHoverStyle: function removeHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      model.backgroundColor = options.backgroundColor;\n      model.borderColor = options.borderColor;\n      model.borderWidth = options.borderWidth;\n      model.radius = options.radius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      this.removeHoverStyle(arc); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    removeHoverStyle: function removeHoverStyle(arc) {\n      Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, area);\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        meta.dataset.draw();\n      }\n\n      helpers.canvas.unclipArea(chart.ctx); // Draw the points\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var index = point._index;\n      var custom = point.custom || {};\n      var model = point._model;\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    },\n    removeHoverStyle: function removeHoverStyle(point) {\n      var me = this;\n      var dataset = me.chart.data.datasets[point._datasetIndex];\n      var index = point._index;\n      var custom = point.custom || {};\n      var model = point._model; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n      model.backgroundColor = me.getPointBackgroundColor(point, index);\n      model.borderColor = me.getPointBorderColor(point, index);\n      model.borderWidth = me.getPointBorderWidth(point, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var meta = me.getMeta();\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n      meta.count = me.countVisibleElements();\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var circumference = me.calculateCircumference(dataset.data[index]);\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // If there is NaN data before us, we need to calculate the starting angle correctly.\n      // We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\n      var visibleCount = 0;\n      var meta = me.getMeta();\n\n      for (var i = 0; i < index; ++i) {\n        if (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n          ++visibleCount;\n        }\n      } // var negHalfPI = -0.5 * Math.PI;\n\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = datasetStartAngle + circumference * visibleCount;\n      var endAngle = startAngle + (arc.hidden ? 0 : circumference);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      me.removeHoverStyle(arc);\n      arc.pivot();\n    },\n    removeHoverStyle: function removeHoverStyle(arc) {\n      Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var count = this.getMeta().count;\n\n      if (count > 0 && !isNaN(value)) {\n        return 2 * Math.PI / count;\n      }\n\n      return 0;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    },\n    removeHoverStyle: function removeHoverStyle(point) {\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      var pointElementOptions = this.chart.options.elements.point;\n      model.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}