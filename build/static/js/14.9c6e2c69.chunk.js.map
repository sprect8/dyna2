{"version":3,"sources":["components/uielements/textfield/index.js","components/cart/singleCart.js","containers/POS/Cart/cartTable.style.js","containers/POS/Cart/cart-table.js","containers/POS/Cart/index.js"],"names":["_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_0___default","n","TextField","CartRow","onChange","event","value","target","isNaN","notification","_this","props","quantity","changeQuantity","objectID","_this$props","this","price","image","_highlightResult","cancelQuantity","totalPrice","toFixed","react_default","a","createElement","table","className","onClick","icon","alt","src","name","description","textfield","min","max","step","type","Component","ProductsTable","styled","div","_templateObject","palette","transition","WithDirection","changeProductQuantity","ecommerceActions","CartTable","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","_this2","productQuantity","products","length","map","product","singleCart_CartRow","assign","key","newProductQuantity","forEach","push","style","classname","cartTable_style","concat","renderItems","width","marginLeft","rtl","marginRight","padding","paddingRight","paddingLeft","size","label","uielements_button","variant","color","Link","to","connect","state","_state$Ecommerce","Ecommerce","CartPage","layoutWrapper","cart_table","React"],"mappings":"4FAAA,IAAAA,EAAAC,EAAA,KAAAC,EAAAD,EAAAE,EAAAH,GAEeI,MAAf,2LCKqBC,6MACnBC,SAAW,SAAAC,GACT,IAAMC,EAAQD,EAAME,OAAOD,MACtBE,MAAMF,GAKTG,YAAa,QAAS,4BAJlBH,IAAUI,EAAKC,MAAMC,UACvBF,EAAKC,MAAME,eAAeH,EAAKC,MAAMG,SAAUR,4EAO5C,IAAAS,EAQHC,KAAKL,MANPM,EAFKF,EAELE,MACAL,EAHKG,EAGLH,SACAM,EAJKH,EAILG,MACAC,EALKJ,EAKLI,iBACAL,EANKC,EAMLD,SACAM,EAPKL,EAOLK,eAEIC,GAAcJ,EAAQL,GAAUU,QAAQ,GAC9C,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAU,aACVC,QAAS,WACPR,EAAeN,KAGjBS,EAAAC,EAAAC,cAACI,EAAA,EAAD,eAEFN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,aACnBJ,EAAAC,EAAAC,cAAA,OAAKK,IAAI,IAAIC,IAAKb,KAEpBK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,YACnBJ,EAAAC,EAAAC,cAAA,UAAKN,EAAiBa,KAAK1B,OAC3BiB,EAAAC,EAAAC,cAAA,SAAIN,EAAiBc,YAAY3B,QAEnCiB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,aACnBJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,mBAAhB,KACCV,EAAMK,QAAQ,IAEjBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,gBACnBJ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,IAAK,EACLC,IAAK,IACL9B,MAAOM,EACPyB,KAAM,EACNC,KAAK,SACLlC,SAAUY,KAAKZ,YAGnBmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,kBAArB,IAAwCN,WArDXkB,0nMCFrC,IAAMC,EAAgBC,IAAOC,IAAVC,IAaDC,kBAAQ,UAAW,GAaJA,kBAAQ,OAAQ,GAW9BA,kBAAQ,OAAQ,GAuCT,SAAAjC,GAAK,MACK,QAAtBA,EAAM,YAAwB,QAAU,QAuBnBiC,kBAAQ,OAAQ,GAOhCA,kBAAQ,YAAa,GAOrBA,kBAAQ,OAAQ,GAeCA,kBAAQ,OAAQ,GAUhBA,kBAAQ,OAAQ,GAIhBA,kBAAQ,OAAQ,GAkB/BA,kBAAQ,OAAQ,GAQhBA,kBAAQ,OAAQ,GAOhBA,kBAAQ,OAAQ,GAadA,kBAAQ,OAAQ,GAEvBC,cA4BU,SAAAlC,GAAK,MACK,QAAtBA,EAAM,YAAwB,QAAU,QAgD/BiC,kBAAQ,OAAQ,GAWZA,kBAAQ,SAAU,IAY9BE,cAAcN,GCxRrBO,EAA0BC,IAA1BD,sBAEJ1B,EAAa,EACX4B,cACJ,SAAAA,EAAYtC,GAAO,IAAAD,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAiC,IACjBvC,EAAAwC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAtC,KAAML,KACDE,eAAiBH,EAAKG,eAAe0C,KAApBL,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAxC,KACtBA,EAAKU,eAAiBV,EAAKU,eAAemC,KAApBL,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAxC,KAHLA,6EAKL,IAAA+C,EAAAzC,KAAAD,EAC0BC,KAAKL,MAAnC+C,EADI3C,EACJ2C,gBAAiBC,EADb5C,EACa4C,SAEzB,OADAtC,EAAa,EACRqC,GAA8C,IAA3BA,EAAgBE,OAGjCF,EAAgBG,IAAI,SAAAC,GAEzB,OADAzC,GAAcyC,EAAQlD,SAAW+C,EAASG,EAAQhD,UAAUG,MAE1DM,EAAAC,EAAAC,cAACsC,EAADb,OAAAc,OAAA,CACEC,IAAKH,EAAQhD,SACbF,SAAUkD,EAAQlD,SAClBC,eAAgB4C,EAAK5C,eACrBO,eAAgBqC,EAAKrC,gBACjBuC,EAASG,EAAQhD,cAVlBS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,UAAU,aAApB,wDAeIb,EAAUF,GAAU,IACzB8C,EAAoB1C,KAAKL,MAAzB+C,gBACFQ,EAAqB,GAC3BR,EAAgBS,QAAQ,SAAAL,GAClBA,EAAQhD,WAAaA,EACvBoD,EAAmBE,KAAKN,GAExBI,EAAmBE,KAAK,CACtBtD,WACAF,eAINI,KAAKL,MAAMoC,sBAAsBmB,0CAEpBpD,GAAU,IACf4C,EAAoB1C,KAAKL,MAAzB+C,gBACFQ,EAAqB,GAC3BR,EAAgBS,QAAQ,SAAAL,GAClBA,EAAQhD,WAAaA,GACvBoD,EAAmBE,KAAKN,KAG5B9C,KAAKL,MAAMoC,sBAAsBmB,oCAE1B,IACCG,EAAUrD,KAAKL,MAAf0D,MACFC,EAAqB,MAATD,EAAgBA,EAAQ,GAC1C,OACE9C,EAAAC,EAAAC,cAAC8C,EAAD,CAAe5C,UAAS,aAAA6C,OAAeF,IACrC/C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,eACrBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,cACrBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,YAArB,QACAJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,aAArB,SACAJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,gBAArB,YACAJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,kBAArB,WAIJJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACGV,KAAKyD,cACNlD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,UAAU,aAClBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,eACrBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,cACrBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,aACrBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,cACrBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,gBAArB,SACAJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,kBAArB,IACIN,EAAWC,QAAQ,MAK3BC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2C,MAAO,CACLK,MAAO,QACPC,WAAU,GAAAH,OAAa,QAARI,IAAgB,IAAM,QACrCC,YAAW,GAAAL,OAAa,QAARI,IAAgB,OAAS,KACzCE,QAAS,EACTC,aAAY,GAAAP,OAAa,QAARI,IAAgB,IAAM,QACvCI,YAAW,GAAAR,OAAa,QAARI,IAAgB,OAAS,OAG3CrD,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEP,UAAU,YACVsD,KAAK,QACLC,MAAM,qBAIV3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAU,iBACV0C,MAAO,CACLS,QAAS,IAGXvD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,QAAQ,SACRC,MAAM,UACNhB,MAAO,CAAEQ,YAAa,KAHxB,SAQAtD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQE,MAAM,UAAU1D,UAAU,mBAChCJ,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMC,GAAI,uBAAV,yBAtHMhD,aAoITiD,kBAJf,SAAyBC,GAAO,IAAAC,EACQD,EAAME,UAC5C,MAAO,CAAEjC,gBAFqBgC,EACtBhC,gBACkBC,SAFI+B,EACL/B,WAKzB,CAAEZ,yBAFWyC,CAGbvC,GCtJI2C,mLAEF,OACErE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,KACEtE,EAAAC,EAAAC,cAACqE,EAAD,cAJeC,IAAMxD,WASdqD","file":"static/js/14.9c6e2c69.chunk.js","sourcesContent":["import TextField from '@material-ui/core/TextField';\r\n\r\nexport default TextField;\r\n","import React, { Component } from 'react';\r\n\r\nimport { TableCell, TableRow } from '../uielements/table';\r\nimport Icon from '../uielements/icon';\r\nimport Textfield from '../uielements/textfield';\r\nimport { notification } from '../index';\r\n\r\nexport default class CartRow extends Component {\r\n  onChange = event => {\r\n    const value = event.target.value;\r\n    if (!isNaN(value)) {\r\n      if (value !== this.props.quantity) {\r\n        this.props.changeQuantity(this.props.objectID, value);\r\n      }\r\n    } else {\r\n      notification('error', 'Please give valid number');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      price,\r\n      quantity,\r\n      image,\r\n      _highlightResult,\r\n      objectID,\r\n      cancelQuantity,\r\n    } = this.props;\r\n    const totalPrice = (price * quantity).toFixed(2);\r\n    return (\r\n      <TableRow>\r\n        <TableCell\r\n          className=\"itemRemove\"\r\n          onClick={() => {\r\n            cancelQuantity(objectID);\r\n          }}\r\n        >\r\n          <Icon>clear</Icon>\r\n        </TableCell>\r\n        <TableCell className=\"itemImage\">\r\n          <img alt=\"#\" src={image} />\r\n        </TableCell>\r\n        <TableCell className=\"itemName\">\r\n          <h3>{_highlightResult.name.value}</h3>\r\n          <p>{_highlightResult.description.value}</p>\r\n        </TableCell>\r\n        <TableCell className=\"itemPrice\">\r\n          <span className=\"itemPricePrefix\">$</span>\r\n          {price.toFixed(2)}\r\n        </TableCell>\r\n        <TableCell className=\"itemQuantity\">\r\n          <Textfield\r\n            min={1}\r\n            max={1000}\r\n            value={quantity}\r\n            step={1}\r\n            type=\"number\"\r\n            onChange={this.onChange}\r\n          />\r\n        </TableCell>\r\n        <TableCell className=\"itemPriceTotal\">${totalPrice}</TableCell>\r\n      </TableRow>\r\n    );\r\n  }\r\n}\r\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { transition } from '../../../settings/style-util';\nimport WithDirection from '../../../settings/withDirection';\n\nconst ProductsTable = styled.div`\n  width: 100%;\n\n  @media only screen and (max-width: 767px) {\n    overflow-x: auto;\n    margin: 0;\n  }\n\n  table {\n    width: 100%;\n    padding: 20px 30px 30px;\n    display: flex;\n    flex-direction: column;\n    box-shadow: ${palette('shadows', 2)};\n    background-color: #fff;\n    box-sizing: border-box;\n\n    @media only screen and (max-width: 767px) {\n      width: 767px;\n      overflow: hidden;\n    }\n\n    /* TABLE HEAD */\n    thead {\n      width: 100%;\n      min-height: 50px;\n      border-bottom: 1px solid ${palette('grey', 2)};\n\n      tr {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n\n        th {\n          font-size: 14px;\n          font-weight: 500;\n          color: ${palette('grey', 9)};\n          line-height: 1.2;\n          white-space: nowrap;\n          padding: 15px 0;\n          margin: 0 20px;\n          width: 15%;\n          text-align: center;\n          border-bottom: 0;\n\n          &:last-child {\n            margin-right: 0;\n            text-align: right;\n          }\n\n          @media only screen and (max-width: 991px) {\n            margin: 0 10px;\n            flex-shrink: 0;\n          }\n\n          &.itemRemove {\n            width: 50px;\n            margin: 0;\n            flex-shrink: 0;\n            @media only screen and (max-width: 991px) {\n              width: 30px;\n            }\n          }\n\n          &.itemImage {\n            width: 80px;\n            flex-shrink: 0;\n\n            @media only screen and (max-width: 991px) {\n              width: 60px;\n            }\n          }\n\n          &.itemName {\n            max-width: none;\n            text-align: ${props =>\n              props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n            width: 45%;\n\n            @media only screen and (max-width: 991px) {\n              margin: 0 10px;\n              flex-shrink: 1;\n            }\n          }\n        }\n      }\n    }\n\n    /* TABLE BODY */\n    tbody {\n      width: 100%;\n\n      tr {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        min-height: 140px;\n        height: auto;\n        border-bottom: 1px solid ${palette('grey', 2)};\n\n        &.noItemMsg {\n          min-height: 300px;\n          justify-content: center;\n          font-size: 30px;\n          font-weight: 300;\n          color: ${palette('grayscale', 1)};\n          line-height: 1.2;\n        }\n\n        td {\n          font-size: 14px;\n          font-weight: 500;\n          color: ${palette('grey', 9)};\n          line-height: 1.2;\n          overflow: hidden;\n          padding: 15px 0;\n          margin: 0 20px;\n          width: 15%;\n          text-align: center;\n          border-bottom: 0;\n\n          &.itemQuantity {\n            > div > div {\n              width: 130px;\n\n              &:before {\n                display: none;\n                background-color: ${palette('grey', 3)};\n              }\n\n              input {\n                height: 1.65em;\n                text-align: center;\n              }\n\n              &:after {\n                display: none;\n                background-color: ${palette('blue', 6)};\n              }\n\n              &:hover::before {\n                background-color: ${palette('blue', 2)};\n              }\n            }\n          }\n\n          &:last-child {\n            margin-right: 0;\n            text-align: right;\n          }\n\n          @media only screen and (max-width: 991px) {\n            margin: 0 10px;\n            flex-shrink: 0;\n          }\n\n          h3 {\n            font-size: 14px;\n            font-weight: 500;\n            color: ${palette('grey', 9)};\n            line-height: 1.2;\n            margin-bottom: 10px;\n          }\n\n          p {\n            font-size: 12px;\n            font-weight: 400;\n            color: ${palette('grey', 5)};\n            line-height: 1.5;\n          }\n\n          span {\n            font-size: 14px;\n            font-weight: 500;\n            color: ${palette('grey', 9)};\n          }\n\n          &.itemRemove {\n            text-align: center;\n            width: 50px;\n            margin: 0;\n            flex-shrink: 0;\n            margin-left: 0;\n            cursor: pointer;\n\n            span {\n              font-size: 18px;\n              color: ${palette('grey', 8)};\n              opacity: 0;\n              ${transition()};\n            }\n\n            @media only screen and (max-width: 991px) {\n              width: 30px;\n              margin-left: 10px;\n            }\n          }\n\n          &.itemImage {\n            width: 80px;\n            flex-shrink: 0;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n\n            img {\n              width: 100%;\n              height: 100%;\n              object-fit: cover;\n            }\n\n            @media only screen and (max-width: 991px) {\n              width: 60px;\n            }\n          }\n\n          &.itemName {\n            text-align: ${props =>\n              props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n            max-width: none;\n            width: 45%;\n\n            @media only screen and (max-width: 991px) {\n              margin: 0 10px;\n              flex-shrink: 1;\n            }\n          }\n        }\n\n        &.totalBill {\n          padding: 0;\n          margin-top: 0;\n          min-height: 70px;\n          border-bottom: 0;\n        }\n\n        &:hover {\n          .itemRemove {\n            span {\n              opacity: 1;\n            }\n          }\n        }\n      }\n    }\n\n    /* TABLE FOOTER */\n    tfoot {\n      width: 100%;\n      padding: 20px 0;\n      box-sizing: border-box;\n\n      tr {\n        width: 100%;\n        display: flex;\n        align-items: flex-end;\n\n        td {\n          border-bottom: 0;\n          padding: 0;\n\n          .fullWidth {\n            width: 100%;\n\n            label {\n              font-size: 0.9rem;\n              color: ${palette('grey', 6)};\n            }\n          }\n\n          &.buttonsWrapper {\n            display: flex;\n            align-items: center;\n\n            .cartCheckoutBtn {\n              span {\n                a {\n                  color: ${palette('indigo', 5)};\n                  text-decoration: none;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default WithDirection(ProductsTable);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Table, {\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from '../../../components/uielements/table';\nimport TextField from '../../../components/uielements/textfield';\nimport Button from '../../../components/uielements/button';\nimport ecommerceActions from '../../../redux/ecommerce/actions';\nimport SingleCart from '../../../components/cart/singleCart';\nimport ProductsTable from './cartTable.style';\nimport { rtl } from '../../../settings/withDirection';\n\nconst { changeProductQuantity } = ecommerceActions;\n\nlet totalPrice = 0;\nclass CartTable extends Component {\n  constructor(props) {\n    super(props);\n    this.changeQuantity = this.changeQuantity.bind(this);\n    this.cancelQuantity = this.cancelQuantity.bind(this);\n  }\n  renderItems() {\n    const { productQuantity, products } = this.props;\n    totalPrice = 0;\n    if (!productQuantity || productQuantity.length === 0) {\n      return <TableRow className=\"noItemMsg\">No item found</TableRow>;\n    }\n    return productQuantity.map(product => {\n      totalPrice += product.quantity * products[product.objectID].price;\n      return (\n        <SingleCart\n          key={product.objectID}\n          quantity={product.quantity}\n          changeQuantity={this.changeQuantity}\n          cancelQuantity={this.cancelQuantity}\n          {...products[product.objectID]}\n        />\n      );\n    });\n  }\n  changeQuantity(objectID, quantity) {\n    const { productQuantity } = this.props;\n    const newProductQuantity = [];\n    productQuantity.forEach(product => {\n      if (product.objectID !== objectID) {\n        newProductQuantity.push(product);\n      } else {\n        newProductQuantity.push({\n          objectID,\n          quantity,\n        });\n      }\n    });\n    this.props.changeProductQuantity(newProductQuantity);\n  }\n  cancelQuantity(objectID) {\n    const { productQuantity } = this.props;\n    const newProductQuantity = [];\n    productQuantity.forEach(product => {\n      if (product.objectID !== objectID) {\n        newProductQuantity.push(product);\n      }\n    });\n    this.props.changeProductQuantity(newProductQuantity);\n  }\n  render() {\n    const { style } = this.props;\n    const classname = style != null ? style : '';\n    return (\n      <ProductsTable className={`cartTable ${classname}`}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell className=\"itemRemove\" />\n              <TableCell className=\"itemImage\" />\n              <TableCell className=\"itemName\">Name</TableCell>\n              <TableCell className=\"itemPrice\">Price</TableCell>\n              <TableCell className=\"itemQuantity\">Quantity</TableCell>\n              <TableCell className=\"itemPriceTotal\">Total</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {this.renderItems()}\n            <TableRow className=\"totalBill\">\n              <TableCell className=\"itemRemove\" />\n              <TableCell className=\"itemImage\" />\n              <TableCell className=\"itemName\" />\n              <TableCell className=\"itemPrice\" />\n              <TableCell className=\"itemQuantity\">Total</TableCell>\n              <TableCell className=\"itemPriceTotal\">\n                ${totalPrice.toFixed(2)}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n\n          <tfoot>\n            <TableRow>\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell\n                style={{\n                  width: '220px',\n                  marginLeft: `${rtl === 'rtl' ? '0' : 'auto'}`,\n                  marginRight: `${rtl === 'rtl' ? 'auto' : '0'}`,\n                  padding: 0,\n                  paddingRight: `${rtl === 'rtl' ? '0' : '25px'}`,\n                  paddingLeft: `${rtl === 'rtl' ? '25px' : '0'}`,\n                }}\n              >\n                <TextField\n                  className=\"fullWidth\"\n                  size=\"large\"\n                  label=\"Discount Coupon\"\n                />\n              </TableCell>\n\n              <TableCell\n                className=\"buttonsWrapper\"\n                style={{\n                  padding: 0,\n                }}\n              >\n                <Button\n                  variant=\"raised\"\n                  color=\"primary\"\n                  style={{ marginRight: 10 }}\n                >\n                  Apply\n                </Button>\n\n                <Button color=\"primary\" className=\"cartCheckoutBtn\">\n                  <Link to={'/dashboard/checkout'}>Checkout</Link>\n                </Button>\n              </TableCell>\n            </TableRow>\n          </tfoot>\n        </Table>\n      </ProductsTable>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  const { productQuantity, products } = state.Ecommerce;\n  return { productQuantity, products };\n}\nexport default connect(\n  mapStateToProps,\n  { changeProductQuantity }\n)(CartTable);\n","import React from 'react';\nimport LayoutWrapper from '../../../components/utility/layoutWrapper';\nimport CartTable from './cart-table';\n\nclass CartPage extends React.Component {\n  render() {\n    return (\n      <LayoutWrapper>\n        <CartTable />\n      </LayoutWrapper>\n    );\n  }\n}\nexport default CartPage;\n"],"sourceRoot":""}