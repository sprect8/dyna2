{"version":3,"sources":["../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/@material-ui/core/Grid/index.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/src/elements/index.js","../node_modules/@material-ui/core/Grid/Grid.js","../node_modules/@material-ui/core/utils/requirePropFactory.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/lodash/isEqual.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/lodash/find.js","../node_modules/lodash/_createFind.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/chartjs-color/node_modules/color-convert/index.js","../node_modules/chartjs-color/node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","color","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","i","ilen","key","actual","origin","target","type","c0","c1","keys","Object","length","hasOwnProperty","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","_interopRequireDefault","defineProperty","value","enumerable","get","_Grid","default","process","d","__webpack_exports__","Pie","Line","Bar","Radar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","assign","source","call","_objectWithoutProperties","obj","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","args","Array","_key","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","_this2","a","configMerge","currentDatasets","config","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","Doughnut","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","Polar","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","defaults","Arc","Point","Rectangle","styles","_defineProperty2","_objectWithoutProperties2","_extends2","_react","_classnames","_withStyles","_createBreakpoints","GUTTERS","GRID_SIZES","theme","container","boxSizing","flexWrap","item","margin","zeroMinWidth","minWidth","direction-xs-column","flexDirection","direction-xs-column-reverse","direction-xs-row-reverse","wrap-xs-nowrap","wrap-xs-wrap-reverse","align-items-xs-center","alignItems","align-items-xs-flex-start","align-items-xs-flex-end","align-items-xs-baseline","align-content-xs-center","alignContent","align-content-xs-flex-start","align-content-xs-flex-end","align-content-xs-space-between","align-content-xs-space-around","justify-xs-center","justifyContent","justify-xs-flex-end","justify-xs-space-between","justify-xs-space-around","justify-xs-space-evenly","breakpoint","spacing","index","& > $item","padding","generateGutter","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","breakpoints","up","generateGrid","Grid","_classNames","classes","classNameProp","className","component","direction","justify","lg","md","sm","wrap","xl","xs","other","String","_default","name","componentNameInError","filterByPosition","array","where","v","sortByWeight","reverse","_tmpIndex_","sort","b","v0","v1","weight","addBox","chart","boxes","fullWidth","push","removeBox","layoutItem","configure","prop","layoutOptions","layout","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","each","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","formatters","isArray","linear","tickValue","ticks","delta","abs","floor","logDelta","log10","tickString","numDecimal","min","toFixed","logarithmic","remain","pow","toExponential","baseIsEqual","noop","uid","isNullOrUndef","toString","isObject","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","loopable","len","arrayEquals","a0","a1","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","find","createFind","baseIteratee","isArrayLike","findIndexFunc","collection","predicate","iterable","iteratee","baseFindIndex","toInteger","nativeMax","toFinite","result","remainder","toNumber","INFINITY","MAX_INTEGER","Chart","elements","Interaction","layouts","platform","Ticks","register","window","Legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","convert","string","Color","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mixinColor","p","w1","w2","toJSON","slice","spaces","maxes","getValues","space","charAt","capped","chans","sname","svalues","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","isDatasetVisible","getDatasetMeta","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","datasetIndex","_index","modes","single","_datasetIndex","x-axis","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","clear","count","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","opts","global","_invalidate","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","mode","animationDuration","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","ctx","clearRect","roundedRect","radius","rx","ry","moveTo","lineTo","quadraticCurveTo","rect","drawPoint","style","edgeLength","xOffset","yOffset","isNaN","beginPath","arc","closePath","fill","SQRT2","fillRect","strokeRect","offset","leftX","topY","sideSize","stroke","drawImage","clipArea","area","save","clip","unclipArea","restore","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","toLineHeight","matches","match","resolve","inputs","context","parseMaxStyle","styleValue","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","scaleService","getScaleDefaults","scale","slen","filterCallback","filter","filtered","findIndex","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distanceBetweenPoints","aliasPixel","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","str","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","backgroundColor","borderColor","borderWidth","inLabelRange","vm","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","draw","_chart","sA","eA","strokeStyle","lineWidth","fillStyle","lineJoin","globalDefaults","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","x1","x2","y1","halfWidth","base","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","expando","resizer","cls","cssText","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","animation","duration","onProgress","onComplete","Animation","currentStep","numSteps","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","cancelAnimation","startDigest","startTime","Date","now","framesToDrop","advance","endTime","positionIsHorizontal","types","instances","labels","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scales","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","tooltip","newOptions","_options","tooltips","updateConfig","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","getElementsAtEventForMode","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","enabled","changed","handleEvent","bufferedRequest","hoverOptions","active","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","res","resyncElements","removeHoverStyle","elementOpts","custom","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","labelsFromTicks","getLineValue","offsetGridLines","lineValue","getPixelForTick","gridLines","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","computeTextSize","tick","parseFontOptions","fontSize","family","parseLineHeight","Scale","getTicks","_ticks","beforeUpdate","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","zeroLineIndex","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","body","dataPoints","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","hasTooltipContent","average","eventPosition","nearestElement","tp","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","niceRange","niceMin","niceMax","ceil","numSpaces","precision","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","_fit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","factor","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","rectangleElementOptions","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","polarArea","countVisibleElements","visibleCount","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","setter","initializer","baseEach"],"mappings":"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AA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAve,KAAA,YACAwe,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACA5f,MAAA,UACA6f,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAphB,QAAA,YACAqhB,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACA9kB,IAAA,UACA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","file":"static/js/0.d2edc72e.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid.default;\n  }\n});\n\nvar _Grid = _interopRequireDefault(require(\"./Grid\"));","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _createBreakpoints = require(\"../styles/createBreakpoints\");\n\nvar _requirePropFactory = _interopRequireDefault(require(\"../utils/requirePropFactory\")); // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - http://v4-alpha.getbootstrap.com/layout/flexbox-grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\n\nvar GUTTERS = [0, 8, 16, 24, 32, 40];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    (0, _extends2.default)(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  GUTTERS.forEach(function (spacing, index) {\n    if (index === 0) {\n      // Skip the default style.\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: -spacing / 2,\n      width: \"calc(100% + \".concat(spacing, \"px)\"),\n      '& > $item': {\n        padding: spacing / 2\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nvar styles = function styles(theme) {\n  return (0, _extends2.default)({\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), _createBreakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\n\nexports.styles = styles;\n\nfunction Grid(props) {\n  var _classNames;\n\n  var alignContent = props.alignContent,\n      alignItems = props.alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      Component = props.component,\n      container = props.container,\n      direction = props.direction,\n      item = props.item,\n      justify = props.justify,\n      lg = props.lg,\n      md = props.md,\n      sm = props.sm,\n      spacing = props.spacing,\n      wrap = props.wrap,\n      xl = props.xl,\n      xs = props.xs,\n      zeroMinWidth = props.zeroMinWidth,\n      other = (0, _objectWithoutProperties2.default)(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n  var className = (0, _classnames.default)((_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.container, container), (0, _defineProperty2.default)(_classNames, classes.item, item), (0, _defineProperty2.default)(_classNames, classes.zeroMinWidth, zeroMinWidth), (0, _defineProperty2.default)(_classNames, classes[\"spacing-xs-\".concat(String(spacing))], container && spacing !== 0), (0, _defineProperty2.default)(_classNames, classes[\"direction-xs-\".concat(String(direction))], direction !== Grid.defaultProps.direction), (0, _defineProperty2.default)(_classNames, classes[\"wrap-xs-\".concat(String(wrap))], wrap !== Grid.defaultProps.wrap), (0, _defineProperty2.default)(_classNames, classes[\"align-items-xs-\".concat(String(alignItems))], alignItems !== Grid.defaultProps.alignItems), (0, _defineProperty2.default)(_classNames, classes[\"align-content-xs-\".concat(String(alignContent))], alignContent !== Grid.defaultProps.alignContent), (0, _defineProperty2.default)(_classNames, classes[\"justify-xs-\".concat(String(justify))], justify !== Grid.defaultProps.justify), (0, _defineProperty2.default)(_classNames, classes[\"grid-xs-\".concat(String(xs))], xs !== false), (0, _defineProperty2.default)(_classNames, classes[\"grid-sm-\".concat(String(sm))], sm !== false), (0, _defineProperty2.default)(_classNames, classes[\"grid-md-\".concat(String(md))], md !== false), (0, _defineProperty2.default)(_classNames, classes[\"grid-lg-\".concat(String(lg))], lg !== false), (0, _defineProperty2.default)(_classNames, classes[\"grid-xl-\".concat(String(xl))], xl !== false), _classNames), classNameProp);\n  return _react.default.createElement(Component, (0, _extends2.default)({\n    className: className\n  }, other));\n}\n\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: _propTypes.default.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: _propTypes.default.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: _propTypes.default.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: _propTypes.default.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: _propTypes.default.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: _propTypes.default.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: _propTypes.default.oneOf(GUTTERS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: _propTypes.default.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: _propTypes.default.bool\n} : {};\nGrid.defaultProps = {\n  alignContent: 'stretch',\n  alignItems: 'stretch',\n  component: 'div',\n  container: false,\n  direction: 'row',\n  item: false,\n  justify: 'flex-start',\n  lg: false,\n  md: false,\n  sm: false,\n  spacing: 0,\n  wrap: 'wrap',\n  xl: false,\n  xs: false,\n  zeroMinWidth: false\n};\nvar StyledGrid = (0, _withStyles.default)(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = (0, _requirePropFactory.default)('Grid');\n  StyledGrid.propTypes = (0, _extends2.default)({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('zeroMinWidth')\n  });\n}\n\nvar _default = StyledGrid;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction requirePropFactory(componentNameInError) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  var requireProp = function requireProp(requiredProp) {\n    return function (props, propName, componentName, location, propFullName) {\n      var propFullNameSafe = propFullName || propName;\n\n      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n        return new Error(\"The property `\".concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameInError, \"` must be used on `\").concat(requiredProp, \"`.\"));\n      }\n\n      return null;\n    };\n  };\n\n  return requireProp;\n}\n\nvar _default = requirePropFactory;\nexports.default = _default;","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var numDecimal = -1 * Math.floor(logDelta);\n        numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n        tickString = tickValue.toFixed(numDecimal);\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./core/core.scaleService')(Chart);\n\nrequire('./core/core.scale')(Chart);\n\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-it plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      var rx = Math.min(radius, width / 2);\n      var ry = Math.min(radius, height / 2);\n      ctx.moveTo(x + rx, y);\n      ctx.lineTo(x + width - rx, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n      ctx.lineTo(x + width, y + height - ry);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n      ctx.lineTo(x + rx, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n      ctx.lineTo(x, y + ry);\n      ctx.quadraticCurveTo(x, y, x + rx, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.beginPath();\n        ctx.arc(x, y, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        ctx.fill();\n        break;\n\n      case 'triangle':\n        ctx.beginPath();\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(x - edgeLength / 2, y + height / 3);\n        ctx.lineTo(x + edgeLength / 2, y + height / 3);\n        ctx.lineTo(x, y - 2 * height / 3);\n        ctx.closePath();\n        ctx.fill();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.beginPath();\n        ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n        ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = x - offset;\n        var topY = y - offset;\n        var sideSize = Math.SQRT2 * radius;\n        ctx.beginPath();\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n        ctx.closePath();\n        ctx.fill();\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.beginPath();\n        ctx.moveTo(x - size, y);\n        ctx.lineTo(x, y + size);\n        ctx.lineTo(x + size, y);\n        ctx.lineTo(x, y - size);\n        ctx.closePath();\n        ctx.fill();\n        break;\n\n      case 'cross':\n        ctx.beginPath();\n        ctx.moveTo(x, y + radius);\n        ctx.lineTo(x, y - radius);\n        ctx.moveTo(x - radius, y);\n        ctx.lineTo(x + radius, y);\n        ctx.closePath();\n        break;\n\n      case 'crossRot':\n        ctx.beginPath();\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x - xOffset, y + yOffset);\n        ctx.lineTo(x + xOffset, y - yOffset);\n        ctx.closePath();\n        break;\n\n      case 'star':\n        ctx.beginPath();\n        ctx.moveTo(x, y + radius);\n        ctx.lineTo(x, y - radius);\n        ctx.moveTo(x - radius, y);\n        ctx.lineTo(x + radius, y);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x - xOffset, y + yOffset);\n        ctx.lineTo(x + xOffset, y - yOffset);\n        ctx.closePath();\n        break;\n\n      case 'line':\n        ctx.beginPath();\n        ctx.moveTo(x - radius, y);\n        ctx.lineTo(x + radius, y);\n        ctx.closePath();\n        break;\n\n      case 'dash':\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + radius, y);\n        ctx.closePath();\n        break;\n    }\n\n    ctx.stroke();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n  ctx.closePath();\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.currentTarget || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n    var parentNode = domNode.parentNode;\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = domNode.parentNode;\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n    var w = container.clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = domNode.parentNode;\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n    var h = container.clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var color = helpers.color;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    var ratio = 0;\n\n    if (vm.skip) {\n      return;\n    }\n\n    ctx.strokeStyle = vm.borderColor || defaultColor;\n    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n    ctx.fillStyle = vm.backgroundColor || defaultColor; // Cliping for Points.\n    // going out from inner charArea?\n\n    if (chartArea !== undefined && (model.x < chartArea.left || chartArea.right * errMargin < model.x || model.y < chartArea.top || chartArea.bottom * errMargin < model.y)) {\n      // Point fade out\n      if (model.x < chartArea.left) {\n        ratio = (x - model.x) / (chartArea.left - model.x);\n      } else if (chartArea.right * errMargin < model.x) {\n        ratio = (model.x - x) / (model.x - chartArea.right);\n      } else if (model.y < chartArea.top) {\n        ratio = (y - model.y) / (chartArea.top - model.y);\n      } else if (chartArea.bottom * errMargin < model.y) {\n        ratio = (model.y - y) / (model.y - chartArea.bottom);\n      }\n\n      ratio = Math.round(ratio * 100) / 100;\n      ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n      ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n    }\n\n    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.Animation = Element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  Chart.animationService = {\n    frameDuration: 17,\n    animations: [],\n    dropFrames: 0,\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {Number} duration - The animation duration in ms.\n     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      var startTime = Date.now();\n      var framesToDrop = 0;\n\n      if (me.dropFrames > 1) {\n        framesToDrop = Math.floor(me.dropFrames);\n        me.dropFrames = me.dropFrames % 1;\n      }\n\n      me.advance(1 + framesToDrop);\n      var endTime = Date.now();\n      me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance(count) {\n      var animations = this.animations;\n      var animation, chart;\n      var i = 0;\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        animation.currentStep = (animation.currentStep || 0) + count;\n        animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n        helpers.callback(animation.render, [chart, animation], chart);\n        helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= animation.numSteps) {\n          helpers.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      Chart.animationService.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update(me.options.responsiveAnimationDuration);\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      Chart.scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Chart.Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        Chart.animationService.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Chart.Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Chart.Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render(me.options.hover.animationDuration, true);\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element, elementOpts) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = element._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = function (Chart) {\n  Chart.scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        layouts.addBox(chart, scale);\n      });\n    }\n  };\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nmodule.exports = function (Chart) {\n  function computeTextSize(context, tick, font) {\n    return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  function parseFontOptions(options) {\n    var valueOrDefault = helpers.valueOrDefault;\n    var globalDefaults = defaults.global;\n    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n    return {\n      size: size,\n      style: style,\n      family: family,\n      font: helpers.fontString(size, style, family)\n    };\n  }\n\n  function parseLineHeight(options) {\n    return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n  }\n\n  Chart.Scale = Element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || [];\n      me.afterBuildTicks();\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers.noop,\n    afterBuildTicks: function afterBuildTicks() {\n      helpers.callback(this.options.afterBuildTicks, [this]);\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = parseFontOptions(tickOpts);\n      context.font = tickFont.font;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n      var display = opts.display;\n      var isHorizontal = me.isHorizontal();\n      var tickFont = parseFontOptions(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n        var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing them\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding;\n\n        if (isHorizontal) {\n          // A horizontal axis is more constrained by the height.\n          me.longestLabelWidth = largestTextWidth;\n          var angleRadians = helpers.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.font;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n            me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n          } else {\n            me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n            me.paddingRight = lastLabelWidth / 2 + 3;\n          }\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + Math.round(pixel);\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + Math.round(valueOffset);\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var skipRatio;\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var labelRotationRadians = helpers.toRadians(me.labelRotation);\n      var cosRotation = Math.cos(labelRotationRadians);\n      var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n      var result = [];\n      var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n      var maxTicks;\n\n      if (optionTicks.maxTicksLimit) {\n        maxTicks = optionTicks.maxTicksLimit;\n      }\n\n      if (isHorizontal) {\n        skipRatio = false;\n\n        if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n          skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n        } // if they defined a max number of optionTicks,\n        // increase skipRatio until that number is met\n\n\n        if (maxTicks && tickCount > maxTicks) {\n          skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n        }\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n        shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n        if (shouldSkip && i !== tickCount - 1) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n    // Actually draw the scale on the canvas\n    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!options.display) {\n        return;\n      }\n\n      var context = me.ctx;\n      var globalDefaults = defaults.global;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var isRotated = me.labelRotation !== 0;\n      var isHorizontal = me.isHorizontal();\n      var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n      var tickFont = parseFontOptions(optionTicks);\n      var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n      var majorTickFont = parseFontOptions(optionMajorTicks);\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n      var scaleLabelFont = parseFontOptions(scaleLabel);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = me.options.gridLines.lineWidth;\n      var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n      var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n      var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n      var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n      helpers.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash;\n          borderDashOffset = gridLines.zeroLineBorderDashOffset;\n        } else {\n          lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n          borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n        var textAlign = 'middle';\n        var textBaseline = 'middle';\n        var tickPadding = optionTicks.padding;\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (options.position === 'bottom') {\n            // bottom\n            textBaseline = !isRotated ? 'top' : 'middle';\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          } else {\n            // top\n            textBaseline = !isRotated ? 'bottom' : 'middle';\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          }\n\n          var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n          if (xLineValue < me.left) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          xLineValue += helpers.aliasPixel(lineWidth);\n          labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          tx1 = tx2 = x1 = x2 = xLineValue;\n          ty1 = yTickStart;\n          ty2 = yTickEnd;\n          y1 = chartArea.top;\n          y2 = chartArea.bottom + axisWidth;\n        } else {\n          var isLeft = options.position === 'left';\n          var labelXOffset;\n\n          if (optionTicks.mirror) {\n            textAlign = isLeft ? 'left' : 'right';\n            labelXOffset = tickPadding;\n          } else {\n            textAlign = isLeft ? 'right' : 'left';\n            labelXOffset = tl + tickPadding;\n          }\n\n          labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n          var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n          if (yLineValue < me.top) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          yLineValue += helpers.aliasPixel(lineWidth);\n          labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n          tx1 = xTickStart;\n          tx2 = xTickEnd;\n          x1 = chartArea.left;\n          x2 = chartArea.right + axisWidth;\n          ty1 = ty2 = y1 = y2 = yLineValue;\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textBaseline: textBaseline,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers.each(itemsToDraw, function (itemToDraw) {\n        if (gridLines.display) {\n          context.save();\n          context.lineWidth = itemToDraw.glWidth;\n          context.strokeStyle = itemToDraw.glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = itemToDraw.textBaseline;\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n\n          if (helpers.isArray(label)) {\n            var lineCount = label.length;\n            var lineHeight = tickFont.size * 1.5;\n            var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n            for (var i = 0; i < lineCount; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, 0);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = options.position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.font;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (gridLines.drawBorder) {\n        // Draw the line at the edge of the axis\n        context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n        context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n        var x1 = me.left;\n        var x2 = me.right + axisWidth;\n        var y1 = me.top;\n        var y2 = me.bottom + axisWidth;\n        var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n        if (isHorizontal) {\n          y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n          y1 += aliasPixel;\n          y2 += aliasPixel;\n        } else {\n          x1 = x2 = options.position === 'left' ? me.right : me.left;\n          x1 += aliasPixel;\n          x2 += aliasPixel;\n        }\n\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  /**\n  \t * Helper method to merge the opacity into a color\n  \t */\n  function mergeOpacity(colorString, opacity) {\n    var color = helpers.color(colorString);\n    return color.alpha(opacity * color.alpha()).rgbaString();\n  } // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  } // Private helper to create a tooltip item model\n  // @param element : the chart element (point, arc, bar) to create the tooltip item for\n  // @return : new tooltip item\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {Object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers.each(body, function (bodyItem) {\n      helpers.each(bodyItem.before, maxLineWidth);\n      helpers.each(bodyItem.lines, maxLineWidth);\n      helpers.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  Chart.Tooltip = Element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, beforeTitle);\n      lines = pushOrConcat(lines, title);\n      lines = pushOrConcat(lines, afterTitle);\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      var lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\n      return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      var lines = this._options.callbacks.afterBody.apply(this, arguments);\n\n      return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, beforeFooter);\n      lines = pushOrConcat(lines, footer);\n      lines = pushOrConcat(lines, afterFooter);\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = Math.round(tooltipPosition.x);\n        model.y = Math.round(tooltipPosition.y);\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n      var title = vm.title;\n\n      if (title.length) {\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n        ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx, opacity) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var body = vm.body;\n      ctx.textAlign = vm._bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n      var xLinePadding = 0;\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n      helpers.each(vm.beforeBody, fillLineOfText);\n      var drawColorBoxes = vm.displayColors;\n      xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers.each(body, function (bodyItem, i) {\n        var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n        ctx.fillStyle = textColor;\n        helpers.each(bodyItem.before, fillLineOfText);\n        helpers.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n            ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n            ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n            ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n        ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n      ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n      ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        // Draw Background\n        this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n        pt.x += vm.xPadding;\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx, opacity); // Body\n\n        this.drawBody(pt, vm, ctx, opacity); // Footer\n\n        this.drawFooter(pt, vm, ctx, opacity);\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {Boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  Chart.Tooltip.positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {Point} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: Math.round(x / count),\n        y: Math.round(y / count)\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {Point} the position of the event in canvas coordinates\n     * @returns {Point} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  };\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  var precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, spacing.toString().length - 2);\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Chart.Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Chart.Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Chart.Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Chart.Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Chart.Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Chart.Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  Chart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  Chart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Chart.Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Chart.Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Chart.Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Chart.Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  Chart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    },\n    setHoverStyle: function setHoverStyle(rectangle) {\n      var dataset = this.chart.data.datasets[rectangle._datasetIndex];\n      var index = rectangle._index;\n      var custom = rectangle.custom || {};\n      var model = rectangle._model;\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n    removeHoverStyle: function removeHoverStyle(rectangle) {\n      var dataset = this.chart.data.datasets[rectangle._datasetIndex];\n      var index = rectangle._index;\n      var custom = rectangle.custom || {};\n      var model = rectangle._model;\n      var rectangleElementOptions = this.chart.options.elements.rectangle;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @protected\n     */\n    removeHoverStyle: function removeHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      model.backgroundColor = options.backgroundColor;\n      model.borderColor = options.borderColor;\n      model.borderWidth = options.borderWidth;\n      model.radius = options.radius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      this.removeHoverStyle(arc); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    removeHoverStyle: function removeHoverStyle(arc) {\n      Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, area);\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        meta.dataset.draw();\n      }\n\n      helpers.canvas.unclipArea(chart.ctx); // Draw the points\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var index = point._index;\n      var custom = point.custom || {};\n      var model = point._model;\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    },\n    removeHoverStyle: function removeHoverStyle(point) {\n      var me = this;\n      var dataset = me.chart.data.datasets[point._datasetIndex];\n      var index = point._index;\n      var custom = point.custom || {};\n      var model = point._model; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n      model.backgroundColor = me.getPointBackgroundColor(point, index);\n      model.borderColor = me.getPointBorderColor(point, index);\n      model.borderWidth = me.getPointBorderWidth(point, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var meta = me.getMeta();\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n      meta.count = me.countVisibleElements();\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var circumference = me.calculateCircumference(dataset.data[index]);\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // If there is NaN data before us, we need to calculate the starting angle correctly.\n      // We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\n      var visibleCount = 0;\n      var meta = me.getMeta();\n\n      for (var i = 0; i < index; ++i) {\n        if (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n          ++visibleCount;\n        }\n      } // var negHalfPI = -0.5 * Math.PI;\n\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = datasetStartAngle + circumference * visibleCount;\n      var endAngle = startAngle + (arc.hidden ? 0 : circumference);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      me.removeHoverStyle(arc);\n      arc.pivot();\n    },\n    removeHoverStyle: function removeHoverStyle(arc) {\n      Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var count = this.getMeta().count;\n\n      if (count > 0 && !isNaN(value)) {\n        return 2 * Math.PI / count;\n      }\n\n      return 0;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    },\n    removeHoverStyle: function removeHoverStyle(point) {\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      var pointElementOptions = this.chart.options.elements.point;\n      model.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}