{"version":3,"sources":["components/uielements/textfield/index.js","containers/POS/Checkout/orderInfo.js","containers/POS/Checkout/singleOrder.js","components/billingForm/billingForm.style.js","components/billingForm/billingForm.js","containers/POS/Checkout/checkout.style.js","containers/POS/Checkout/index.js"],"names":["_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_0___default","n","TextField","totalPrice","_this$props","this","props","price","quantity","name","_highlightResult","value","toFixed","trimName","substring","react_default","a","createElement","className","Component","OrderInfo","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","table","e","console","log","setState","staff","target","validating","notifyChange","id","handleClicked","products","state","notifyCheckout","renderProducts","bind","assertThisInitialized","productQuantity","map","product","objectID","singleOrder_default","assign","key","autocomplete","config","label","error","onChange","uielements_button","disabled","length","variant","color","onClick","clearCart","connect","objectSpread","Ecommerce","styled","TextFields","_templateObject","Form","form","_templateObject2","BillingForm","email","multiline","event","_this2","noValidate","autoComplete","required","fullWidth","margin","type","React","CheckoutPageWrapper","div","checkout_style_templateObject","palette","WithDirection","checkout","actions","Checkout","loading","handleChanged","defineProperty","handleCheckout","that","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","customerEmail","recp_customer_email","customerName","recp_customer","staff_id","recp_staff_id","staffName","sales","forEach","x","obj","push","inventoryId","inventoryID","sale_inv_id","sale_price","sale_total_purchase","prod_name","swal","success","message","layoutWrapper","checkout_style","LinearProgress_default","style","display","rowColumn","papersheet","billingForm","orderInfo","checkingOut","App","withStyles","theme","withTheme"],"mappings":"4FAAA,IAAAA,EAAAC,EAAA,KAAAC,EAAAD,EAAAE,EAAAH,GAEeI,MAAf,gDCIIC,mSCHO,IAAAC,EACuCC,KAAKC,MAA3CC,EADDH,EACCG,MAAOC,EADRJ,EACQI,SACTC,EAFCL,EACkBM,iBACKD,KAAKE,MAC7BR,GAAcI,EAAQC,GAAUI,QAAQ,GACxCC,EAAWJ,EAAOA,EAAKK,UAAU,EAAG,IAAM,GAChD,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,YAAOJ,GACPE,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYV,IAE9BO,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,IAA+Bf,WAbVgB,aDMvBC,cACJ,SAAAA,EAAYd,GAAO,IAAAe,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjB,KAAAe,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAArB,KAAMC,KAKRqB,aAAe,SAACC,GAAD,OAAW,SAACC,GACzBC,QAAQC,IAAI,QACZV,EAAKW,SAAS,CAACC,MAAOJ,EAAEK,OAAOvB,MAAOwB,YAAY,IAE9Cd,EAAKf,MAAM8B,eACbf,EAAKf,MAAM8B,aAAa,gBAAiBP,EAAEK,OAAOG,IAClDhB,EAAKf,MAAM8B,aAAa,YAAaP,EAAEK,OAAOvB,UAZ/BU,EA+BnBiB,cAAgB,WACdR,QAAQC,IAAIV,EAAKf,MAAMiC,UACE,KAArBlB,EAAKmB,MAAMP,OAAiBZ,EAAKmB,MAAMP,MAI3CZ,EAAKf,MAAMmC,iBAHTpB,EAAKW,SAAS,CAACG,YAAY,KAhC7Bd,EAAKqB,eAAiBrB,EAAKqB,eAAeC,KAApBrB,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAD,KACtBA,EAAKmB,MAAQ,CAACL,YAAY,EAAOF,MAAO,IAHvBZ,gFAgBF,IAAAjB,EACuBC,KAAKC,MAAnCuC,EADOzC,EACPyC,gBAAiBN,EADVnC,EACUmC,SAEzB,OADApC,EAAa,EACN0C,EAAgBC,IAAI,SAAAC,GAEzB,OADA5C,GAAc4C,EAAQvC,SAAW+B,EAASQ,EAAQC,UAAUzC,MAE1DQ,EAAAC,EAAAC,cAACgC,EAAD3B,OAAA4B,OAAA,CACEC,IAAKJ,EAAQC,SACbxC,SAAUuC,EAAQvC,UACd+B,EAASQ,EAAQC,+CAgB3B,OACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,WACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,UAGFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBb,KAAKqC,kBACtC3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,gBAAQd,EAAWS,QAAQ,KAI7BG,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAcC,OAAO,SAASC,MAAO,QAAS3C,MAAON,KAAKmC,MAAMP,MAAQ5B,KAAKmC,MAAMP,MAAQ,GAAIsB,MAAOlD,KAAKmC,MAAML,WAAYqB,SAAUnD,KAAKsB,aAAa,YAGzJZ,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAQC,SAAgD,IAAtCrD,KAAKC,MAAMuC,gBAAgBc,OAAcC,QAAQ,SAASC,MAAM,UAAU3C,UAAU,WAAW4C,QAASzD,KAAKiC,eAA/H,eAGAvB,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAQK,QAASzD,KAAKC,MAAMyD,WAA5B,uBA/Dc5C,aA6ET6C,kBALf,SAAyBxB,GACvB,OAAOlB,OAAA2C,EAAA,EAAA3C,CAAA,GACFkB,EAAM0B,YAGEF,CAAyB5C,iRElFxC,IAAMlB,EAAYiE,YAAOC,IAAPD,CAAHE,KAKTC,EAAOH,IAAOI,KAAVC,KCmDKC,6MAtDbjC,MAAQ,CACN/B,KAAM,GACNiE,MAAO,GACPC,UAAW,gBAGbhD,aAAe,SAAAlB,GAAI,OAAI,SAAAmE,GACrB9C,QAAQC,IAAIV,EAAKf,MAAM8B,cACnBf,EAAKf,MAAM8B,cACbf,EAAKf,MAAM8B,aAAa3B,EAAMmE,EAAM1C,OAAOvB,iFAItC,IAAAkE,EAAAxE,KACP,OACEU,EAAAC,EAAAC,cAACqD,EAAD,CAAMQ,YAAU,EAACC,aAAa,OAC5BhE,EAAAC,EAAAC,cAACf,EAAD,CACE8E,UAAQ,EACRC,WAAS,EACT5C,GAAG,WACHnB,UAAU,kCACVoC,MAAM,YACN4B,OAAO,SACPvE,MAAON,KAAKmC,MAAM/B,KAClB+C,SAAU,SAAC3B,GACTgD,EAAK7C,SAAS,CAACvB,KAAKoB,EAAEK,OAAOvB,QAE7BkE,EAAKlD,aAAa,gBAAlBkD,CAAmChD,MAGvCd,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACf,EAAD,CACE8E,UAAQ,EACRC,WAAS,EACT5C,GAAG,QACHnB,UAAU,8BACVoC,MAAM,gBACN6B,KAAK,QACLD,OAAO,SACPvE,MAAON,KAAKmC,MAAMkC,MAClBlB,SAAU,SAAC3B,GACTgD,EAAK7C,SAAS,CAAC0C,MAAM7C,EAAEK,OAAOvB,QAC9BkE,EAAKlD,aAAa,sBAAlBkD,CAAyChD,cA3C3BuD,IAAMjE,w8HCAhC,IAAMkE,EAAsBlB,IAAOmB,IAAVC,IAIZC,kBAAQ,OAAQ,GAgCZA,kBAAQ,OAAQ,GA+ChBA,kBAAQ,OAAQ,GA+BEA,kBAAQ,OAAQ,GAQ9BA,kBAAQ,OAAQ,GAShBA,kBAAQ,OAAQ,GASlBA,kBAAQ,OAAQ,GAyBlBA,kBAAQ,OAAQ,IAWlBC,cAAcJ,GC7JrBK,EAAwBC,IAAxBD,SAAU3B,EAAc4B,IAAd5B,UAEZ6B,6MACJpD,MAAQ,CACNqD,SAAS,KAGXC,cAAgB,SAACrF,EAAME,GACrBU,EAAKW,SAALV,OAAAyE,EAAA,EAAAzE,CAAA,GAAiBb,EAAOE,OAwB1BqF,eAAiB,WACf,IAAIC,EAAI3E,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAD,IACkC,IAAtCA,EAAKf,MAAMuC,gBAAgBc,OAQ/BuC,UAAUC,YAAYC,mBAAmB,SAAUC,GAGjD,IAAIC,EAAMD,EAASE,OAAOC,SACtBC,EAAMJ,EAASE,OAAOG,UAEtBlE,EAAQ,CACVmE,cAAeV,EAAKzD,MAAMoE,oBAC1BC,aAAcZ,EAAKzD,MAAMsE,cACzBJ,UAAaD,EACbD,SAAYF,EACZS,SAAYd,EAAKzD,MAAMwE,cACvBC,UAAahB,EAAKzD,MAAMyE,UACxBC,MAAS,IAGXjB,EAAK3F,MAAMuC,gBAAgBsE,QAAQ,SAAAC,GAGjC,IAAIC,EAAMpB,EAAK3F,MAAMiC,SAAS6E,EAAEpE,UAC5BxC,EAAW4G,EAAE5G,SAEjBgC,EAAM0E,MAAMI,KAAK,CACdC,YAAcF,EAAIG,YAClBC,YAAcJ,EAAIG,YAClBE,WAAYL,EAAI9G,MAChBoH,oBAAqBnH,EACrBoH,UAAWP,EAAI5G,SAIpBqB,QAAQC,IAAI,QAASS,GACrBV,QAAQC,IAAI,WAAYkE,EAAK3F,MAAMoF,UAEnCO,EAAK3F,MAAMoF,SAASlD,GACpByD,EAAKjE,SAAS,CAAC6D,SAAS,MA1CxBgC,IACE,qBACA,iCACA,mGA3BoBvH,GACxBwB,QAAQC,IAAIzB,GACRA,EAAMwH,UAAYzH,KAAKC,MAAMwH,SAE/BzH,KAAK2B,SAAS,CAAC6D,SAAS,IACxBgC,IACE,kCACA,4DACA,aAGMvH,EAAMwH,SAAWzH,KAAKmC,MAAMqD,UACpCxF,KAAK2B,SAAS,CAAC6D,SAAS,IACxBgC,IACE,qBACA,wCAA0CvH,EAAMyH,QAChD,2CAyDJ,OACEhH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,KACEjH,EAAAC,EAAAC,cAACgH,EAAD,CAAqB/G,UAAU,uBAC7BH,EAAAC,EAAAC,cAACiH,EAAAlH,EAAD,CAAgBmH,MAAO,CAAEC,QAAS/H,KAAKmC,MAAMqD,QAAU,QAAU,UAEjE9E,EAAAC,EAAAC,cAACoH,EAAA,EAAD,KACEtH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,KACEtH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACEvH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,mBACAH,EAAAC,EAAAC,cAACsH,EAAD,CAAanG,aAAc/B,KAAKyF,kBAIpC/E,EAAAC,EAAAC,cAACoH,EAAA,EAAD,KACEtH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACEvH,EAAAC,EAAAC,cAACuH,EAAD,CAAWpG,aAAc/B,KAAKyF,cAAe/B,UAAW1D,KAAKC,MAAMyD,UAAW0E,YAAapI,KAAKmC,MAAMqD,QAASpD,eAAgBpC,KAAK2F,6BAjG7HZ,IAAMjE,WA2Gd6C,sBACb,SAAAxB,GAAK,OAAAlB,OAAA2C,EAAA,EAAA3C,CAAA,GACAkB,EAAMkG,IACNlG,EAAM0B,YAEX,CAAEwB,WAAU3B,aALCC,CAMb2E,qBApHa,SAAAC,GAAK,MAAK,IAoHJ,CAAEC,WAAW,GAAhCF,CAAwC/C","file":"static/js/14.97cbfd1d.chunk.js","sourcesContent":["import TextField from '@material-ui/core/TextField';\r\n\r\nexport default TextField;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"../../../components/uielements/button\";\nimport Autocomplete from \"../../../components/masterdetail/autocomplete\"\nimport SingleOrderInfo from \"./singleOrder\";\n\nlet totalPrice;\n\nclass OrderInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.renderProducts = this.renderProducts.bind(this);\n    this.state = {validating: false, staff: \"\"}\n  }\n\n  handleChange = (table) => (e) => {\n    console.log(\"Done\");\n    this.setState({staff: e.target.value, validating: false});\n\n    if (this.props.notifyChange) {\n      this.props.notifyChange(\"recp_staff_id\", e.target.id)      \n      this.props.notifyChange(\"staffName\", e.target.value)\n    }\n  }\n\n  renderProducts() {\n    const { productQuantity, products } = this.props;\n    totalPrice = 0;\n    return productQuantity.map(product => {\n      totalPrice += product.quantity * products[product.objectID].price;\n      return (\n        <SingleOrderInfo\n          key={product.objectID}\n          quantity={product.quantity}\n          {...products[product.objectID]}\n        />\n      );\n    });\n  }\n\n  handleClicked = () => {\n    console.log(this.props.products);  \n    if (this.state.staff === \"\" || !this.state.staff) {\n      this.setState({validating: true});\n      return;\n    }  \n    this.props.notifyCheckout();\n  }\n\n  render() {\n    return (\n      <div className=\"orderInfo\">\n        <div className=\"orderTable\">\n          <div className=\"orderTableHead\">\n            <span className=\"tableHead\">Product</span>\n            <span className=\"tableHead\">Total</span>\n          </div>\n\n          <div className=\"orderTableBody\">{this.renderProducts()}</div>\n          <div className=\"orderTableFooter\">\n            <span>Total</span>\n            <span>${totalPrice.toFixed(2)}</span>\n          </div>   \n          \n          \n          <Autocomplete config=\"staffs\" label={\"Staff\"} value={this.state.staff ? this.state.staff : \"\"} error={this.state.validating} onChange={this.handleChange(\"staffs\")}/>\n      \n\n          <Button disabled={this.props.productQuantity.length === 0} variant=\"raised\" color=\"primary\" className=\"orderBtn\" onClick={this.handleClicked}>\n            Place Order\n          </Button>\n          <Button onClick={this.props.clearCart}>\n            Next Order\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ...state.Ecommerce\n  };\n}\nexport default connect(mapStateToProps)(OrderInfo);\n","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    const { price, quantity, _highlightResult } = this.props;\n    const name = _highlightResult.name.value;\n    const totalPrice = (price * quantity).toFixed(2);\n    const trimName = name ? name.substring(0, 30) : '';\n    return (\n      <div className=\"singleOrderInfo\">\n        <p>\n          <span>{trimName}</span>\n          <span>x</span>\n          <span className=\"quantity\">{quantity}</span>\n        </p>\n        <span className=\"totalPrice\">${totalPrice}</span>\n      </div>\n    );\n  }\n}\n","import styled from 'styled-components';\r\nimport TextFields from '../uielements/textfield';\r\n\r\nconst TextField = styled(TextFields)`\r\n  margin: 0 8px 16px;\r\n  \r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  .menu {\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nexport { Form, TextField };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, TextField } from './billingForm.style';\r\n\r\nclass BillingForm extends React.Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    multiline: 'Controlled',\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    console.log(this.props.notifyChange);\r\n    if (this.props.notifyChange) {\r\n      this.props.notifyChange(name, event.target.value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form noValidate autoComplete=\"off\">\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          id=\"fullName\"\r\n          className=\"firstNameField billingFormField\"\r\n          label=\"Full Name\"\r\n          margin=\"normal\"\r\n          value={this.state.name}\r\n          onChange={(e) => {\r\n            this.setState({name:e.target.value});\r\n            \r\n            this.handleChange(\"recp_customer\")(e);\r\n          }}\r\n        />\r\n        <br/>\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          className=\"emailField billingFormField\"\r\n          label=\"Email Address\"\r\n          type=\"email\"\r\n          margin=\"normal\"\r\n          value={this.state.email}\r\n          onChange={(e) => {\r\n            this.setState({email:e.target.value});\r\n            this.handleChange(\"recp_customer_email\")(e);\r\n          }}\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nBillingForm.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default BillingForm;\r\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport WithDirection from '../../../settings/withDirection';\n\nconst CheckoutPageWrapper = styled.div`\n  h3.sectionTitle {\n    font-size: 16px;\n    font-weight: 500;\n    color: ${palette('grey', 9)};\n    padding: 0 7px;\n  }\n\n  form {\n    padding-right: 20px;\n\n    @media only screen and (min-width: 768px) and (max-width: 991px) {\n      padding-right: 0;\n    }\n\n    @media only screen and (max-width: 767px) {\n      padding-right: 0;\n    }\n\n    .fullColumnWidth {\n      width: 100%;\n    }\n\n    .billingFormField {\n      margin-bottom: 20px;\n\n      @media only screen and (min-width: 768px) and (max-width: 991px) {\n        width: 100%;\n      }\n\n      @media only screen and (max-width: 767px) {\n        width: 100%;\n      }\n\n      label {\n        font-size: 0.9rem;\n        color: ${palette('grey', 8)};\n      }\n\n      > div {\n        input {\n          height: 1.65em;\n        }\n      }\n\n      &.selectField {\n        > div > div > div {\n          height: calc(1em + 14px);\n          font-size: 0.9rem;\n        }\n      }\n    }\n  }\n\n  .orderInfo {\n    width: 100%;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n\n    .orderTableHead {\n      width: 100%;\n      display: -webkit-box;\n      display: -webkit-flex;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-pack: justify;\n      -webkit-justify-content: space-between;\n      -ms-flex-pack: justify;\n      justify-content: space-between;\n      -webkit-align-items: center;\n      -webkit-box-align: center;\n      -ms-flex-align: center;\n      align-items: center;\n      margin-bottom: 20px;\n\n      span.tableHead {\n        font-size: 15px;\n        font-weight: 500;\n        color: ${palette('grey', 8)};\n        line-height: 1.2;\n      }\n    }\n\n    .orderTableBody {\n      width: 100%;\n      display: -webkit-box;\n      display: -webkit-flex;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-flex-direction: column;\n      -ms-flex-direction: column;\n      flex-direction: column;\n      margin-bottom: 10px;\n\n      .singleOrderInfo {\n        width: 100%;\n        display: -webkit-box;\n        display: -webkit-flex;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-pack: justify;\n        -webkit-justify-content: space-between;\n        -ms-flex-pack: justify;\n        justify-content: space-between;\n        -webkit-align-items: center;\n        -webkit-box-align: center;\n        -ms-flex-align: center;\n        align-items: center;\n        padding: 10px 0;\n        border-bottom: 1px solid ${palette('grey', 3)};\n\n        p {\n          margin: 0;\n\n          span {\n            font-size: 13px;\n            font-weight: 400;\n            color: ${palette('grey', 5)};\n            line-height: 1.5;\n            padding: 0 3px;\n            display: inline-block;\n          }\n\n          span.quantity {\n            font-size: 13px;\n            font-weight: 400;\n            color: ${palette('grey', 8)};\n            line-height: 1.5;\n            display: inline-block;\n          }\n        }\n\n        .totalPrice {\n          font-size: 13px;\n          font-weight: 500;\n          color: ${palette('grey', 5)};\n          line-height: 1.5;\n        }\n      }\n    }\n\n    .orderTableFooter {\n      width: 100%;\n      display: -webkit-box;\n      display: -webkit-flex;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-pack: justify;\n      -webkit-justify-content: space-between;\n      -ms-flex-pack: justify;\n      justify-content: space-between;\n      -webkit-align-items: center;\n      -webkit-box-align: center;\n      -ms-flex-align: center;\n      align-items: center;\n      margin-bottom: 40px;\n\n      span {\n        font-size: 14px;\n        font-weight: 500;\n        color: ${palette('grey', 8)};\n        line-height: 1.2;\n      }\n    }\n\n    .orderBtn {\n      width: 100%;\n    }\n  }\n`;\n\nexport default WithDirection(CheckoutPageWrapper);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport OrderInfo from './orderInfo';\n\nimport { connect } from 'react-redux';\nimport BillingForm from '../../../components/billingForm/billingForm';\nimport LayoutWrapper from '../../../components/utility/layoutWrapper';\nimport Papersheet from '../../../components/utility/papersheet';\nimport swal from 'sweetalert2';\n\nimport actions from '../../../redux/ecommerce/actions';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport {\n  Row,\n  OneThirdColumn,\n  TwoThirdColumn,\n  HalfColumn,\n} from '../../../components/utility/rowColumn';\nimport CheckoutPageWrapper from './checkout.style';\n\nconst styles = theme => ({});\nconst { checkout, clearCart } = actions;\n\nclass Checkout extends React.Component {\n  state = {\n    loading: false\n\n  }\n  handleChanged = (name, value) => {\n    this.setState({ [name]: value })\n  }\n\n  componentWillReceiveProps(props) {\n    console.log(props);\n    if (props.success && !this.props.success) {\n      // done!\n      this.setState({loading: false});\n      swal(\n        'Checkout Completed Successfully',\n        'Successfully Checkout the Cart, your items have been sold',\n        'success'\n      )\n    }\n    else if (!props.success && this.state.loading) {      \n      this.setState({loading: false});\n      swal(\n        'Failed to Checkout',\n        'Failed to checkout, internal error : ' + props.message,\n        'error'\n      );\n    }\n  }\n\n  handleCheckout = () => {\n    let that = this;\n    if (this.props.productQuantity.length === 0) {\n      swal(\n        'Failed to Checkout',\n        'Cannot checkout an empty cart!',\n        'error'\n      )\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(function (position) {\n\n      // Get the coordinates of the current position.\n      var lat = position.coords.latitude;\n      var lng = position.coords.longitude;\n\n      let state = {\n        customerEmail: that.state.recp_customer_email,\n        customerName: that.state.recp_customer,\n        \"longitude\": lng,\n        \"latitude\": lat,\n        \"staff_id\": that.state.recp_staff_id,\n        \"staffName\": that.state.staffName,\n        \"sales\": []\n      }\n\n      that.props.productQuantity.forEach(x => {\n        // objectID\n\n        let obj = that.props.products[x.objectID];\n        let quantity = x.quantity;\n        \n        state.sales.push({\n           inventoryId : obj.inventoryID,\n           sale_inv_id : obj.inventoryID,\n           sale_price: obj.price,\n           sale_total_purchase: quantity,\n           prod_name: obj.name\n        })\n      });\n\n      console.log(\"items\", state);\n      console.log(\"Checkout\", that.props.checkout);\n\n      that.props.checkout(state); // lets checkout!\n      that.setState({loading: true})\n\n    });\n\n\n  }\n  render() {\n    return (\n      <LayoutWrapper>\n        <CheckoutPageWrapper className=\"checkoutPageWrapper\">\n          <LinearProgress style={{ display: this.state.loading ? \"block\" : \"none\" }} />\n\n          <Row>\n            <HalfColumn>\n              <Papersheet>\n                <h3 className=\"sectionTitle\">Billing details</h3>\n                <BillingForm notifyChange={this.handleChanged} />\n              </Papersheet>\n            </HalfColumn>\n\n            <HalfColumn>\n              <Papersheet>\n                <OrderInfo notifyChange={this.handleChanged} clearCart={this.props.clearCart} checkingOut={this.state.loading} notifyCheckout={this.handleCheckout} />\n              </Papersheet>\n            </HalfColumn>\n          </Row>\n        </CheckoutPageWrapper>\n      </LayoutWrapper>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    ...state.App,\n    ...state.Ecommerce\n  }),\n  { checkout, clearCart }\n)(withStyles(styles, { withTheme: true })(Checkout));\n\n"],"sourceRoot":""}