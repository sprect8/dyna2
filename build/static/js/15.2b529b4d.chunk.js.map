{"version":3,"sources":["containers/Settings/index.js"],"names":["loadData","actions","saveData","updateData","deleteData","openToEdit","openForNew","closedEditBox","settings","tableName","displayName","key","display","description","columns","name","type","sequence","mandatory","unique","Settings","state","open","records","sel","loadingRows","componentDidMount","_this","props","config","componentWillReceiveProps","deleting","success","swal","message","console","log","rows","setState","updating","error","saved","loaded","selectedData","handleClickOpen","data","forEach","x","handleClose","handleEditRow","row","handleUpdate","record","handleDeleteRow","this","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_components_utility_layoutWrapper__WEBPACK_IMPORTED_MODULE_7__","_components_utility_rowColumn__WEBPACK_IMPORTED_MODULE_9__","_components_masterdetail_formedit__WEBPACK_IMPORTED_MODULE_14__","updateError","updateSuccess","onClose","onUpdate","isPanel","React","Component","appConect","connect","Object","C_dev_dyna2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","MasterDetailsReducer"],"mappings":"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","file":"static/js/15.2b529b4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport LayoutWrapper from '../../components/utility/layoutWrapper';\r\nimport Papersheet from '../../components/utility/papersheet';\r\nimport { FullColumn } from '../../components/utility/rowColumn';\r\nimport Button from '../../components/uielements/button';\r\nimport Icon from '../../components/uielements/icon';\r\nimport swal from 'sweetalert2';\r\n\r\nimport TableView from '../../components/masterdetail/tableview';\r\nimport FormEditView from '../../components/masterdetail/formedit';\r\nimport HistoryView from '../../components/masterdetail/historyview';\r\n\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport actions from '../../redux/masterdetails/actions';\r\nimport { connect } from 'react-redux';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n/**\r\n * This tool is for data entry into the system based on an underlying database model \r\n **/\r\n\r\nconst { loadData, saveData, updateData, deleteData, openToEdit, openForNew, closedEditBox } = actions;\r\n\r\n/**\r\n * Username First Name Last Name\r\n * Company Name Company Industry\r\n * Company Motto Company Phone Company Email\r\n * Company Logo\r\n * \r\n * Password settings\r\n */\r\n\r\nconst settings = {\r\n    \"tableName\": \"settings\",\r\n    \"displayName\": \"Settings table\",\r\n    \"key\": \"cate_id\",\r\n    \"display\": \"cate_name\",\r\n    \"description\": \"Settings Table\",\r\n    \"columns\": [\r\n      { \"name\": \"sett_id\", \"display\": \"Setting ID\", \"type\": \"number\", \"sequence\": \"cate_id_seq\", \"mandatory\": true, \"unique\": true, \"key\": true },\r\n      { \"name\": \"sett_user_id\", \"display\": \"User ID\", \"type\": \"text\", \"mandatory\": true, \"unique\": true },\r\n\t  { \"name\": \"sett_user_pic\", \"display\": \"User Photo\", \"type\": \"picture\"},\r\n\t  { \"name\": \"sett_company_name\", \"display\": \"Company Name\", \"type\": \"text\" },\r\n\t  { \"name\": \"sett_company_logo\", \"display\": \"Logo\", \"type\": \"picture\" },\r\n\t  { \"name\": \"sett_company_motto\", \"display\": \"Motto\", \"type\": \"text\" },\r\n\t  { \"name\": \"sett_company_email\", \"display\": \"Email\", \"type\": \"text\" },\r\n\t  { \"name\": \"sett_company_phone\", \"display\": \"Phone\", \"type\": \"text\" },\r\n\t  { \"name\": \"sett_indt_id\", \"display\": \"Industry\", \"type\": \"text\" }\r\n    ]\r\n  }\r\n\r\nclass Settings extends React.Component {\r\n\tstate = {\r\n\t\topen: false,\r\n\t\trecords: [],\r\n\t\tsel: {},\r\n\t\tloadingRows: true,\r\n\t};\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tthis.props.loadData(this.props.config);\r\n\t}\r\n\r\n\tcomponentWillReceiveProps = (props) => {\r\n\r\n\t\tif (this.deleting && props.success) {\r\n\t\t\tswal(\r\n\t\t\t\t'Deleted!',\r\n\t\t\t\t'Your row has been deleted.',\r\n\t\t\t\t'success'\r\n\t\t\t)\r\n\t\t}\r\n\t\tif (this.deleting && !props.success) {\r\n\t\t\tswal(\r\n\t\t\t\t'Failed to Deleted!',\r\n\t\t\t\t'Your row has not been deleted. Error was ' + props.message,\r\n\t\t\t\t'error'\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.deleting = false;\r\n\r\n\t\tconsole.log(props);\r\n\t\tif (props.rows) {\r\n\r\n\t\t\tthis.setState({ records: props.rows, loadingRows: false })\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setState({ records: [] })\r\n\t\t}\r\n\r\n\t\tif (this.updating) {\r\n\t\t\t// check error\r\n\t\t\tlet error = props.message;\r\n\t\t\tlet saved = !error;\r\n\r\n\t\t\tthis.setState({ saved, error, message: props.message })\r\n\t\t}\r\n\t\tthis.updating = false;\r\n\r\n\t\tif (this.props.loaded !== props.loaded && props.loaded && props.selectedData) {\r\n\t\t\tthis.setState({ open: true, sel: props.selectedData });\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOpen = () => {\r\n\t\t// clear items\r\n\t\tlet data = {};\r\n\t\tthis.props.config.columns.forEach(x => {\r\n\t\t\tdata[x.name] = \"\";\r\n\t\t});\r\n\t\tdata[this.props.config.key] = null;\r\n\t\t//this.setState({ open: true, sel: data });\r\n\t\tthis.props.openForNew(data);\r\n\t};\r\n\r\n\thandleClose = () => {\r\n\t\tthis.props.closedEditBox();\r\n\t\tthis.setState({ open: false });\r\n\r\n\t};\r\n\r\n\thandleEditRow = (row) => {\r\n\t\t//this.setState({open: true, sel: row});\r\n\t\tthis.props.openToEdit(row);\r\n\t}\r\n\r\n\thandleUpdate = (record) => {\r\n\t\tconsole.log(this.props.saveData);\r\n\t\tthis.updating = true;\r\n\t\tthis.props.saveData(this.props.config, record);\r\n\t\t//let st = this.state.records;\r\n\t\t//st.push(record);\r\n\t\t//this.setState({records:st, open: false});\r\n\t}\r\n\r\n\thandleDeleteRow = (record) => {\r\n\t\tlet key = record[this.props.config.key];\r\n\t\tconsole.log(key);\r\n\t\tthis.props.deleteData(this.props.config, key);\r\n\t\tthis.deleting = true;\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet { config } = this.props;\r\n\t\treturn (<LayoutWrapper>\r\n\r\n\t\t\t<FullColumn>\r\n\t\t\t\t<h3>Personal</h3>\r\n\r\n\t\t\t</FullColumn>\r\n\t\t\t<FullColumn>\r\n\t\t\t\t<h3>Company</h3>\r\n\t\t\t\t<FormEditView config={settings} open={this.state.open}\r\n\t\t\t\tupdateError={this.state.error}\r\n\t\t\t\tupdateSuccess={this.state.saved}\r\n\t\t\t\tmessage={this.state.message}\r\n\r\n\t\t\t\tonClose={this.handleClose}\r\n\t\t\t\tonUpdate={this.handleUpdate}\r\n\t\t\t\tdata={this.state.sel} \r\n\t\t\t\tisPanel={true}\r\n\t\t\t\t/>\r\n\t\t\t</FullColumn>\t\t\t\r\n\t\t</LayoutWrapper>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nconst appConect = connect(\r\n\tstate => ({\r\n\t\t...state.MasterDetailsReducer,\r\n\t}),\r\n\t{ loadData, updateData, saveData, deleteData, openToEdit, openForNew, closedEditBox }\r\n)(Settings);\r\nexport default appConect;\r\n\r\n"],"sourceRoot":""}