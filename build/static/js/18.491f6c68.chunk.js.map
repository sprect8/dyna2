{"version":3,"sources":["components/uielements/checkbox/index.js","components/uielements/dialogs/index.js","helpers/asyncComponent.js","components/uielements/dividers/index.js","components/mail/composeAutoComplete/composeAutoComplete.style.js","components/mail/composeAutoComplete/index.js","components/mail/composeMail/composeMail.style.js","components/mail/composeMail/index.js","components/mail/singleMail/singleMail.style.js","components/mail/singleMail/actionButton.js","components/mail/singleMail/index.js","components/mail/mailTags/mailTags.style.js","components/mail/mailTags/index.js","components/mail/singleMailActions/style.js","components/mail/singleMailActions/index.js","components/utility/helper-text/style.js","components/utility/helper-text/index.js","components/uielements/expansionPanel/index.js","components/mail/mailList/mailList.style.js","components/mail/mailList/index.js","components/mail/mailBucket/mailBucket.style.js","components/mail/mailBucket/index.js","components/mail/mailComposeBtn/mailComposeBtn.style.js","components/mail/mailComposeBtn/index.js","components/mail/bulkMailActions/style.js","components/mail/bulkMailActions/index.js","redux/mail/selector.js","components/uielements/inputSearch/inputSearch.style.js","components/uielements/inputSearch/index.js","containers/Mail/mailBox.style.js","containers/Mail/desktopView.js","containers/Mail/tabView.js","containers/Mail/index.js"],"names":["_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_0___default","n","Checkbox","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_0___default","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","a","Dialog","AsyncComponent","state","Component","undefined","this","mounted","componentArguement","props","load","googleChart","Chart","newComponent","default","setState","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","componentProps","react_placeholder__WEBPACK_IMPORTED_MODULE_8___default","type","rows","ready","Divider","styled","div","_templateObject","ComposeAutoCompleteStyleWrapper","_templateObject2","palette","borderRadius","transition","_default","_this","array","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tags","suggestions","allMails","length","map","element","objectSpread","id","concat","text","name","handleDelete","bind","assertThisInitialized","handleAddition","handleDrag","i","splice","tag","toConsumableArray","currPos","newPos","_this$state","react_default","composeAutoComplete_style","ReactTags","placeholder","minQueryLength","autofocus","Icon","Icons","composeMail_style_templateObject","IconButton","IconButtons","composeMail_style_templateObject2","Button","Buttons","_templateObject3","EditorWrapper","_templateObject4","ComposeForm","_templateObject5","Editor","asyncComponent","Promise","all","e","then","uploadCallback","file","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","ComposeMail","editorState","loading","iconLoading","_this2","ComposeAutoCompleteTO","updateData","ComposeAutoCompleteCC","editorOption","style","width","height","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","toolbar","image","_this$props","singleMail","placeholderText","composeMail_style","className","composeAutoComplete_default","input","disableUnderline","fullWidth","composeMail_Editor","assign","size","onClick","notification","variant","intlMessages","changeComposeMail","singleMail_style_templateObject","singleMail_style_templateObject2","List","Lists","singleMail_style_templateObject3","ListItem","ListSubheaders","singleMail_style_templateObject4","ListItems","singleMail_style_templateObject5","ListItemText","ListItemTexts","_templateObject6","Avatar","h3","_templateObject7","_templateObject8","SingleMailHeader","_templateObject9","AddressBox","_templateObject10","MailInfo","_templateObject11","MailOtherAction","_templateObject12","MailBody","_templateObject13","ComposeMails","_templateObject14","SingleMailReply","_templateObject15","SingleMailContents","_templateObject16","SingleMailWrapper","_templateObject17","theme","createMuiTheme","overrides","MuiPopover","paper","minWidth","marginTop","ActionButton","anchorEl","toggleState","event","stopPropagation","findDOMNode","button","MuiThemeProvider_default","draftButton","popover","onClose","anchorOrigin","horizontal","vertical","transformOrigin","action","singleMail_style_Icon","color","primary","dividers","ref","node","singleMail_style_IconButton","mail_singleMail","_ref","mails","currentUser","replyMail","changeReplyMail","selectMail","toggleListVisible","selectedMail","toggleAddress","selectedBucket","activeAddress","bulkActions","index","findIndex","mail","signature","splitLet","match","join","split","toggleMailAddress","toggleIcon","paddingTop","bucketColor","getBucketColor","singleMail_style","backgroundColor","img","alt","src","email","marginLeft","timeDifference","date","actionButton_ActionButton","body","singleMail_style_ComposeMail","allMail","mailTags_style_templateObject","ListItemIcon","ListItemIcons","mailTags_style_templateObject2","mailTags_style_templateObject3","mailTags_style_templateObject4","tagsIcon","Cost","Inventory","Platform","Business Process","Business Waste","Customers","tagColor","mailtags","filterAction","filterAttr","onDrawerClose","Tags","forEach","bucket","gettags","mailTags_style","keys","key","activeClass","iconColor","mailTags_style_ListItem","icon","mailTags_style_ListItemText","renderSingleTag","style_templateObject","DoneIcon","style_templateObject2","style_templateObject3","style_templateObject4","ListSubheader","style_templateObject5","style_templateObject6","style_templateObject7","ListLabel","style_templateObject8","SingleMailActions","style_templateObject9","SelectTagButton","tagOptions","style_ListItem","style_Icon","style_ListItemText","style_List","style_ListLabel","subheader","style_ListSubheader","component","style_IconButton","singleMailActions","actionName","value","payload","checkedMails","defineProperty","singleMailActions_SelectTagButton","HelperText","helper_text_style_templateObject","helper_text","_ref$text","_ref$className","_ref$imgSrc","imgSrc","helper_text_style","ExpansionPanel","mailList_style_templateObject","ExpansionPanels","mailList_style_templateObject2","MailActions","mailList_style_templateObject3","Checkboxes","mailList_style_templateObject4","mailList_style_templateObject5","CheckboxWrapper","mailList_style_templateObject6","MailListInfos","mailList_style_templateObject7","MailListItem","mailList_style_templateObject8","MailListWrapper","mailList_style_templateObject9","WithDirection","mailList_style_templateObject10","MuiExpansionPanelSummary","expanded","borderBottom","margin","&:last-child","expandIcon","display","content","paddingRight","MuiExpansionPanelDetails","root","padding","mailList","updateCheckedMail","hideSearchbar","objectWithoutProperties","mailList_style","isSelected","checked","unreadMail","read","expandClass","checkedItem","onMailClick","mailList_style_ExpansionPanel","onChange","ExpansionPanelSummary_default","mailList_style_Avatar","mailList_style_Icon","subject","filterMails","ExpansionPanelDetails_default","renderSingleMail","mailBucket_style_templateObject","mailBucket_style_templateObject2","mailBucket_style_templateObject3","mailBucket_style_templateObject4","buckets","bucketIcon","Inbox","Sent","Done","Drafts","Bin","Spam","mailbuckets","unread","getUnread","mailBucket_style","mailBucket_style_ListItem","mailBucket_style_ListItemIcon","mailBucket_style_ListItemText","renderSinglebucket","mailComposeBtn_style_templateObject","mailComposeBtn_style_templateObject2","MailComposeBtnWrapper","mailComposeBtn_style_templateObject3","ComposeBtn","mailComposeBtn_style","mailComposeBtn_style_Button","mailComposeBtn_style_Icon","bulkMailActions_style_templateObject","bulkMailActions_style_templateObject2","bulkMailActions_style_templateObject3","Checkboxs","bulkMailActions_style_templateObject4","Popover","Popovers","bulkMailActions_style_templateObject5","bulkMailActions_style_templateObject6","bulkMailActions_style_templateObject7","bulkMailActions_style_templateObject8","bulkMailActions_style_templateObject9","style_templateObject10","BulkMailActionWrapper","style_templateObject11","LeftPart","style_templateObject12","RightPart","style_templateObject13","bulkMailActions_style_ListItem","bulkMailActions_style_Icon","bulkMailActions_style_ListItemText","bulkMailActions_style_List","bulkMailActions_style_ListLabel","bulkMailActions_style_ListSubheader","bulkMailActions_style_IconButton","bulkMailActions","countChecked","count","countCheckMailed","allChecked","bulkMailActions_style","style_Checkbox","allFilterChecked","style_DoneIcon","bulkMailActions_SelectTagButton","createSelector","searchString","newMails","push","filterBucket","indexOf","filterTag","search","toUpperCase","filter","includes","InputSearches","Input","inputSearch_style_templateObject","InputSearch","defaultValue","onKeyPress","preventDefault","onSearch","clearOnSearch","target","alwaysDefaultValue","label","startAdornment","InputLabels","mailBox_style_templateObject","InputAdornment","InputAdornments","mailBox_style_templateObject2","mailBox_style_templateObject3","mailBox_style_templateObject4","mailBox_style_templateObject5","BackbtnWrapper","mailBox_style_templateObject6","Navigations","mailBox_style_templateObject7","MailBox","mailBox_style_templateObject8","MailListBox","mailBox_style_templateObject9","ComposeModalHeader","mailBox_style_templateObject10","ComposeModalActionBtns","mailBox_style_templateObject11","mailBox_style_templateObject12","FormControl","FormControls","mailBox_style_templateObject13","MailActionBar","mailBox_style_templateObject14","SearchIcon","mailBox_style_templateObject15","MailActionDefaultView","mailBox_style_templateObject16","MuiDialog","zIndex","paperWidthSm","maxWidth","connect","Mails","mailSelector","scrollHeight","App","mailActions","composeMail","changeSearchString","BColor","mailBox_style","dialogs","disableBackdropClick","mailBox_style_Icon","mailBox_style_IconButton","mailBox_style_ComposeMail","customScrollBar","mailBuckets","mailTags","mailBox_style_FormControl","mailBox_style_InputSearch","position","mailComposeBtn_ComposeBtn","bucketStyle","boxShadow","marginRight","mobileSearchView","openDrawer","toggleOpenDrawer","toggleSearch","labelName","drawerProps","overlayColor","drawerStyle","composeMail_ComposeMail","drawer_default","left","Mail","view","MailView","DesktopView","TabView"],"mappings":"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","file":"static/js/18.491f6c68.chunk.js","sourcesContent":["import Checkbox from '@material-ui/core/Checkbox';\n\nexport default Checkbox;\n","import Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default Dialog;\nexport { DialogActions, DialogContent, DialogTitle, DialogContentText };\n","import React, { Component } from 'react';\nimport ReactPlaceholder from 'react-placeholder';\nimport 'react-placeholder/lib/reactPlaceholder.css';\n\nclass AsyncComponent extends Component {\n  state = { Component: undefined };\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  async componentDidMount() {\n    this.mounted = true;\n    const componentArguement = this.props.componentArguement;\n    let Component;\n    switch (componentArguement) {\n      case 'googleChart':\n        const { Chart: googleChart } = await this.props.load;\n        Component = googleChart;\n        break;\n      default:\n        const { default: newComponent } = await this.props.load;\n        Component = newComponent;\n    }\n    if (this.mounted) {\n      this.setState({\n        Component: <Component {...this.props.componentProps} />\n      });\n    }\n  }\n\n  render() {\n    const Component = this.state.Component || <div />;\n    return (\n      <ReactPlaceholder type=\"text\" rows={7} ready={Component !== undefined}>\n        {Component}\n      </ReactPlaceholder>\n    );\n  }\n}\n\nexport default AsyncComponent;\n","import Divider from '@material-ui/core/Divider';\n\nexport default Divider;\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { transition, borderRadius } from '../../../settings/style-util';\n\nconst AdressTag = styled.div``;\n\nconst ComposeAutoCompleteStyleWrapper = styled.div`\n  .ReactTags__ {\n    &tags {\n      min-height: 44px;\n      width: 100%;\n      position: relative;\n      margin-bottom: 0px;\n      display: flex;\n      align-items: center;\n      padding: 0 20px;\n      border-bottom: 1px solid ${palette('grey', 3)};\n      ${borderRadius('0')};\n    }\n\n    &selected {\n      width: 100%;\n      padding: 4px 0;\n      display: flex;\n      flex-wrap: wrap;\n    }\n\n    &tag {\n      font-size: 13px;\n      font-weight: 400;\n      line-height: 1;\n      color: ${palette('grey', 8)};\n      display: block;\n      align-items: center;\n      padding: 0 27px 0 10px;\n      margin: 4px 6px 5px 0px;\n      margin-right: ${props => (props['data-rtl'] === 'rtl' ? '0' : '5px')};\n      margin-left: ${props => (props['data-rtl'] === 'rtl' ? '5px' : '0')};\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n      height: 26px;\n      line-height: 24px;\n      word-break: break-word;\n      background-color: ${palette('grey', 2)};\n      border: 1px solid #ffffff;\n      max-width: 300px;\n      white-space: nowrap;\n      position: relative;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      ${borderRadius('14px')};\n    }\n\n    &remove {\n      background: none;\n      background-color: transparent;\n      border: 0;\n      outline: 0;\n      color: ${palette('grey', 6)};\n      padding: 0;\n      margin-right: ${props => (props['data-rtl'] === 'rtl' ? '8px' : '0')};\n      margin-left: ${props => (props['data-rtl'] === 'rtl' ? '0' : '8px')};\n      line-height: 22px;\n      font-size: 18px;\n      font-weight: 400;\n      cursor: pointer;\n      position: absolute;\n      top: 1px;\n      right: 9px;\n\n      &:hover {\n        color: ${palette('grey', 9)};\n      }\n    }\n\n    &tagInput {\n      width: 100%;\n      display: inline-flex;\n      flex: 1;\n      align-items: center;\n      min-height: 35px;\n\n      &Field {\n        font-size: 13px;\n        font-weight: 400;\n        color: ${palette('grey', 6)};\n        line-height: inherit;\n        text-align: ${props =>\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n        height: 100%;\n        width: 100%;\n        min-width: 100px;\n        padding: 0;\n        border: 0;\n        outline: 0 !important;\n        overflow: hidden;\n        background-color: transparent;\n\n        &::-webkit-input-placeholder {\n          text-align: ${props =>\n            props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n          color: ${palette('grey', 6)};\n        }\n\n        &:-moz-placeholder {\n          text-align: ${props =>\n            props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n          color: ${palette('grey', 6)};\n        }\n\n        &::-moz-placeholder {\n          text-align: ${props =>\n            props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n          color: ${palette('grey', 6)};\n        }\n        &:-ms-input-placeholder {\n          text-align: ${props =>\n            props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n          color: ${palette('grey', 6)};\n        }\n      }\n    }\n\n    &suggestions {\n      z-index: 999;\n      display: -webkit-flex;\n      display: -ms-flex;\n      display: flex;\n      flex-direction: column;\n      background-color: #fff;\n      margin: 3px 0 0;\n      overflow: hidden;\n      word-break: break-word;\n      border: 0;\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n      position: absolute;\n      right: ${props => (props['data-rtl'] === 'rtl' ? '20px' : 'auto')};\n      left: ${props => (props['data-rtl'] === 'rtl' ? 'auto' : '20px')};\n      top: 100%;\n      ${borderRadius('2px')};\n      box-shadow: ${palette('shadows', 1)};\n\n      ul {\n        list-style: none;\n        padding: 0;\n      }\n\n      li {\n        font-size: 13px;\n        font-weight: 400;\n        color: ${palette('grey', 8)};\n        border-bottom: 0;\n        line-height: 1.5;\n        width: 100%;\n        padding: 12px 20px;\n        margin: 0;\n        cursor: pointer;\n        ${transition()};\n\n        mark {\n          font-weight: 700;\n          color: ${palette('grey', 8)};\n          background-color: transparent;\n        }\n\n        &:last-of-type {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    &activeSuggestion {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport { AdressTag };\nexport default ComposeAutoCompleteStyleWrapper;\n","import React, { Component } from 'react';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport AutoComplete from './composeAutoComplete.style';\n\nfunction createArray(array) {\n\tif (array && array.length > 0) {\n\t\treturn array.map(element => ({\n\t\t\t...element,\n\t\t\tid: `${element.id}`,\n\t\t\ttext: `${element.name}`,\n\t\t}));\n\t}\n\treturn [];\n}\n\nexport default class extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttags: [],\n\t\t\tsuggestions: createArray(props.allMails || []),\n\t\t};\n\t\tthis.handleDelete = this.handleDelete.bind(this);\n\t\tthis.handleAddition = this.handleAddition.bind(this);\n\t\tthis.handleDrag = this.handleDrag.bind(this);\n\t}\n\n\thandleDelete(i) {\n\t\tlet tags = this.state.tags;\n\t\ttags.splice(i, 1);\n\t\tthis.setState({ tags: tags });\n\t}\n\n\thandleAddition(tag) {\n\t\tthis.setState(state => ({ tags: [...state.tags, tag] }));\n\t}\n\n\thandleDrag(tag, currPos, newPos) {\n\t\tlet tags = this.state.tags;\n\t\ttags.splice(currPos, 1);\n\t\ttags.splice(newPos, 0, tag);\n\t\tthis.setState({ tags: tags });\n\t}\n\n\trender() {\n\t\tconst { tags, suggestions } = this.state;\n\t\treturn (\n\t\t\t<AutoComplete>\n\t\t\t\t<ReactTags\n\t\t\t\t\ttags={tags}\n\t\t\t\t\tsuggestions={suggestions}\n\t\t\t\t\thandleDelete={this.handleDelete}\n\t\t\t\t\thandleAddition={this.handleAddition}\n\t\t\t\t\thandleDrag={this.handleDrag}\n\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\tminQueryLength={1}\n\t\t\t\t\tautofocus={this.props.autofocus || false}\n\t\t\t\t/>\n\t\t\t</AutoComplete>\n\t\t);\n\t}\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport Buttons from '../../uielements/button';\nimport Icons from '../../uielements/icon';\nimport IconButtons from '../../uielements/iconbutton';\n\nconst Icon = styled(Icons)`\n  font-size: 20px;\n  color: ${palette('grey', 7)};\n`;\n\nconst IconButton = styled(IconButtons)`\n  width: 30px;\n  height: 30px;\n  padding: 0;\n`;\n\nconst Button = styled(Buttons)`\n  background-color: ${palette('blue', 6)};\n  color: #ffffff;\n\n  &:hover {\n    background-color: ${palette('blue', 7)};\n  }\n\n  > span {\n    span {\n      font-weight: 700;\n    }\n\n    &:last-child {\n      span {\n        background-color: #ffffff;\n      }\n    }\n  }\n`;\n\nconst EditorWrapper = styled.div`\n  position: relative;\n  padding: 5px 20px 0;\n`;\n\nconst ComposeForm = styled.div`\n  padding: 0 0 20px;\n  text-align: left;\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .suBj3cT {\n    height: 44px;\n    margin-top: 10px;\n    display: flex;\n    align-items: center;\n\n    input {\n      font-size: 17px;\n      font-weight: 700;\n      color: ${palette('grey', 8)};\n      padding: 0 20px;\n\n      &::-webkit-input-placeholder {\n        opacity: 1;\n        color: ${palette('grey', 6)};\n      }\n\n      &:-moz-placeholder {\n        opacity: 1;\n        color: ${palette('grey', 6)};\n      }\n\n      &::-moz-placeholder {\n        opacity: 1;\n        color: ${palette('grey', 6)};\n      }\n      &:-ms-input-placeholder {\n        opacity: 1;\n        color: ${palette('grey', 6)};\n      }\n    }\n  }\n\n  .mailComposeEditor {\n    .quill {\n      width: 100%;\n      display: flex;\n      flex-direction: column;\n\n      .ql-container {\n        border: 0;\n        min-height: 220px;\n        margin: 10px 0;\n\n        .ql-editor {\n          min-height: 50vh;\n          max-height: 55vh;\n          padding: 5px 0 10px;\n\n          p,\n          h1,\n          h2,\n          h3,\n          h4,\n          h5,\n          h6,\n          span {\n            color: ${palette('grey', 9)};\n          }\n        }\n      }\n\n      .ql-toolbar {\n        display: inline-flex;\n        flex-wrap: wrap;\n        order: 1;\n        border: 0;\n        width: calc(100% - 70px);\n        padding: 4px 8px;\n        margin-left: auto;\n\n        @media only screen and (max-width: 770px) {\n          width: 100%;\n          padding: 4px 0 15px;\n        }\n\n        .ql-picker-options {\n          position: fixed;\n          z-index: 100000;\n          top: auto;\n          width: auto;\n          left: auto;\n          right: auto;\n          min-width: 100px;\n        }\n      }\n    }\n  }\n\n  .sEnd-bTn {\n    position: absolute;\n    bottom: 0;\n    left: 20px;\n\n    @media only screen and (max-width: 770px) {\n      position: relative;\n      bottom: auto;\n      left: auto;\n    }\n  }\n\n  .dEl3Te-bTn {\n    position: absolute;\n    bottom: 0;\n    right: 20px;\n\n    @media only screen and (max-width: 770px) {\n      position: relative;\n      bottom: auto;\n      right: auto;\n      display: inline-flex;\n      float: right;\n    }\n\n    @media only screen and (max-width: 780px) {\n      right: 0;\n    }\n  }\n`;\n\nexport { EditorWrapper, Button, IconButton, Icon };\nexport default ComposeForm;\n","import React, { Component } from 'react';\nimport Async from '../../../helpers/asyncComponent';\nimport Input from '../../uielements/input';\nimport ComposeAutoComplete from '../composeAutoComplete';\nimport notification from '../../notification';\nimport IntlMessages from '../../utility/intlMessages';\nimport ComposeForm, {\n  EditorWrapper,\n  Button,\n  IconButton,\n  Icon,\n} from './composeMail.style';\n\nconst Editor = props => (\n  <Async\n    load={import(/* webpackChunkName: \"compose-mAIL--editor\" */ '../../uielements/editor')}\n    componentProps={props}\n  />\n);\n\nfunction uploadCallback(file) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('POST', 'https://api.imgur.com/3/image');\n    xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n    const data = new FormData();\n    data.append('image', file);\n    xhr.send(data);\n    xhr.addEventListener('load', () => {\n      const response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener('error', () => {\n      const error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\nexport default class ComposeMail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: null,\n      loading: false,\n      iconLoading: false,\n    };\n  }\n  render() {\n    const onEditorStateChange = editorState => {\n      this.setState({ editorState });\n    };\n    const ComposeAutoCompleteTO = {\n      allMails: this.props.allMails,\n      updateData: () => {},\n      placeholder: 'To',\n      autofocus: true,\n    };\n    const ComposeAutoCompleteCC = {\n      allMails: this.props.allMails,\n      updateData: () => {},\n      placeholder: 'CC',\n    };\n    const editorOption = {\n      style: { width: '90%', height: '70%' },\n      editorState: this.state.editorState,\n      toolbarClassName: 'home-toolbar',\n      wrapperClassName: 'home-wrapper',\n      editorClassName: 'home-editor',\n      onEditorStateChange: onEditorStateChange,\n      uploadCallback: uploadCallback,\n      toolbar: { image: { uploadCallback: uploadCallback } },\n    };\n\n    const { singleMail, placeholder } = this.props;\n    const placeholderText = placeholder ? placeholder : 'Say something';\n\n    return (\n      <ComposeForm className={this.props.className}>\n        {!singleMail ? <ComposeAutoComplete {...ComposeAutoCompleteTO} /> : ''}\n        {!singleMail ? <ComposeAutoComplete {...ComposeAutoCompleteCC} /> : ''}\n        {!singleMail ? (\n          <Input\n            disableUnderline\n            fullWidth\n            placeholder=\"Subject\"\n            className=\"suBj3cT\"\n          />\n        ) : (\n          ''\n        )}\n        <EditorWrapper className=\"eDit0R-wRapP3r\">\n          <Editor\n            placeholder={placeholderText}\n            className=\"mailComposeEditor\"\n            {...editorOption}\n          />\n          <Button\n            className=\"sEnd-bTn\"\n            size=\"small\"\n            onClick={e => notification('success', `Mail has been sent`, '')}\n            variant=\"raised\"\n          >\n            <IntlMessages id=\"email.send\" />\n          </Button>\n\n          <IconButton\n            className=\"dEl3Te-bTn\"\n            onClick={() => {\n              this.props.changeComposeMail(false);\n            }}\n          >\n            <Icon>delete</Icon>\n          </IconButton>\n        </EditorWrapper>\n      </ComposeForm>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport Icons from '../../uielements/icon';\nimport IconButtons from '../../uielements/iconbutton';\nimport ComposeMails from '../composeMail';\nimport Lists, {\n  ListSubheader as ListSubheaders,\n  ListItem as ListItems,\n  ListItemText as ListItemTexts,\n} from '../../uielements/lists';\n\nconst Icon = styled(Icons)`\n  font-size: 20px;\n  color: ${palette('grey', 7)};\n`;\n\nconst IconButton = styled(IconButtons)`\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  margin-right: 5px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst List = styled(Lists)`\n  max-width: 360px;\n  width: 100%;\n\n  &.dropdownList {\n    padding-bottom: 0;\n  }\n\n  &.mAil-dRopd0Wn {\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n`;\n\nconst ListSubheader = styled(ListSubheaders)`\n  height: 35px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  font-size: 12px;\n  color: ${palette('grey', 7)};\n  font-weight: 500;\n  padding-left: 22px;\n`;\n\nconst ListItem = styled(ListItems)`\n  padding: 8px 20px;\n\n  ${Icon} {\n    font-size: 19px;\n  }\n`;\n\nconst ListItemText = styled(ListItemTexts)`\n  h3 {\n    color: ${palette('grey', 6)};\n    font-size: 13px;\n    text-transform: capitalize;\n    font-weight: 500;\n  }\n`;\n\nconst ListLabel = styled.h3`\n  font-size: 15px;\n  font-weight: 500;\n  color: ${palette('grey', 8)};\n  padding: 6px 20px 14px;\n  margin: 0;\n`;\n\nconst Avatar = styled.div`\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  border-radius: 50%;\n  margin-right: 20px;\n  flex-shrink: 0;\n\n  span {\n    color: rgba(255, 255, 255, 0.9);\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1;\n    margin: 0;\n  }\n`;\n\nconst SingleMailHeader = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: flex-start;\n`;\n\nconst AddressBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n\n  @media only screen and (max-width: 960px) {\n    flex-direction: column;\n  }\n\n  h3 {\n    font-size: 13px;\n    color: ${palette('grey', 8)};\n    font-weight: 700;\n    margin: 0 5px 5px 0;\n    line-height: 1.2;\n\n    span {\n      display: none;\n    }\n  }\n\n  p {\n    font-size: 13px;\n    color: ${palette('grey', 7)};\n    font-weight: 400;\n    margin: 0;\n    line-height: 1.2;\n\n    @media only screen and (max-width: 960px) {\n      cursor: pointer;\n    }\n\n    &.sH0w-m0b {\n      display: none;\n    }\n\n    @media only screen and (max-width: 960px) {\n      &.h1De-m0b {\n        display: none;\n      }\n\n      &.sH0w-m0b {\n        display: inline-block;\n      }\n    }\n\n    span {\n      margin: 0;\n    }\n\n    .selfEmail {\n      display: none;\n    }\n  }\n\n  &.v1siBl3 {\n    flex-direction: column;\n\n    h3 {\n      span {\n        display: inline-flex;\n\n        @media only screen and (max-width: 960px) {\n          width: 100%;\n          font-weight: 400;\n          margin-top: 5px;\n          color: ${palette('grey', 7)};\n        }\n      }\n    }\n\n    p {\n      text-transform: capitalize;\n\n      .selfName {\n        display: none;\n      }\n\n      .selfEmail {\n        display: inline-flex;\n        text-transform: none;\n        font-size: 13px;\n\n        @media only screen and (max-width: 960px) {\n          padding-left: 15px;\n          color: ${palette('grey', 8)};\n          cursor: pointer;\n\n          .toMail {\n            margin-left: 5px;\n            color: ${palette('blue', 5)};\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst MailInfo = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  padding-top: 4px;\n\n  ${IconButton} {\n    width: 18px;\n    height: 18px;\n    padding: 0;\n    margin-left: 5px;\n\n    @media only screen and (max-width: 960px) {\n      display: none;\n    }\n\n    ${Icon} {\n      font-size: 16px;\n    }\n  }\n`;\n\nconst MailOtherAction = styled.div`\n  display: inline-flex;\n  align-items: center;\n  flex-shrink: 0;\n  margin-right: -10px;\n\n  @media only screen and (max-width: 960px) {\n    position: absolute;\n    right: 15px;\n  }\n\n  .mailDate {\n    font-size: 14px;\n    color: ${palette('grey', 6)};\n    margin: 0;\n    margin-right: 5px;\n\n    @media only screen and (max-width: 960px) {\n      font-size: 13px;\n    }\n  }\n`;\n\nconst MailBody = styled.div`\n  padding: 0 60px;\n\n  @media only screen and (max-width: 959px) {\n    padding: 0 60px !important;\n    margin-top: 20px;\n  }\n\n  @media only screen and (max-width: 700px) {\n    padding: 0 !important;\n    margin-top: 25px;\n  }\n\n  p {\n    font-size: 13px;\n    color: ${palette('grey', 8)};\n    margin: 0 0 26px;\n    line-height: 1.6;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nconst ComposeMail = styled(ComposeMails)`\n  padding: 0 55px 20px 85px;\n\n  @media only screen and (max-width: 800px) {\n    padding: 0 15px 20px;\n  }\n`;\n\nconst SingleMailReply = styled.div`\n  border-top: 1px solid ${palette('grey', 3)};\n\n  .r3plY-wRapP3r {\n    display: flex;\n    align-items: center;\n    cursor: text;\n    background-color: ${palette('grey', 1)};\n    padding: 14px 24px;\n\n    @media only screen and (max-width: 800px) {\n      padding: 14px 15px;\n    }\n\n    .imgWrapper {\n      width: 40px;\n      height: 40px;\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      overflow: hidden;\n      border-radius: 50%;\n      margin-right: 20px;\n      cursor: default;\n\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n\n    .replyBtn {\n      font-size: 14px;\n      font-weight: 400;\n      color: ${palette('grey', 7)};\n      margin: 0;\n      cursor: pointer;\n\n      &:hover {\n        font-weight: 500;\n        color: ${palette('indigo', 5)};\n      }\n    }\n\n    ${IconButton} {\n      margin-left: auto;\n      margin-right: -10px;\n      width: 35px;\n      height: 35px;\n      padding: 0;\n\n      ${Icon} {\n        color: ${palette('grey', 7)};\n      }\n    }\n  }\n\n  .dRaf7-wRapP3r {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n\n    .r3plY-wRapP3r {\n      background-color: #ffffff;\n      padding-bottom: 0;\n\n      .draftLabel {\n        font-size: 13px;\n        font-weight: 400;\n        color: ${palette('grey', 7)};\n        margin: 0;\n        cursor: pointer;\n        display: flex;\n        align-items: flex-end;\n\n        span {\n          font-weight: 700;\n          color: ${palette('red', 8)};\n          margin-right: 5px;\n        }\n\n        ${Icon} {\n          font-size: 14px;\n          color: ${palette('grey', 7)};\n          margin-left: 5px;\n          margin-right: 0;\n        }\n      }\n    }\n\n    .eDit0R-wRapP3r {\n      padding: 0;\n\n      .mailComposeEditor {\n        .quill {\n          .ql-container {\n            min-height: auto;\n\n            .ql-editor {\n              min-height: auto;\n            }\n          }\n\n          @media only screen and (min-width: 701px) {\n            .ql-toolbar {\n              width: calc(100% - 70px);\n              padding: 4px 8px;\n            }\n          }\n        }\n      }\n\n      .sEnd-bTn {\n        left: 0;\n\n        @media only screen and (max-width: 700px) {\n          left: auto;\n        }\n\n        @media only screen and (min-width: 701px) {\n          position: absolute;\n          bottom: 0;\n        }\n      }\n\n      .dEl3Te-bTn {\n        right: -38px;\n\n        @media only screen and (max-width: 700px) {\n          right: auto;\n        }\n\n        @media only screen and (min-width: 701px) {\n          position: absolute;\n          bottom: 0;\n        }\n\n        @media only screen and (max-width: 800px) {\n          right: -7px;\n        }\n      }\n    }\n  }\n`;\n\nconst SingleMailContents = styled.div`\n  padding: 16px 24px 24px;\n\n  @media only screen and (max-width: 960px) {\n    padding: 16px 15px 24px;\n  }\n`;\n\nconst SingleMailWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  height: 100%;\n  width: 100%;\n`;\n\nexport {\n  SingleMailContents,\n  SingleMailHeader,\n  MailInfo,\n  MailBody,\n  SingleMailReply,\n  ComposeMail,\n  MailOtherAction,\n  AddressBox,\n  Avatar,\n  Icon,\n  IconButton,\n  List,\n  ListItem,\n  ListSubheader,\n  ListItemText,\n  ListLabel,\n};\nexport default SingleMailWrapper;\n","import React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport notification from '../../notification';\nimport Popover from '../../uielements/popover';\nimport Divider from '../../uielements/dividers';\nimport {\n  Icon,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n} from './singleMail.style';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiPopover: {\n      paper: {\n        minWidth: 250,\n        marginTop: 10,\n      },\n    },\n  },\n});\n\nexport default class ActionButton extends Component {\n  state = {\n    open: false,\n    anchorEl: null,\n  };\n  toggleState = event => {\n    if (event && event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.setState({\n      open: !this.state.open,\n      anchorEl: findDOMNode(this.button),\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <MuiThemeProvider theme={theme}>\n          {this.props.draftButton ? (\n            <Popover\n              open={this.state.open}\n              anchorEl={this.state.anchorEl}\n              onClose={this.toggleState}\n              anchorOrigin={{\n                horizontal: 'left',\n                vertical: 'bottom',\n              }}\n              transformOrigin={{\n                horizontal: 'left',\n                vertical: 'top',\n              }}\n            >\n              <List className=\"mAil-dRopd0Wn\">\n                <List>\n                  <ListItem\n                    button\n                    onClick={event => {\n                      event.stopPropagation();\n                      this.props.action('report');\n                      notification('', `1 reported as spam`, '', true);\n                    }}\n                  >\n                    <Icon style={{ color: '#776f6c' }}>reply</Icon>\n                    <ListItemText primary=\"Reply\" />\n                  </ListItem>\n\n                  <ListItem\n                    button\n                    onClick={event => {\n                      event.stopPropagation();\n                      this.props.action('report');\n                      notification('', `1 reported as spam`, '', true);\n                    }}\n                  >\n                    <Icon style={{ color: '#776f6c' }}>forward</Icon>\n                    <ListItemText primary=\"Forward\" />\n                  </ListItem>\n                </List>\n\n                <Divider />\n\n                <List>\n                  <ListItem\n                    button\n                    onClick={event => {\n                      event.stopPropagation();\n                      this.props.action('report');\n                      notification('', `1 reported as spam`, '', true);\n                    }}\n                  >\n                    <Icon style={{ color: '#776f6c' }}>print</Icon>\n                    <ListItemText primary=\"Print\" />\n                  </ListItem>\n\n                  <ListItem\n                    button\n                    onClick={event => {\n                      event.stopPropagation();\n                      this.props.action('report');\n                      notification('', `1 reported as spam`, '', true);\n                    }}\n                  >\n                    <Icon style={{ color: '#776f6c' }}>code</Icon>\n                    <ListItemText primary=\"Show Orginal\" />\n                  </ListItem>\n                </List>\n              </List>\n            </Popover>\n          ) : (\n            <Popover\n              open={this.state.open}\n              anchorEl={this.state.anchorEl}\n              onClose={this.toggleState}\n              anchorOrigin={{\n                horizontal: 'right',\n                vertical: 'bottom',\n              }}\n              transformOrigin={{\n                horizontal: 'right',\n                vertical: 'top',\n              }}\n            >\n              <List className=\"mAil-dRopd0Wn\">\n                <List>\n                  <ListItem\n                    button\n                    onClick={event => {\n                      event.stopPropagation();\n                      this.props.action('report');\n                      notification('', `1 reported as spam`, '', true);\n                    }}\n                  >\n                    <Icon style={{ color: '#776f6c' }}>reply</Icon>\n                    <ListItemText primary=\"Reply\" />\n                  </ListItem>\n\n                  <ListItem\n                    button\n                    onClick={event => {\n                      event.stopPropagation();\n                      this.props.action('report');\n                      notification('', `1 reported as spam`, '', true);\n                    }}\n                  >\n                    <Icon style={{ color: '#776f6c' }}>forward</Icon>\n                    <ListItemText primary=\"Forward\" />\n                  </ListItem>\n                </List>\n\n                <Divider />\n\n                <List>\n                  <ListItem\n                    button\n                    onClick={event => {\n                      event.stopPropagation();\n                      this.props.action('report');\n                      notification('', `1 reported as spam`, '', true);\n                    }}\n                  >\n                    <Icon style={{ color: '#776f6c' }}>print</Icon>\n                    <ListItemText primary=\"Print\" />\n                  </ListItem>\n\n                  <ListItem\n                    button\n                    onClick={event => {\n                      event.stopPropagation();\n                      this.props.action('report');\n                      notification('', `1 reported as spam`, '', true);\n                    }}\n                  >\n                    <Icon style={{ color: '#776f6c' }}>code</Icon>\n                    <ListItemText primary=\"Show Orginal\" />\n                  </ListItem>\n                </List>\n              </List>\n            </Popover>\n          )}\n        </MuiThemeProvider>\n\n        {this.props.draftButton ? (\n          <p\n            className=\"draftLabel\"\n            onClick={this.toggleState}\n            ref={node => {\n              this.button = node;\n            }}\n          >\n            <span>Draft</span> to me <Icon>arrow_drop_down</Icon>\n          </p>\n        ) : (\n          <IconButton\n            onClick={this.toggleState}\n            ref={node => {\n              this.button = node;\n            }}\n          >\n            <Icon>more_vert</Icon>\n          </IconButton>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { timeDifference } from '../../../helpers/utility';\nimport { getBucketColor } from '../../../containers/Mail/desktopView';\nimport ActionButton from './actionButton';\n\nimport SingleMailWrapper, {\n  SingleMailContents,\n  SingleMailHeader,\n  MailInfo,\n  MailBody,\n  SingleMailReply,\n  MailOtherAction,\n  AddressBox,\n  ComposeMail,\n  Avatar,\n  Icon,\n  IconButton,\n} from './singleMail.style';\n\nexport default ({\n  mails,\n  currentUser,\n  replyMail,\n  changeReplyMail,\n  selectMail,\n  toggleListVisible,\n  changeComposeMail,\n  selectedMail,\n  selectedBucket,\n  toggleAddress,\n  activeAddress,\n  bulkActions,\n}) => {\n  if (!selectedMail || selectedMail === -1) {\n    return <div />;\n  }\n  const index = mails.findIndex(mail => mail.id === selectedMail);\n  const mail = mails[index];\n  const recpName = mail.name;\n  const signature = {\n    splitLet: recpName\n      .match(/\\b(\\w)/g)\n      .join('')\n      .split('', 2),\n  };\n\n  const toggleMailAddress = activeAddress ? 'v1siBl3' : '';\n  const toggleIcon = activeAddress ? 'expand_more' : 'expand_less';\n  const paddingTop = activeAddress ? '20px' : '0';\n\n  const bucketColor = getBucketColor(mail);\n\n  return (\n    <SingleMailWrapper>\n      <SingleMailContents>\n        <SingleMailHeader>\n          <Avatar style={{ backgroundColor: bucketColor }}>\n            {mail.img ? (\n              <img alt=\"#\" src={mail.img} />\n            ) : (\n              <span>{signature.splitLet}</span>\n            )}\n          </Avatar>\n\n          <MailInfo>\n            <AddressBox className={toggleMailAddress}>\n              <h3>\n                {mail.name}{' '}\n                <span className=\"address\">&lt;{mail.email}&gt;</span>\n              </h3>\n              <p className=\"h1De-m0b\">\n                to <span className=\"selfName\">me</span>\n                <span className=\"selfEmail\">\n                  {currentUser.name} &lt;{currentUser.email}&gt;\n                </span>\n              </p>\n\n              <p\n                className=\"sH0w-m0b\"\n                onClick={toggleAddress}\n                style={{\n                  marginTop: activeAddress ? '15px' : 0,\n                  marginLeft: activeAddress ? '-33px' : 0,\n                }}\n              >\n                to <span className=\"selfName\">me</span>\n                <span className=\"selfEmail\">\n                  {currentUser.name}{' '}\n                  <span className=\"toMail\">{currentUser.email}</span>\n                </span>\n              </p>\n            </AddressBox>\n\n            <IconButton onClick={toggleAddress}>\n              <Icon>{toggleIcon}</Icon>\n            </IconButton>\n          </MailInfo>\n\n          <MailOtherAction>\n            <span className=\"mailDate\">{timeDifference(mail.date)}</span>\n            <ActionButton action={bulkActions} />\n          </MailOtherAction>\n        </SingleMailHeader>\n\n        <MailBody style={{ paddingTop: paddingTop }}>\n          <p>{mail.body}</p>\n        </MailBody>\n      </SingleMailContents>\n\n      <SingleMailReply>\n        {replyMail ? (\n          <div className=\"dRaf7-wRapP3r\">\n            <div className=\"r3plY-wRapP3r\">\n              <div className=\"imgWrapper\">\n                <img src={currentUser.image} alt={currentUser.name} />\n              </div>\n              <ActionButton action={bulkActions} draftButton />\n\n              <IconButton\n                onClick={event => {\n                  changeComposeMail(true);\n                }}\n              >\n                <Icon>exit_to_app</Icon>\n              </IconButton>\n            </div>\n\n            <ComposeMail\n              allMail={mails}\n              placeholder=\" \"\n              changeComposeMail={changeComposeMail}\n              singleMail\n            />\n          </div>\n        ) : (\n          <div\n            className=\"r3plY-wRapP3r\"\n            onClick={event => changeReplyMail(true)}\n          >\n            <div className=\"imgWrapper\">\n              <img src={currentUser.image} alt={currentUser.name} />\n            </div>\n            <span className=\"replyBtn\">Reply</span>\n\n            <IconButton\n              onClick={event => {\n                event.stopPropagation();\n                changeComposeMail(true);\n              }}\n            >\n              <Icon>forward</Icon>\n            </IconButton>\n          </div>\n        )}\n      </SingleMailReply>\n    </SingleMailWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport Lists, {\n  ListItem as ListItems,\n  ListItemIcon as ListItemIcons,\n  ListItemText as ListItemTexts,\n} from '../../uielements/lists';\n\nconst List = styled(Lists)`\n  padding-top: 15px;\n`;\n\nconst ListItemIcon = styled(ListItemIcons)``;\n\nconst ListItemText = styled(ListItemTexts)`\n  h3 {\n    font-size: 14px;\n    color: ${palette('grey', 8)};\n  }\n`;\n\nconst ListItem = styled(ListItems)`\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${palette('grey', 2)};\n  }\n\n  &.active {\n    background-color: ${palette('grey', 3)};\n\n    ${ListItemText} {\n      h3 {\n        font-weight: 500;\n      }\n    }\n  }\n\n  .counter {\n    border-radius: 50%;\n    font-size: 12px;\n    background-color: #fff;\n    width: 25px;\n    height: 25px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 500;\n    color: ${palette('grey', 8)};\n  }\n`;\n\nexport default List;\nexport { ListItem, ListItemIcon, ListItemText };\n","import React from 'react';\nimport Icon from '../../uielements/icon';\nimport List, { ListItem, ListItemIcon, ListItemText } from './mailTags.style';\n\nconst tags = [\n  'Cost',\n  'Inventory',\n  'Platform',\n  'Business Process',\n  'Business Waste',\n  'Customers',\n];\nconst tagsIcon = {\n  Cost: 'people',\n  Inventory: 'send',\n  Platform: 'drafts',\n  \"Business Process\": 'delete',\n  \"Business Waste\": 'done',\n  Customers: 'report',\n};\nconst tagColor = [\n  '#405dfe',\n  '#90a0f0',\n  '#03d16d',\n  '#eb7345',\n  '#2bc6da',\n  '#776f6c',\n];\n\nfunction gettags(mails, filterAttr) {\n  const tags = {};\n  mails.forEach(mail => {\n    if (mail.tags && mail.bucket === filterAttr.bucket) {\n      mail.tags.split(' ').forEach(tag => (tags[tag] = 1));\n    }\n  });\n  return tags;\n}\n\nexport default function mailtags(\n  mails,\n  filterAction,\n  filterAttr,\n  onDrawerClose\n) {\n  const Tags = gettags(mails, filterAttr);\n  const renderSingleTag = (tag, key) => {\n    const onClick = () => {\n      filterAction({ tag });\n      if (onDrawerClose) {\n        onDrawerClose();\n      }\n    };\n    const selectedTag = tag === filterAttr.tag;\n    const activeClass = selectedTag ? 'active' : '';\n    const iconColor = tagColor[tags.findIndex(tags => tags === tag)];\n    return (\n      <ListItem\n        key={`tag${key}`}\n        onClick={onClick}\n        className={`mailTag ${activeClass}`}\n      >\n        <ListItemIcon>\n          <Icon style={{ color: iconColor }}>{tagsIcon[tag]}</Icon>\n        </ListItemIcon>\n        <ListItemText primary={tag} />\n      </ListItem>\n    );\n  };\n  return (\n    <List>\n      {Object.keys(Tags).map((tag, index) => renderSingleTag(tag, index))}\n    </List>\n  );\n}\nexport { tags, tagColor, tagsIcon };\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport Icons from '../../uielements/icon';\nimport IconButtons from '../../uielements/iconbutton';\nimport Lists, {\n  ListSubheader as ListSubheaders,\n  ListItem as ListItems,\n  ListItemText as ListItemTexts,\n} from '../../uielements/lists';\n\nconst Icon = styled(Icons)`\n  font-size: 20px;\n  color: ${palette('grey', 7)};\n`;\n\nconst DoneIcon = styled(Icons)`\n  font-size: 22px;\n  font-weight: 700;\n  color: ${palette('grey', 7)};\n`;\n\nconst IconButton = styled(IconButtons)`\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  margin-right: 5px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst List = styled(Lists)`\n  max-width: 360px;\n  width: 100%;\n\n  &.dropdownList {\n    padding-bottom: 0;\n  }\n`;\n\nconst ListSubheader = styled(ListSubheaders)`\n  height: 35px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  font-size: 12px;\n  color: ${palette('grey', 7)};\n  font-weight: 500;\n  padding-left: 22px;\n`;\n\nconst ListItem = styled(ListItems)`\n  padding: 8px 20px;\n\n  ${Icon} {\n    font-size: 19px;\n  }\n`;\n\nconst ListItemText = styled(ListItemTexts)`\n  h3 {\n    color: ${palette('grey', 6)};\n    font-size: 13px;\n    text-transform: capitalize;\n    font-weight: 500;\n  }\n`;\n\nconst ListLabel = styled.h3`\n  font-size: 15px;\n  font-weight: 500;\n  color: ${palette('grey', 8)};\n  padding: 6px 20px 14px;\n  margin: 0;\n`;\n\nconst SingleMailActions = styled.div`\n  margin-right: -10px;\n  display: none;\n`;\n\nexport {\n  Icon,\n  DoneIcon,\n  IconButton,\n  List,\n  ListItem,\n  ListSubheader,\n  ListItemText,\n  ListLabel,\n};\nexport default SingleMailActions;\n","import React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport Popover from '../../uielements/popover';\nimport notification from '../../notification';\nimport { tags, tagColor, tagsIcon } from '../mailTags';\nimport Divider from '../../uielements/dividers';\nimport SingleMailActions, {\n  Icon,\n  DoneIcon,\n  IconButton,\n  List,\n  ListItem,\n  ListSubheader,\n  ListItemText,\n  ListLabel,\n} from './style';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiPopover: {\n      paper: {\n        minWidth: 250,\n        marginTop: 10,\n      },\n    },\n  },\n});\n\nclass SelectTagButton extends Component {\n  state = {\n    open: false,\n    anchorEl: null,\n  };\n  toggleState = event => {\n    if (event && event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.setState({\n      open: !this.state.open,\n      anchorEl: findDOMNode(this.button),\n    });\n  };\n  render() {\n    const tagOptions = tags.map(tag => (\n      <ListItem\n        button\n        onClick={event => {\n          event.stopPropagation();\n          this.setState({ open: false });\n          this.props.action('tag', tag);\n          notification('', `items moved in ${tag}`, '', true);\n        }}\n        key={tag}\n      >\n        <Icon style={{ color: tagColor[tags.findIndex(tags => tags === tag)] }}>\n          {tagsIcon[tag]}\n        </Icon>\n        <ListItemText primary={tag} />\n      </ListItem>\n    ));\n    return (\n      <div>\n        <MuiThemeProvider theme={theme}>\n          <Popover\n            open={this.state.open}\n            anchorEl={this.state.anchorEl}\n            onClose={this.toggleState}\n            anchorOrigin={{\n              horizontal: 'right',\n              vertical: 'bottom',\n            }}\n            transformOrigin={{\n              horizontal: 'right',\n              vertical: 'top',\n            }}\n          >\n            <List className=\"dropdownList\">\n              <ListLabel>Move selected to...</ListLabel>\n              <Divider />\n\n              <List>\n                <ListItem\n                  button\n                  onClick={event => {\n                    event.stopPropagation();\n                    this.props.action('report');\n                    notification('', `1 reported as spam`, '', true);\n                  }}\n                >\n                  <Icon style={{ color: '#776f6c' }}>report</Icon>\n                  <ListItemText primary=\"spam\" />\n                </ListItem>\n              </List>\n\n              <Divider />\n\n              <List\n                subheader={\n                  <ListSubheader component=\"div\">\n                    Nested List Items\n                  </ListSubheader>\n                }\n              >\n                {tagOptions}\n              </List>\n            </List>\n          </Popover>\n        </MuiThemeProvider>\n        <IconButton\n          onClick={this.toggleState}\n          ref={node => {\n            this.button = node;\n          }}\n        >\n          <Icon>more_vert</Icon>\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default ({ mail, bulkActions }) => {\n  const action = (actionName, value) => {\n    const payload = {\n      checkedMails: {\n        [mail.id]: true,\n      },\n      action: actionName,\n      value,\n    };\n    bulkActions(payload);\n  };\n  return (\n    <SingleMailActions className=\"singleMailActions\">\n      <IconButton\n        onClick={event => {\n          event.stopPropagation();\n          action('delete');\n          notification('', `mail deleted`, '', true);\n        }}\n      >\n        <Icon>delete</Icon>\n      </IconButton>\n\n      <IconButton\n        onClick={event => {\n          event.stopPropagation();\n          action('done');\n          notification('', `marked as done`, '', true);\n        }}\n      >\n        <DoneIcon>done</DoneIcon>\n      </IconButton>\n\n      <SelectTagButton action={action} />\n    </SingleMailActions>\n  );\n};\n","import styled from \"styled-components\";\nimport { palette } from \"styled-theme\";\n\nconst HelperText = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n\n  img {\n    width: 150px;\n    height: auto;\n    margin-bottom: 30px;\n  }\n\n  h3 {\n    font-size: 18px;\n    font-weight: 500;\n    color: ${palette(\"grey\", 6)};\n    text-align: center;\n    margin: 0;\n  }\n`;\n\nexport default HelperText;\n","import React from \"react\";\nimport HelperText from \"./style\";\n\nexport default ({ text = \"\", className = \"helperText\", imgSrc = \"\" }) => (\n  <HelperText className={className}>\n    {imgSrc !== \"\" ? <img alt=\"#\" src={imgSrc} /> : \"\"}\n    <h3>{text}</h3>\n  </HelperText>\n);\n","import ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n\nexport default ExpansionPanel;\nexport { ExpansionPanelSummary, ExpansionPanelDetails, ExpansionPanelActions };\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport WithDirection from '../../../settings/withDirection';\nimport Checkboxes from '../../uielements/checkbox';\nimport Icons from '../../uielements/icon';\nimport MailActions from '../singleMailActions';\nimport ExpansionPanels from '../../uielements/expansionPanel';\n\nconst Icon = styled(Icons)``;\nconst ExpansionPanel = styled(ExpansionPanels)``;\n\nconst MailAction = styled(MailActions)`\n  display: none;\n`;\nconst Checkbox = styled(Checkboxes)`\n  width: 30px;\n  height: 30px;\n\n  @media only screen and (max-width: 960px) {\n    width: 38px;\n    height: 38px;\n  }\n`;\n\nconst Avatar = styled.div`\n  width: 30px;\n  height: 30px;\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  border-radius: 50%;\n  z-index: 1;\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  @media only screen and (max-width: 960px) {\n    width: 38px;\n    height: 38px;\n  }\n\n  ${Icon} {\n    display: none;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  .sPl1t-l3t {\n    font-size: 12px;\n    color: #ffffff;\n    line-height: 1;\n    font-weight: 700;\n    text-transform: uppercase;\n    margin: 0;\n  }\n`;\n\nconst CheckboxWrapper = styled.div`\n  display: inline-flex;\n  flex-shrink: 0;\n  position: relative;\n  margin-right: 20px;\n\n  &:hover {\n    ${Avatar} {\n      opacity: 0;\n      visibility: hidden;\n    }\n\n    ${Checkbox} {\n      z-index: 2;\n    }\n  }\n\n  @media only screen and (max-width: 960px) {\n    ${Avatar} {\n      z-index: 1;\n    }\n\n    ${Checkbox} {\n      opacity: 0;\n      z-index: 2;\n    }\n\n    &:hover {\n      ${Avatar} {\n        opacity: 1;\n        visibility: visible;\n      }\n    }\n  }\n`;\n\nconst MailListInfos = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  overflow: hidden;\n\n  @media only screen and (max-width: 960px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .name {\n    font-size: 13px;\n    font-weight: 400;\n    flex-shrink: 0;\n    color: ${palette('grey', 9)};\n    margin: 0;\n    padding-right: 10px;\n    width: 175px;\n    line-height: 1.2;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n\n    @media only screen and (max-width: 960px) {\n      margin-bottom: 4px;\n      display: inline-flex;\n      order: 1;\n      width: 100%;\n    }\n  }\n\n  .subDesc {\n    padding-right: 15px;\n    display: flex;\n    overflow: hidden;\n\n    .subject {\n      font-size: 13px;\n      color: ${palette('grey', 9)};\n      margin: 0;\n      flex-shrink: 0;\n      line-height: 1.2;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n\n      &:after {\n        content: '—';\n        color: ${palette('grey', 6)};\n        font-weight: 400;\n        margin: 0 5px;\n      }\n\n      @media only screen and (max-width: 960px) {\n        margin-bottom: 5px;\n        font-size: 15px;\n        width: 100%;\n\n        &::after {\n          content: '';\n        }\n      }\n    }\n\n    .description {\n      font-size: 13px;\n      color: ${palette('grey', 6)};\n      margin: 0;\n      line-height: 1.2;\n      padding-right: 0;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n\n      @media only screen and (max-width: 960px) {\n        order: 2;\n        width: 100%;\n      }\n    }\n  }\n\n  .mailDate {\n    font-size: 12px;\n    color: ${palette('grey', 8)};\n    font-weight: 500;\n    margin: 0;\n    line-height: 1.2;\n    padding-right: 0;\n    flex-shrink: 0;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst MailListItem = styled.div`\n  display: flex;\n  width: 100%;\n  flex-shrink: 0;\n  padding: 10px 0;\n  align-items: center;\n  position: relative;\n\n  &:last-child {\n    padding-right: 0;\n  }\n\n  &:hover {\n    .singleMailActions {\n      display: flex;\n    }\n\n    .mailDate {\n      display: none;\n    }\n  }\n\n  @media only screen and (max-width: 960px) {\n    padding: 13px 0;\n    align-items: flex-start;\n\n    .singleMailActions,\n    .mailDate {\n      display: none;\n    }\n\n    &:hover {\n      .singleMailActions {\n        display: none;\n      }\n    }\n  }\n\n  &.unread {\n    ${MailListInfos} {\n      .name,\n      .subject {\n        font-weight: 700;\n      }\n\n      @media only screen and (max-width: 960px) {\n        .name,\n        .subject {\n          font-weight: 500;\n        }\n      }\n    }\n  }\n\n  &.s3lecTed {\n    ${Avatar} {\n      background-color: ${palette('grey', 5)} !important;\n\n      ${Icon} {\n        font-size: 22px;\n        color: #fff;\n        display: inline-flex;\n      }\n\n      img {\n        display: none;\n      }\n\n      .sPl1t-l3t {\n        display: none;\n      }\n    }\n  }\n\n  &.eXpaNd3d {\n    @media only screen and (max-width: 960px) {\n      align-items: center;\n    }\n\n    .singleMailActions {\n      display: flex;\n    }\n\n    ${CheckboxWrapper} {\n      display: none;\n    }\n\n    .name {\n      display: none;\n    }\n\n    .subDesc {\n      width: 100%;\n    }\n\n    .subject {\n      font-weight: 300;\n      font-size: 18px;\n\n      @media only screen and (max-width: 960px) {\n        margin-bottom: 0;\n      }\n\n      &:after {\n        display: none;\n      }\n    }\n\n    .description {\n      display: none;\n    }\n\n    .mailDate {\n      display: none;\n    }\n  }\n`;\n\nconst MailListWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 3px;\n\n  @media only screen and (max-width: 960px) {\n    padding: 3px 0;\n  }\n\n  &.cH3cKed {\n    ${Avatar} {\n      opacity: 0;\n      visibility: hidden;\n    }\n\n    ${Checkbox} {\n      z-index: 2;\n    }\n\n    @media only screen and (max-width: 960px) {\n      ${Avatar} {\n        opacity: 1;\n        visibility: visible;\n        z-index: 1;\n      }\n\n      ${Checkbox} {\n        opacity: 0;\n        z-index: 2;\n      }\n\n      &:hover {\n        ${Avatar} {\n          opacity: 1;\n          visibility: visible;\n        }\n      }\n    }\n  }\n\n  .expansionPanel {\n    &:before {\n      display: none;\n    }\n  }\n\n  .expansionPanelSummary {\n    display: flex;\n    width: 100%;\n\n    @media only screen and (max-width: 960px) {\n      padding: 0 15px;\n    }\n  }\n`;\n\nconst SingleMailListBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 20px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  .receivingDate {\n    font-size: 13px;\n    color: ${palette('grey', 7)};\n    margin: 0 0 13px 30px;\n    flex-shrink: 0;\n    line-height: 1.2;\n    font-weight: 500;\n  }\n`;\n\nexport {\n  SingleMailListBlock,\n  MailListItem,\n  CheckboxWrapper,\n  MailListInfos,\n  Avatar,\n  Icon,\n  Checkbox,\n  MailAction,\n  ExpansionPanel,\n};\nexport default WithDirection(MailListWrapper);\n","import React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport SingleMail from '../singleMail';\nimport MailAction from '../singleMailActions';\nimport HelperText from '../../utility/helper-text';\nimport { timeDifference } from '../../../helpers/utility';\nimport MailListWrapper, {\n  MailListItem,\n  Checkbox,\n  CheckboxWrapper,\n  MailListInfos,\n  Avatar,\n  Icon,\n  ExpansionPanel,\n} from './mailList.style';\nimport {\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n} from '../../uielements/expansionPanel';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiExpansionPanelSummary: {\n      expanded: {\n        borderBottom: '1px solid #e0e0e0',\n        margin: '0',\n\n        '&:last-child': {\n          borderBottom: 0,\n          margin: '0 !important',\n        },\n      },\n      expandIcon: {\n        display: 'none',\n      },\n      content: {\n        width: '100%',\n        margin: '0',\n\n        '&:last-child': {\n          paddingRight: 0,\n        },\n      },\n    },\n    MuiExpansionPanelDetails: {\n      root: {\n        padding: '0',\n      },\n    },\n  },\n});\n\nexport default ({\n  mails,\n  selectMail,\n  selectedMail,\n  toggleListVisible,\n  replyMail,\n  changeReplyMail,\n  changeComposeMail,\n  bulkActions,\n  checkedMails,\n  updateCheckedMail,\n  selectedBucket,\n  hideSearchbar,\n  ...props\n}) => {\n  const activeClass = !hideSearchbar ? 'cH3cKed' : '';\n  const renderSingleMail = (mail, key) => {\n    const isSelected = selectedMail === mail.id;\n    const checked = checkedMails[mail.id] || false;\n    const recpName = mail.name;\n    const signature = {\n      splitLet: recpName\n        .match(/\\b(\\w)/g)\n        .join('')\n        .split('', 2),\n    };\n    // const activeClass = isSelected ? 'activeMail' : '';\n    const unreadMail = !mail.read ? 'unread ' : '';\n\n    const expandClass = isSelected ? 'eXpaNd3d ' : '';\n\n    const checkedItem = checked ? 's3lecTed ' : '';\n\n    const onMailClick = () => {\n      if (isSelected) {\n        selectMail();\n      } else {\n        selectMail(mail.id);\n        if (toggleListVisible) {\n          toggleListVisible();\n        }\n      }\n    };\n\n    return (\n      <MuiThemeProvider theme={theme} key={key}>\n        <ExpansionPanel\n          expanded={isSelected}\n          onChange={onMailClick}\n          className=\"expansionPanel\"\n        >\n          <ExpansionPanelSummary className=\"expansionPanelSummary\">\n            <MailListItem\n              onClick={onMailClick}\n              className={`${checkedItem}${expandClass}${unreadMail}`}\n            >\n              <CheckboxWrapper onClick={event => event.stopPropagation()}>\n                <Checkbox\n                  checked={checked}\n                  color=\"primary\"\n                  onChange={() => {\n                    checkedMails[mail.id] = !checked;\n                    updateCheckedMail(checkedMails);\n                  }}\n                />\n\n                <Avatar style={{ backgroundColor: selectedBucket }}>\n                  {mail.img ? (\n                    <img alt=\"#\" src={mail.img} />\n                  ) : (\n                    <span className=\"sPl1t-l3t\">{signature.splitLet}</span>\n                  )}\n                  <Icon>done</Icon>\n                </Avatar>\n              </CheckboxWrapper>\n\n              <MailListInfos>\n                <h3 className=\"name\">{mail.name}</h3>\n                <div className=\"subDesc\">\n                  <p className=\"subject\">{mail.subject}</p>\n                  <p className=\"description\">{mail.body}</p>\n                </div>\n                <span className=\"mailDate\">{timeDifference(mail.date)}</span>\n              </MailListInfos>\n              <MailAction\n                mail={mail}\n                filterMails={mails}\n                selectMail={selectMail}\n                toggleListVisible={toggleListVisible}\n                bulkActions={bulkActions}\n              />\n            </MailListItem>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            {isSelected && (\n              <SingleMail\n                mails={mails}\n                replyMail={replyMail}\n                changeReplyMail={changeReplyMail}\n                selectMail={selectMail}\n                selectedMail={selectedMail}\n                changeComposeMail={changeComposeMail}\n                toggleListVisible={toggleListVisible}\n                bulkActions={bulkActions}\n                {...props}\n              />\n            )}\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </MuiThemeProvider>\n    );\n  };\n\n  return (\n    <MailListWrapper className={`${activeClass}`}>\n      {mails.length === 0 ? <HelperText text=\"No mail found\" /> : ''}\n      {mails.map((mail, index) => renderSingleMail(mail, index))}\n    </MailListWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport Lists, {\n  ListItem as ListItems,\n  ListItemIcon as ListItemIcons,\n  ListItemText as ListItemTexts,\n} from '../../uielements/lists';\n\nconst List = styled(Lists)`\n  padding-bottom: 15px;\n`;\n\nconst ListItemIcon = styled(ListItemIcons)`\n  margin-right: 10px;\n`;\n\nconst ListItemText = styled(ListItemTexts)`\n  h3 {\n    font-size: 14px;\n    color: ${palette('grey', 8)};\n    text-transform: capitalize;\n  }\n`;\n\nconst ListItem = styled(ListItems)`\n  cursor: pointer;\n  padding: 10px 16px;\n\n  &:hover {\n    background-color: ${palette('grey', 2)};\n  }\n\n  &.active {\n    background-color: ${palette('grey', 3)};\n\n    ${ListItemText} {\n      h3 {\n        font-weight: 500;\n      }\n    }\n  }\n\n  .counter {\n    border-radius: 50%;\n    font-size: 12px;\n    background-color: #fff;\n    width: 25px;\n    height: 25px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 500;\n    color: ${palette('grey', 8)};\n  }\n`;\n\nexport default List;\nexport { ListItem, ListItemIcon, ListItemText };\n","import React from 'react';\nimport Icon from '../../uielements/icon';\nimport List, { ListItem, ListItemIcon, ListItemText } from './mailBucket.style';\n\nconst buckets = ['Inbox', 'Done'];\n\nconst bucketIcon = {\n  Inbox: 'inbox',\n  Sent: 'send',\n  Done: 'done',\n  Drafts: 'drafts',\n  Bin: 'delete',\n  Spam: 'report',\n};\n\nconst bucketColor = [\n  '#3949AB',\n  '#2296f3',\n  '#1eaa70',\n  '#757575',\n  '#757575',\n  '#757575',\n];\n\nfunction getUnread(mails) {\n  const unread = {};\n  mails.forEach(mail => {\n    if (!unread[mail.bucket]) {\n      unread[mail.bucket] = 0;\n    }\n    if (!mail.read) {\n      unread[mail.bucket] += 1;\n    }\n  });\n  return unread;\n}\n\nexport default function mailbuckets(\n  mails,\n  filterAction,\n  filterAttr,\n  onDrawerClose\n) {\n  const unread = getUnread(mails);\n  const renderSinglebucket = (bucket, key) => {\n    const onClick = () => {\n      filterAction({ bucket });\n      if (onDrawerClose) {\n        onDrawerClose();\n      }\n    };\n    const selectedBucket = bucket === filterAttr.bucket;\n    const activeClass = selectedBucket ? 'active' : '';\n    const iconColor =\n      bucketColor[buckets.findIndex(buckets => buckets === bucket)];\n    return (\n      <ListItem key={`bucket${key}`} onClick={onClick} className={activeClass}>\n        <ListItemIcon>\n          <Icon style={{ color: iconColor }}>{bucketIcon[bucket]}</Icon>\n        </ListItemIcon>\n        <ListItemText primary={bucket} />\n        {unread[bucket] ? (\n          <span className=\"counter\">{unread[bucket]}</span>\n        ) : (\n          ''\n        )}\n      </ListItem>\n    );\n  };\n  return (\n    <List>\n      {buckets.map((bucket, index) => renderSinglebucket(bucket, index))}\n    </List>\n  );\n}\nexport { buckets, bucketColor };\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport Buttons from '../../uielements/button';\nimport Icons from '../../uielements/icon';\n\nconst Button = styled(Buttons)``;\nconst Icon = styled(Icons)`\n  color: #ffffff;\n`;\n\nconst MailComposeBtnWrapper = styled.div`\n  position: fixed;\n  bottom: 25px;\n  right: 25px;\n  z-index: 1;\n\n  ${Button} {\n    background-color: ${palette('red', 7)};\n\n    &:hover {\n      background-color: ${palette('red', 9)};\n    }\n\n    > span {\n      &:last-child {\n        span {\n          background-color: #ffffff;\n        }\n      }\n    }\n  }\n`;\n\nexport { Button, Icon };\nexport default MailComposeBtnWrapper;\n","import React, { Component } from 'react';\nimport MailComposeBtnWrapper, { Button, Icon } from './mailComposeBtn.style';\n\nexport default class ComposeBtn extends Component {\n  render() {\n    return (\n      <MailComposeBtnWrapper>\n        <Button\n          variant=\"fab\"\n          onClick={event => {\n            this.props.changeComposeMail(true);\n            if (this.props.onDrawerClose) {\n              this.props.onDrawerClose();\n            }\n          }}\n        >\n          <Icon>add</Icon>\n        </Button>\n      </MailComposeBtnWrapper>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport Icons from '../../uielements/icon';\nimport IconButtons from '../../uielements/iconbutton';\nimport Checkboxs from '../../uielements/checkbox';\nimport Popovers from '../../uielements/popover';\nimport Lists, {\n  ListSubheader as ListSubheaders,\n  ListItem as ListItems,\n  ListItemText as ListItemTexts,\n} from '../../uielements/lists';\n\nconst IconButton = styled(IconButtons)`\n  width: 35px;\n  height: 35px;\n  padding: 0;\n`;\n\nconst Icon = styled(Icons)`\n  color: #ffffff;\n\n  @media only screen and (max-width: 1099px) {\n    font-size: 22px;\n  }\n`;\n\nconst DoneIcon = styled(Icons)`\n  font-size: 24px;\n  color: #ffffff;\n\n  @media only screen and (max-width: 1099px) {\n    font-size: 22px;\n  }\n`;\n\nconst Checkbox = styled(Checkboxs)`\n  color: #fff;\n`;\n\nconst Popover = styled(Popovers)``;\n\nconst List = styled(Lists)`\n  max-width: 360px;\n  width: 100%;\n\n  &.dropdownList {\n    padding-bottom: 0;\n  }\n`;\n\nconst ListSubheader = styled(ListSubheaders)`\n  height: 35px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  font-size: 12px;\n  color: ${palette('grey', 7)};\n  font-weight: 500;\n  padding-left: 22px;\n`;\n\nconst ListItem = styled(ListItems)`\n  padding: 8px 20px;\n\n  ${Icon} {\n    font-size: 19px;\n  }\n`;\n\nconst ListItemText = styled(ListItemTexts)`\n  h3 {\n    color: ${palette('grey', 6)};\n    font-size: 13px;\n    text-transform: capitalize;\n    font-weight: 500;\n  }\n`;\n\nconst ListLabel = styled.h3`\n  font-size: 15px;\n  font-weight: 500;\n  color: ${palette('grey', 8)};\n  padding: 6px 20px 14px;\n  margin: 0;\n`;\n\nconst BulkMailActionWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  z-index: 2;\n  padding: 0 20px;\n  padding-left: 18px;\n\n  @media only screen and (max-width: 1099px) {\n    padding: 0 10px;\n  }\n`;\n\nconst LeftPart = styled.div`\n  display: flex;\n  align-items: center;\n\n  .selectedNum {\n    font-size: 16px;\n    color: #ffffff;\n    margin-left: 5px;\n  }\n`;\n\nconst RightPart = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n`;\n\nexport {\n  LeftPart,\n  RightPart,\n  Popover,\n  Checkbox,\n  Icon,\n  DoneIcon,\n  IconButton,\n  List,\n  ListItem,\n  ListSubheader,\n  ListItemText,\n  ListLabel,\n};\nexport default BulkMailActionWrapper;\n","import React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { tags, tagColor, tagsIcon } from '../mailTags';\nimport notification from '../../notification';\nimport Divider from '../../uielements/dividers';\nimport BulkMailActionWrapper, {\n  LeftPart,\n  RightPart,\n  Icon,\n  DoneIcon,\n  IconButton,\n  Popover,\n  Checkbox,\n  List,\n  ListItem,\n  ListSubheader,\n  ListItemText,\n  ListLabel,\n} from './style';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiPopover: {\n      paper: {\n        minWidth: 250,\n        marginTop: 10,\n      },\n    },\n  },\n});\n\nclass SelectTagButton extends Component {\n  state = {\n    open: false,\n    anchorEl: null,\n  };\n  toggleState = event => {\n    if (event && event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.setState({\n      open: !this.state.open,\n      anchorEl: findDOMNode(this.button),\n    });\n  };\n  render() {\n    const tagOptions = tags.map(tag => (\n      <ListItem\n        button\n        onClick={event => {\n          event.stopPropagation();\n          this.setState({ open: false });\n          this.props.action('tag', tag);\n          notification('', `items moved in ${tag}`, '', true);\n        }}\n        key={tag}\n      >\n        <Icon style={{ color: tagColor[tags.findIndex(tags => tags === tag)] }}>\n          {tagsIcon[tag]}\n        </Icon>\n        <ListItemText primary={tag} />\n      </ListItem>\n    ));\n\n    return (\n      <div>\n        <MuiThemeProvider theme={theme}>\n          <Popover\n            open={this.state.open}\n            anchorEl={this.state.anchorEl}\n            onClose={this.toggleState}\n            anchorOrigin={{\n              horizontal: 'right',\n              vertical: 'bottom',\n            }}\n            transformOrigin={{\n              horizontal: 'right',\n              vertical: 'top',\n            }}\n          >\n            <List className=\"dropdownList\">\n              <ListLabel>Move selected to...</ListLabel>\n              <Divider />\n\n              <List>\n                <ListItem\n                  button\n                  onClick={event => {\n                    event.stopPropagation();\n                    this.props.action('report');\n                    notification('', `1 reported as spam`, '', true);\n                  }}\n                >\n                  <Icon style={{ color: '#776f6c' }}>report</Icon>\n                  <ListItemText primary=\"spam\" />\n                </ListItem>\n              </List>\n\n              <Divider />\n\n              <List\n                subheader={\n                  <ListSubheader component=\"div\">\n                    Nested List Items\n                  </ListSubheader>\n                }\n              >\n                {tagOptions}\n              </List>\n            </List>\n          </Popover>\n        </MuiThemeProvider>\n        <IconButton\n          onClick={this.toggleState}\n          ref={node => {\n            this.button = node;\n          }}\n        >\n          <Icon>more_vert</Icon>\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nconst countCheckMailed = checkedMails => {\n  let count = 0;\n  Object.keys(checkedMails).forEach(key => {\n    if (checkedMails[key]) {\n      count++;\n    }\n  });\n  return count;\n};\nconst allFilterChecked = filterMails => {\n  const checkedMails = {};\n  filterMails.forEach(mail => {\n    checkedMails[mail.id] = true;\n  });\n  return checkedMails;\n};\n\nexport default ({\n  bulkActions,\n  filterMails,\n  checkedMails,\n  updateCheckedMail,\n}) => {\n  const countChecked = countCheckMailed(checkedMails);\n  if (countChecked === 0) {\n    return <div />;\n  }\n  const allChecked = countChecked === filterMails.length;\n  const action = (actionName, value) => {\n    const payload = {\n      checkedMails,\n      action: actionName,\n      value,\n    };\n    bulkActions(payload);\n  };\n  return (\n    <BulkMailActionWrapper>\n      <LeftPart>\n        <Checkbox\n          checked={allChecked}\n          onChange={() => {\n            if (allChecked) {\n              updateCheckedMail({});\n            } else {\n              updateCheckedMail(allFilterChecked(filterMails));\n            }\n          }}\n        />\n        <span className=\"selectedNum\">{`${countChecked} selected`}</span>\n      </LeftPart>\n\n      <RightPart>\n        <IconButton\n          onClick={event => {\n            event.stopPropagation();\n            action('delete');\n            notification('', `${countChecked} mail deleted`, '', true);\n          }}\n        >\n          <Icon>delete</Icon>\n        </IconButton>\n        <IconButton\n          onClick={event => {\n            event.stopPropagation();\n            action('done');\n            notification('', `${countChecked} marked as done`, '', true);\n          }}\n        >\n          <DoneIcon>done</DoneIcon>\n        </IconButton>\n        <SelectTagButton action={action} />\n      </RightPart>\n    </BulkMailActionWrapper>\n  );\n};\n","import { createSelector } from 'reselect';\n\nconst allMailsSelector = state => state.allMails;\nconst filterAttrSelector = state => state.filterAttr;\nconst searchStringSelector = state => state.searchString;\n\nconst filterBucket = (mails, bucket) => {\n  const newMails = [];\n  mails.forEach(mail => {\n    if (bucket === mail.bucket) {\n      newMails.push(mail);\n    }\n  });\n  return newMails;\n};\nconst filterTag = (mails, tag) => {\n  const newMails = [];\n  mails.forEach(mail => {\n    if (mail.tags && mail.tags.indexOf(tag) !== -1) {\n      newMails.push(mail);\n    }\n  });\n  return newMails;\n};\nconst filterMaiil = (allMails, filterAttr, searchString) => {\n  let newMails = filterBucket(allMails, filterAttr.bucket);\n  if (filterAttr.tag) {\n    newMails = filterTag(allMails, filterAttr.tag);\n  }\n  if (searchString) {\n    const search = searchString.toUpperCase();\n    newMails = newMails.filter(mail =>\n      `${mail.email}${mail.body}${mail.subject}`.toUpperCase().includes(search)\n    );\n  }\n  return newMails;\n};\n\nexport default createSelector(\n  allMailsSelector,\n  filterAttrSelector,\n  searchStringSelector,\n  filterMaiil\n);\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport WithDirection from '../../../settings/withDirection';\nimport Input from '../input';\n\nconst InputSearches = styled(Input)`\n  > div {\n    &:before,\n    &:after {\n      height: 1px;\n    }\n\n    &:before {\n      background-color: ${palette('grey', 3)};\n      ${'' /* background-color: transparent; */};\n    }\n\n    &:hover {\n      &:before {\n        height: 1px !important;\n      }\n    }\n\n    input {\n      &::-webkit-input-placeholder {\n        text-align: ${props =>\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n        color: ${palette('grey', 4)};\n      }\n\n      &:-moz-placeholder {\n        text-align: ${props =>\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n        color: ${palette('grey', 4)};\n      }\n\n      &::-moz-placeholder {\n        text-align: ${props =>\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n        color: ${palette('grey', 4)};\n      }\n      &:-ms-input-placeholder {\n        text-align: ${props =>\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n        color: ${palette('grey', 4)};\n      }\n    }\n  }\n`;\n\nconst InputSearch = WithDirection(InputSearches);\n\nexport { InputSearch };\n","import React, { Component } from 'react';\nimport { InputSearch } from './inputSearch.style';\nimport notification from '../../notification';\n\nexport default class extends Component {\n  state = {\n    value: this.props.defaultValue || ''\n  };\n\n  onKeyPress = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      const { value } = this.state;\n      if (value && value.length > 0 && this.props.onSearch) {\n        this.props.onSearch(value);\n        if (this.props.clearOnSearch) {\n          this.setState({ value: '' });\n        }\n      } else {\n        notification('error', 'Please type something');\n      }\n    }\n  };\n  onChange = event => {\n    event.preventDefault();\n    const value = event.target.value;\n    this.setState({ value });\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  };\n  render() {\n    const { alwaysDefaultValue, defaultValue, className } = this.props;\n    const value = alwaysDefaultValue ? defaultValue : this.state.value;\n    return (\n      <InputSearch\n        className={className}\n        onKeyPress={this.onKeyPress}\n        onChange={this.onChange}\n        value={value}\n        label={this.props.label}\n        placeholder={this.props.placeholder}\n        fullWidth={this.props.fullWidth}\n        id={this.props.id}\n        disableUnderline={this.props.disableUnderline}\n        startAdornment={this.props.startAdornment}\n      />\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { FormControl as FormControls } from '../../components/uielements/form';\nimport { InputLabel as InputLabels } from '../../components/uielements/input';\nimport { InputAdornment as InputAdornments } from '../../components/uielements/input';\nimport InputSearches from '../../components/uielements/inputSearch';\nimport WithDirection from '../../settings/withDirection';\nimport Icons from '../../components/uielements/icon';\nimport IconButtons from '../../components/uielements/iconbutton';\nimport ComposeMails from '../../components/mail/composeMail';\n\nconst InputLabel = styled(InputLabels)``;\nconst InputAdornment = styled(InputAdornments)``;\nconst InputSearch = styled(InputSearches)``;\nconst Icon = styled(Icons)``;\nconst IconButton = styled(IconButtons)`\n  padding: 0;\n`;\n\nconst BackbtnWrapper = styled.div`\n  width: 100%;\n  height: 55px;\n  display: flex;\n  background-color: #ffffff;\n  align-items: center;\n  margin-bottom: 0;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.25);\n`;\n\nconst Navigations = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  flex-direction: column;\n  width: 270px;\n  padding-right: 50px;\n\n  @media only screen and (max-width: 1099px) {\n    width: 100%;\n    padding: 0;\n    background-color: #fff;\n  }\n`;\n\nconst MailBox = styled.div`\n  width: 100%;\n  padding: 20px 30px;\n  display: flex;\n  box-sizing: border-box;\n\n  * {\n    box-sizing: border-box;\n  }\n\n  @media only screen and (max-width: 1099px) {\n    width: 100%;\n    padding: 0;\n  }\n`;\n\nconst MailListBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst ComposeModalHeader = styled.div`\n  width: 100%;\n  display: flex;\n  height: 40px;\n  background-color: ${palette('grey', 8)};\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 20px;\n  padding-right: 10px;\n  box-sizing: border-box;\n  border-radius: 2px 2px 0 0;\n\n  * {\n    box-sizing: border-box;\n  }\n\n  ${Icon} {\n    color: #ffffff;\n    font-size: 18px;\n  }\n`;\n\nconst ComposeModalActionBtns = styled.div`\n  display: inline-flex;\n  align-items: center;\n\n  ${IconButton} {\n    width: 30px;\n    height: 30px;\n\n    ${Icon} {\n      color: ${palette('grey', 3)};\n      font-size: 20px;\n\n      &:hover {\n        color: #ffffff;\n      }\n    }\n  }\n`;\n\nconst ComposeMail = styled(ComposeMails)`\n  padding: 0 0 20px;\n`;\n\nconst FormControl = styled(FormControls)`\n  width: calc(100% - 25px);\n  height: calc(100% - 25px);\n  position: absolute;\n  top: 13px;\n  left: 13px;\n  z-index: 1;\n\n  @media only screen and (max-width: 1099px) {\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    background-color: rgba(255, 255, 255, 0.15);\n    padding: 0 10px;\n\n    ${IconButton} {\n      width: 38px;\n      height: 38px;\n      margin-right: 0;\n\n      ${Icon} {\n        font-size: 22px;\n        color: #ffffff;\n\n        &:hover {\n          color: #ffffff;\n        }\n      }\n    }\n  }\n\n  ${InputSearch} {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n\n    ${InputAdornment} {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: absolute;\n      left: 20px;\n\n      ${Icon} {\n        color: #ffffff;\n      }\n    }\n\n    input {\n      height: 100%;\n      padding: 7px 15px;\n      padding-left: 60px;\n      color: #ffffff;\n      background-color: rgba(255, 255, 255, 0.15);\n      transition: all 0.3s ease;\n\n      &:hover,\n      &:focus {\n        background-color: rgba(255, 255, 255, 0.25);\n      }\n\n      @media only screen and (max-width: 1099px) {\n        padding-left: 15px;\n        background-color: transparent;\n\n        &:hover,\n        &:focus {\n          background-color: transparent;\n        }\n      }\n\n      &::-webkit-input-placeholder {\n        color: #ffffff;\n        opacity: 1;\n      }\n\n      &:-moz-placeholder {\n        color: #ffffff;\n        opacity: 1;\n      }\n\n      &::-moz-placeholder {\n        color: #ffffff;\n        opacity: 1;\n      }\n      &:-ms-input-placeholder {\n        color: #ffffff;\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nconst MailActionBar = styled.div`\n  width: 100%;\n  height: 65px;\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #ffffff;\n  margin-bottom: 20px;\n  position: relative;\n  box-shadow: ${palette('shadows', 1)};\n\n  @media only screen and (max-width: 1099px) {\n    margin-bottom: 15px;\n  }\n`;\n\nconst SearchIcon = styled(IconButton)`\n  padding: 0;\n`;\nconst MailActionDefaultView = styled.div`\n  position: relative;\n  z-index: 2;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n\n  @media only screen and (max-width: 767px) {\n    padding: 0 10px;\n  }\n\n  ${IconButton} {\n    width: 38px;\n    height: 38px;\n    margin-right: 20px;\n\n    ${Icon} {\n      color: #ffffff;\n\n      &:hover {\n        color: #ffffff;\n      }\n    }\n  }\n\n  .cUrr3nt-bUck3T {\n    font-size: 17px;\n    color: #ffffff;\n    font-weight: 500;\n  }\n\n  ${SearchIcon} {\n    width: 35px;\n    height: 35px;\n    margin-right: 0;\n    margin-left: auto;\n\n    ${Icon} {\n      font-size: 22px;\n      color: #ffffff;\n\n      &:hover {\n        color: #ffffff;\n      }\n    }\n  }\n`;\n\nexport {\n  Navigations,\n  MailListBox,\n  MailActionBar,\n  MailActionDefaultView,\n  InputLabel,\n  Icon,\n  IconButton,\n  SearchIcon,\n  InputAdornment,\n  InputSearch,\n  FormControl,\n  ComposeModalHeader,\n  ComposeModalActionBtns,\n  ComposeMail,\n  BackbtnWrapper,\n};\nexport default WithDirection(MailBox);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport Scrollbars from '../../components/utility/customScrollBar';\nimport MailList from '../../components/mail/mailList';\nimport mailBuckets, {\n  buckets,\n  bucketColor,\n} from '../../components/mail/mailBucket';\nimport mailTags from '../../components/mail/mailTags';\nimport Divider from '../../components/uielements/dividers';\nimport ComposeBtn from '../../components/mail/mailComposeBtn';\nimport BulkMailActions from '../../components/mail/bulkMailActions';\nimport mailActions from '../../redux/mail/actions';\nimport mailSelector from '../../redux/mail/selector';\nimport Dialog from '../../components/uielements/dialogs';\nimport MailBox, {\n  Navigations,\n  MailListBox,\n  MailActionBar,\n  Icon,\n  IconButton,\n  InputAdornment,\n  InputSearch,\n  FormControl,\n  ComposeModalHeader,\n  ComposeModalActionBtns,\n  ComposeMail,\n} from './mailBox.style';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiDialog: {\n      root: {\n        zIndex: 1500,\n      },\n      paperWidthSm: {\n        maxWidth: '80vw',\n        width: '100%',\n      },\n    },\n  },\n});\n\nconst getBucketColor = ({ bucket }) => {\n  if (bucket) {\n    for (let i = 0; i < buckets.length; i++) {\n      if (buckets[i] === bucket) {\n        return bucketColor[i];\n      }\n    }\n  }\n  return '#fff';\n};\nconst countCheckMailed = checkedMails => {\n  let count = 0;\n  Object.keys(checkedMails).forEach(key => {\n    if (checkedMails[key]) {\n      count++;\n    }\n  });\n  return count;\n};\nconst DesktopView = props => {\n  const {\n    allMails,\n    searchString,\n    filterAttr,\n    filterMails,\n    composeMail,\n    filterAction,\n    changeComposeMail,\n    changeSearchString,\n    checkedMails,\n    scrollHeight,\n  } = props;\n  let BColor = getBucketColor(filterAttr);\n  const hideSearchbar = countCheckMailed(checkedMails) === 0;\n  return (\n    <MailBox style={{ height: scrollHeight }}>\n      <MuiThemeProvider theme={theme}>\n        <Dialog\n          open={composeMail}\n          onClose={() => changeComposeMail(false)}\n          disableBackdropClick\n        >\n          <ComposeModalHeader>\n            <Icon>drafts</Icon>\n\n            <ComposeModalActionBtns>\n              <IconButton>\n                <Icon>remove</Icon>\n              </IconButton>\n\n              <IconButton>\n                <Icon>fullscreen_exit</Icon>\n              </IconButton>\n\n              <IconButton onClick={() => changeComposeMail(false)}>\n                <Icon>close</Icon>\n              </IconButton>\n            </ComposeModalActionBtns>\n          </ComposeModalHeader>\n          <ComposeMail {...props} open={composeMail} />\n        </Dialog>\n      </MuiThemeProvider>\n\n      <Navigations>\n        <Scrollbars style={{ height: props.height - 70 }}>\n          {mailBuckets(allMails, filterAction, filterAttr)}\n          <Divider />\n          {mailTags(allMails, filterAction, filterAttr)}\n        </Scrollbars>\n      </Navigations>\n      <MailListBox>\n        <MailActionBar style={{ backgroundColor: BColor }}>\n          <BulkMailActions {...props} />\n          <FormControl style={{ display: hideSearchbar ? '' : 'none' }}>\n            <InputSearch\n              id=\"emailSearch\"\n              alwaysDefaultValue\n              className=\"mailSearch\"\n              placeholder=\"Search\"\n              defaultValue={searchString}\n              onChange={changeSearchString}\n              disableUnderline={true}\n              startAdornment={\n                <InputAdornment position=\"start\">\n                  <Icon>search</Icon>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        </MailActionBar>\n        <Scrollbars style={{ height: props.height - 180 }}>\n          <MailList\n            {...props}\n            mails={filterMails}\n            selectedBucket={BColor}\n            hideSearchbar={hideSearchbar}\n          />\n        </Scrollbars>\n      </MailListBox>\n\n      <ComposeBtn changeComposeMail={changeComposeMail} />\n    </MailBox>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    ...state.Mails,\n    filterMails: mailSelector(state.Mails),\n    scrollHeight: state.App.scrollHeight,\n  };\n}\n\nexport { getBucketColor };\nexport default connect(\n  mapStateToProps,\n  {\n    ...mailActions,\n  }\n)(DesktopView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactDrawer from 'react-motion-drawer';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport Scrollbars from '../../components/utility/customScrollBar';\nimport Dialog from '../../components/uielements/dialogs';\nimport MailList from '../../components/mail/mailList';\nimport mailBuckets, {\n  buckets,\n  bucketColor,\n} from '../../components/mail/mailBucket';\nimport mailTags from '../../components/mail/mailTags';\nimport Divider from '../../components/uielements/dividers';\nimport ComposeBtn from '../../components/mail/mailComposeBtn';\nimport ComposeMail from '../../components/mail/composeMail';\nimport BulkMailActions from '../../components/mail/bulkMailActions';\nimport mailActions from '../../redux/mail/actions';\nimport mailSelector from '../../redux/mail/selector';\nimport MailBox, {\n  Navigations,\n  MailListBox,\n  MailActionBar,\n  MailActionDefaultView,\n  Icon,\n  IconButton,\n  SearchIcon,\n  InputSearch,\n  FormControl,\n  ComposeModalHeader,\n  ComposeModalActionBtns,\n  BackbtnWrapper,\n} from './mailBox.style';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiDialog: {\n      root: {\n        zIndex: 1500,\n      },\n      paperWidthSm: {\n        maxWidth: '90vw',\n        width: '100%',\n      },\n    },\n  },\n});\n\nconst bucketStyle = {\n  boxShadow: '1px 0px 4px rgba(0, 0, 0, 0.3)',\n  marginRight: 0,\n  paddingRight: 0,\n};\n\nconst getBucketColor = ({ bucket }) => {\n  if (bucket) {\n    for (let i = 0; i < buckets.length; i++) {\n      if (buckets[i] === bucket) {\n        return bucketColor[i];\n      }\n    }\n  }\n  return '#fff';\n};\nconst countCheckMailed = checkedMails => {\n  let count = 0;\n  Object.keys(checkedMails).forEach(key => {\n    if (checkedMails[key]) {\n      count++;\n    }\n  });\n  return count;\n};\nconst DesktopView = props => {\n  const {\n    mobileSearchView,\n    allMails,\n    searchString,\n    filterAttr,\n    openDrawer,\n    filterMails,\n    composeMail,\n    filterAction,\n    changeComposeMail,\n    changeSearchString,\n    checkedMails,\n    toggleOpenDrawer,\n    toggleSearch,\n  } = props;\n  let BColor = getBucketColor(filterAttr);\n  const labelName = filterAttr.tag || filterAttr.bucket;\n  const hideSearchbar = countCheckMailed(checkedMails) === 0;\n  const drawerProps = {\n    overlayColor: 'rgba(0,0,0,0.75)',\n    drawerStyle: bucketStyle,\n  };\n  return (\n    <MailBox>\n      <MuiThemeProvider theme={theme}>\n        <Dialog\n          open={composeMail}\n          onClose={() => changeComposeMail(false)}\n          disableBackdropClick\n        >\n          <ComposeModalHeader>\n            <Icon>drafts</Icon>\n\n            <ComposeModalActionBtns>\n              <IconButton>\n                <Icon>remove</Icon>\n              </IconButton>\n\n              <IconButton>\n                <Icon>fullscreen_exit</Icon>\n              </IconButton>\n\n              <IconButton onClick={() => changeComposeMail(false)}>\n                <Icon>close</Icon>\n              </IconButton>\n            </ComposeModalActionBtns>\n          </ComposeModalHeader>\n          <ComposeMail {...props} open={composeMail} />\n        </Dialog>\n      </MuiThemeProvider>\n      <ReactDrawer\n        {...drawerProps}\n        open={openDrawer}\n        left={true}\n        onChange={value => {\n          if (!value) {\n            toggleOpenDrawer(false);\n          }\n        }}\n      >\n        <Navigations>\n          <BackbtnWrapper>\n            <IconButton onClick={() => toggleOpenDrawer(false)}>\n              <Icon>keyboard_backspace</Icon>\n            </IconButton>\n          </BackbtnWrapper>\n          <Scrollbars style={{ height: props.height - 55, paddingTop: 15 }}>\n            {mailBuckets(allMails, filterAction, filterAttr)}\n            <Divider />\n            {mailTags(allMails, filterAction, filterAttr)}\n          </Scrollbars>\n        </Navigations>\n      </ReactDrawer>\n\n      <MailListBox>\n        <MailActionBar style={{ backgroundColor: BColor }}>\n          <BulkMailActions {...props} />\n\n          <FormControl style={{ display: hideSearchbar ? '' : 'none' }}>\n            <IconButton onClick={toggleSearch}>\n              <Icon>arrow_back</Icon>\n            </IconButton>\n            <InputSearch\n              id=\"emailSearch\"\n              alwaysDefaultValue\n              className=\"mailSearch\"\n              placeholder=\"Search\"\n              defaultValue={searchString}\n              onChange={changeSearchString}\n              disableUnderline={true}\n            />\n          </FormControl>\n\n          <MailActionDefaultView\n            style={{\n              display: mobileSearchView ? 'none' : hideSearchbar ? '' : 'none',\n              backgroundColor: BColor,\n            }}\n          >\n            <IconButton onClick={() => toggleOpenDrawer(true)}>\n              <Icon>menu</Icon>\n            </IconButton>\n\n            <span className=\"cUrr3nt-bUck3T\">{labelName}</span>\n\n            <SearchIcon onClick={toggleSearch}>\n              <Icon>search</Icon>\n            </SearchIcon>\n          </MailActionDefaultView>\n        </MailActionBar>\n\n        <Scrollbars style={{ height: props.height - 145 }}>\n          <MailList\n            {...props}\n            mails={filterMails}\n            selectedBucket={BColor}\n            hideSearchbar={hideSearchbar}\n          />\n        </Scrollbars>\n      </MailListBox>\n\n      <ComposeBtn changeComposeMail={changeComposeMail} />\n    </MailBox>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    ...state.Mails,\n    filterMails: mailSelector(state.Mails),\n  };\n}\n\nexport { getBucketColor };\nexport default connect(\n  mapStateToProps,\n  {\n    ...mailActions,\n  }\n)(DesktopView);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DesktopView from './desktopView';\nimport TabView from './tabView';\n\nclass Mail extends Component {\n  render() {\n    const { view, height } = this.props;\n    const MailView = view === 'DesktopView' ? DesktopView : TabView;\n    return <MailView height={height} view={view} />;\n  }\n}\nexport default connect(state => ({\n  ...state.App,\n}))(Mail);\n"],"sourceRoot":""}