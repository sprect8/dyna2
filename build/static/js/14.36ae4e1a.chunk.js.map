{"version":3,"sources":["components/uielements/textfield/index.js","containers/POS/Checkout/orderInfo.js","containers/POS/Checkout/singleOrder.js","components/billingForm/billingForm.style.js","components/billingForm/billingForm.js","containers/POS/Checkout/checkout.style.js","containers/POS/Checkout/index.js"],"names":["_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_0___default","n","TextField","totalPrice","_this$props","this","props","price","quantity","name","_highlightResult","value","toFixed","trimName","substring","react_default","a","createElement","className","Component","OrderInfo","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","table","e","console","log","setState","staff","target","validating","notifyChange","id","handleChangeDate","checkoutDate","handleClicked","products","state","notifyCheckout","renderProducts","bind","assertThisInitialized","productQuantity","map","product","objectID","singleOrder_default","assign","key","autocomplete","config","label","error","onChange","TextField_default","style","marginTop","marginBottom","fullWidth","type","val","Date","toISOString","indexOf","getDate","InputLabelProps","shrink","uielements_button","disabled","length","variant","color","onClick","clearCart","connect","objectSpread","Ecommerce","styled","TextFields","_templateObject","Form","form","_templateObject2","BillingForm","email","multiline","event","_this2","noValidate","autoComplete","billingForm_style_TextField","required","margin","React","CheckoutPageWrapper","div","checkout_style_templateObject","palette","WithDirection","checkout","actions","Checkout","loading","timestamp","handleChanged","defineProperty","handleCheckout","that","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","customerEmail","recp_customer_email","customerName","recp_customer","staff_id","recp_staff_id","staffName","sales","recp_timestamp","forEach","x","obj","push","inventoryId","inventoryID","sale_inv_id","sale_price","sale_total_purchase","prod_name","swal","success","message","layoutWrapper","checkout_style","LinearProgress_default","display","rowColumn","papersheet","billingForm","orderInfo","checkingOut","App","withStyles","theme","withTheme"],"mappings":"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","file":"static/js/14.36ae4e1a.chunk.js","sourcesContent":["import TextField from '@material-ui/core/TextField';\n\nexport default TextField;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"../../../components/uielements/button\";\nimport Autocomplete from \"../../../components/masterdetail/autocomplete\"\nimport SingleOrderInfo from \"./singleOrder\";\nimport TextField from '@material-ui/core/TextField';\n\n\nfunction getDate() {\n  let val = new Date().toISOString()\n\n  val = val.substring(0, val.indexOf(\".\"));\n\n  return val;\n}\nlet totalPrice;\n\nclass OrderInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.renderProducts = this.renderProducts.bind(this);\n    this.state = {validating: false, staff: \"\"}\n  }\n\n  handleChange = (table) => (e) => {\n    console.log(\"Done\");\n    this.setState({staff: e.target.value, validating: false});\n\n    if (this.props.notifyChange) {\n      this.props.notifyChange(\"recp_staff_id\", e.target.id)      \n      this.props.notifyChange(\"staffName\", e.target.value)\n    }\n  }\n\n  handleChangeDate = (table) => (e) => {\n    \n    this.setState({checkoutDate: e.target.value, validating: false});\n\n    if (this.props.notifyChange) {\n      this.props.notifyChange(\"recp_timestamp\", e.target.value)\n    }\n  }\n\n  renderProducts() {\n    const { productQuantity, products } = this.props;\n    totalPrice = 0;\n    return productQuantity.map(product => {\n      totalPrice += product.quantity * products[product.objectID].price;\n      return (\n        <SingleOrderInfo\n          key={product.objectID}\n          quantity={product.quantity}\n          {...products[product.objectID]}\n        />\n      );\n    });\n  }\n\n  handleClicked = () => {\n    console.log(this.props.products);  \n    if (this.state.staff === \"\" || !this.state.staff) {\n      this.setState({validating: true});\n      return;\n    }  \n    this.props.notifyCheckout();\n  }\n\n  render() {\n    return (\n      <div className=\"orderInfo\">\n        <div className=\"orderTable\">\n          <div className=\"orderTableHead\">\n            <span className=\"tableHead\">Product</span>\n            <span className=\"tableHead\">Total</span>\n          </div>\n\n          <div className=\"orderTableBody\">{this.renderProducts()}</div>\n          <div className=\"orderTableFooter\">\n            <span>Total</span>\n            <span>${totalPrice.toFixed(2)}</span>\n          </div>   \n          \n          \n          <Autocomplete config=\"staffs\" label={\"Staff\"} value={this.state.staff ? this.state.staff : \"\"} error={this.state.validating} onChange={this.handleChange(\"staffs\")}/>\n      \n          <TextField\n          style={{marginTop: \"5px\", marginBottom:\"5px\"}}\n              fullWidth\n              id=\"dateCheckout\"\n              label={\"Date\"}\n              type=\"datetime-local\"\n              onChange={this.handleChangeDate(\"table\")}\n              value={this.state.checkoutDate? this.state.checkoutDate : getDate()}\n              InputLabelProps={{\n                  shrink: true,\n              }}\n          />\n\n          <Button disabled={this.props.productQuantity.length === 0} variant=\"raised\" color=\"primary\" className=\"orderBtn\" onClick={this.handleClicked}>\n            Place Order\n          </Button>\n          <Button onClick={this.props.clearCart}>\n            Next Order\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ...state.Ecommerce\n  };\n}\nexport default connect(mapStateToProps)(OrderInfo);\n","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    const { price, quantity, _highlightResult } = this.props;\n    const name = _highlightResult.name.value;\n    const totalPrice = (price * quantity).toFixed(2);\n    const trimName = name ? name.substring(0, 30) : '';\n    return (\n      <div className=\"singleOrderInfo\">\n        <p>\n          <span>{trimName}</span>\n          <span>x</span>\n          <span className=\"quantity\">{quantity}</span>\n        </p>\n        <span className=\"totalPrice\">${totalPrice}</span>\n      </div>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport TextFields from '../uielements/textfield';\n\nconst TextField = styled(TextFields)`\n  margin: 0 8px 16px;\n  \n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n\n  .menu {\n    width: 200px;\n  }\n`;\n\nexport { Form, TextField };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, TextField } from './billingForm.style';\n\nclass BillingForm extends React.Component {\n  state = {\n    name: '',\n    email: '',\n    multiline: 'Controlled',\n  };\n\n  handleChange = name => event => {\n    console.log(this.props.notifyChange);\n    if (this.props.notifyChange) {\n      this.props.notifyChange(name, event.target.value);\n    }\n  };\n\n  render() {\n    return (\n      <Form noValidate autoComplete=\"off\">\n        <TextField\n          required\n          fullWidth\n          id=\"fullName\"\n          className=\"firstNameField billingFormField\"\n          label=\"Full Name\"\n          margin=\"normal\"\n          value={this.state.name}\n          onChange={(e) => {\n            this.setState({name:e.target.value});\n            \n            this.handleChange(\"recp_customer\")(e);\n          }}\n        />\n        <br/>\n        <TextField\n          required\n          fullWidth\n          id=\"email\"\n          className=\"emailField billingFormField\"\n          label=\"Email Address\"\n          type=\"email\"\n          margin=\"normal\"\n          value={this.state.email}\n          onChange={(e) => {\n            this.setState({email:e.target.value});\n            this.handleChange(\"recp_customer_email\")(e);\n          }}\n        />\n      </Form>\n    );\n  }\n}\n\nBillingForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default BillingForm;\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport WithDirection from '../../../settings/withDirection';\n\nconst CheckoutPageWrapper = styled.div`\n  h3.sectionTitle {\n    font-size: 16px;\n    font-weight: 500;\n    color: ${palette('grey', 9)};\n    padding: 0 7px;\n  }\n\n  form {\n    padding-right: 20px;\n\n    @media only screen and (min-width: 768px) and (max-width: 991px) {\n      padding-right: 0;\n    }\n\n    @media only screen and (max-width: 767px) {\n      padding-right: 0;\n    }\n\n    .fullColumnWidth {\n      width: 100%;\n    }\n\n    .billingFormField {\n      margin-bottom: 20px;\n\n      @media only screen and (min-width: 768px) and (max-width: 991px) {\n        width: 100%;\n      }\n\n      @media only screen and (max-width: 767px) {\n        width: 100%;\n      }\n\n      label {\n        font-size: 0.9rem;\n        color: ${palette('grey', 8)};\n      }\n\n      > div {\n        input {\n          height: 1.65em;\n        }\n      }\n\n      &.selectField {\n        > div > div > div {\n          height: calc(1em + 14px);\n          font-size: 0.9rem;\n        }\n      }\n    }\n  }\n\n  .orderInfo {\n    width: 100%;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n\n    .orderTableHead {\n      width: 100%;\n      display: -webkit-box;\n      display: -webkit-flex;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-pack: justify;\n      -webkit-justify-content: space-between;\n      -ms-flex-pack: justify;\n      justify-content: space-between;\n      -webkit-align-items: center;\n      -webkit-box-align: center;\n      -ms-flex-align: center;\n      align-items: center;\n      margin-bottom: 20px;\n\n      span.tableHead {\n        font-size: 15px;\n        font-weight: 500;\n        color: ${palette('grey', 8)};\n        line-height: 1.2;\n      }\n    }\n\n    .orderTableBody {\n      width: 100%;\n      display: -webkit-box;\n      display: -webkit-flex;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-flex-direction: column;\n      -ms-flex-direction: column;\n      flex-direction: column;\n      margin-bottom: 10px;\n\n      .singleOrderInfo {\n        width: 100%;\n        display: -webkit-box;\n        display: -webkit-flex;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-pack: justify;\n        -webkit-justify-content: space-between;\n        -ms-flex-pack: justify;\n        justify-content: space-between;\n        -webkit-align-items: center;\n        -webkit-box-align: center;\n        -ms-flex-align: center;\n        align-items: center;\n        padding: 10px 0;\n        border-bottom: 1px solid ${palette('grey', 3)};\n\n        p {\n          margin: 0;\n\n          span {\n            font-size: 13px;\n            font-weight: 400;\n            color: ${palette('grey', 5)};\n            line-height: 1.5;\n            padding: 0 3px;\n            display: inline-block;\n          }\n\n          span.quantity {\n            font-size: 13px;\n            font-weight: 400;\n            color: ${palette('grey', 8)};\n            line-height: 1.5;\n            display: inline-block;\n          }\n        }\n\n        .totalPrice {\n          font-size: 13px;\n          font-weight: 500;\n          color: ${palette('grey', 5)};\n          line-height: 1.5;\n        }\n      }\n    }\n\n    .orderTableFooter {\n      width: 100%;\n      display: -webkit-box;\n      display: -webkit-flex;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-pack: justify;\n      -webkit-justify-content: space-between;\n      -ms-flex-pack: justify;\n      justify-content: space-between;\n      -webkit-align-items: center;\n      -webkit-box-align: center;\n      -ms-flex-align: center;\n      align-items: center;\n      margin-bottom: 40px;\n\n      span {\n        font-size: 14px;\n        font-weight: 500;\n        color: ${palette('grey', 8)};\n        line-height: 1.2;\n      }\n    }\n\n    .orderBtn {\n      width: 100%;\n    }\n  }\n`;\n\nexport default WithDirection(CheckoutPageWrapper);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport OrderInfo from './orderInfo';\n\nimport { connect } from 'react-redux';\nimport BillingForm from '../../../components/billingForm/billingForm';\nimport LayoutWrapper from '../../../components/utility/layoutWrapper';\nimport Papersheet from '../../../components/utility/papersheet';\nimport swal from 'sweetalert2';\n\nimport actions from '../../../redux/ecommerce/actions';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport {\n  Row,\n  OneThirdColumn,\n  TwoThirdColumn,\n  HalfColumn,\n} from '../../../components/utility/rowColumn';\nimport CheckoutPageWrapper from './checkout.style';\n\n\nfunction getDate() {\n  let val = new Date().toISOString()\n\n  val = val.substring(0, val.indexOf(\".\"));\n\n  return val;\n}\n\nconst styles = theme => ({});\nconst { checkout, clearCart } = actions;\n\nclass Checkout extends React.Component {\n  state = {\n    loading: false,\n    timestamp: getDate()\n  }\n  handleChanged = (name, value) => {\n    this.setState({ [name]: value })\n  }\n\n  componentWillReceiveProps(props) {\n    console.log(props);\n    if (props.success && !this.props.success) {\n      // done!\n      this.setState({loading: false});\n      swal(\n        'Checkout Completed Successfully',\n        'Successfully Checkout the Cart, your items have been sold',\n        'success'\n      )\n    }\n    else if (!props.success && this.state.loading) {      \n      this.setState({loading: false});\n      swal(\n        'Failed to Checkout',\n        'Failed to checkout, internal error : ' + props.message,\n        'error'\n      );\n    }\n  }\n\n  handleCheckout = () => {\n    let that = this;\n    if (this.props.productQuantity.length === 0) {\n      swal(\n        'Failed to Checkout',\n        'Cannot checkout an empty cart!',\n        'error'\n      )\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(function (position) {\n\n      // Get the coordinates of the current position.\n      var lat = position.coords.latitude;\n      var lng = position.coords.longitude;\n\n      let state = {\n        customerEmail: that.state.recp_customer_email,\n        customerName: that.state.recp_customer,\n        \"longitude\": lng,\n        \"latitude\": lat,\n        \"staff_id\": that.state.recp_staff_id,\n        \"staffName\": that.state.staffName,\n        \"sales\": [],\n        \"timestamp\": that.state.recp_timestamp,\n      }\n\n      that.props.productQuantity.forEach(x => {\n        // objectID\n\n        let obj = that.props.products[x.objectID];\n        let quantity = x.quantity;\n        \n        state.sales.push({\n           inventoryId : obj.inventoryID,\n           sale_inv_id : obj.inventoryID,\n           sale_price: obj.price,\n           sale_total_purchase: quantity,\n           prod_name: obj.name\n        })\n      });\n\n      console.log(\"items\", state);\n      console.log(\"Checkout\", that.props.checkout);\n\n      that.props.checkout(state); // lets checkout!\n      that.setState({loading: true})\n\n    });\n\n\n  }\n  render() {\n    return (\n      <LayoutWrapper>\n        <CheckoutPageWrapper className=\"checkoutPageWrapper\">\n          <LinearProgress style={{ display: this.state.loading ? \"block\" : \"none\" }} />\n\n          <Row>\n            <HalfColumn>\n              <Papersheet>\n                <h3 className=\"sectionTitle\">Billing details</h3>\n                <BillingForm notifyChange={this.handleChanged} />\n              </Papersheet>\n            </HalfColumn>\n\n            <HalfColumn>\n              <Papersheet>\n                <OrderInfo notifyChange={this.handleChanged} clearCart={this.props.clearCart} checkingOut={this.state.loading} notifyCheckout={this.handleCheckout} />\n              </Papersheet>\n            </HalfColumn>\n          </Row>\n        </CheckoutPageWrapper>\n      </LayoutWrapper>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    ...state.App,\n    ...state.Ecommerce\n  }),\n  { checkout, clearCart }\n)(withStyles(styles, { withTheme: true })(Checkout));\n\n"],"sourceRoot":""}